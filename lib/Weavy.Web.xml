<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Weavy.Web</name>
    </assembly>
    <members>
        <member name="T:Weavy.Web.ApiConfig">
            <summary>
            Web Api configuration class.
            </summary>
        </member>
        <member name="M:Weavy.Web.ApiConfig.Configure(System.Web.Http.HttpConfiguration)">
            <summary>
            Configure the Web Api with model binders, filters, formatters, routing etc.
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Weavy.Web.ApiConfig.ConfigureDocumentation(System.Web.Http.HttpConfiguration)">
            <summary>
            Configure Web Api documentation and samples.
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:Weavy.Web.AuthConfig">
            <summary>
            Authentication configuration class.
            </summary>
        </member>
        <member name="M:Weavy.Web.AuthConfig.ConfigureAuthentication(Owin.IAppBuilder)">
            <summary>
            Configures authentication.
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:Weavy.Web.MvcConfig">
            <summary>
            MVC application configuration class.
            </summary>
        </member>
        <member name="M:Weavy.Web.MvcConfig.Configure">
            <summary>
            Configure the MVC app with model binders, filters, routing, view engines etc.
            </summary>
        </member>
        <member name="T:Weavy.Web.Startup">
            <summary>
            OWIN Startup class that configures our application on application start.
            </summary>
        </member>
        <member name="M:Weavy.Web.Startup.Configuration(Owin.IAppBuilder)">
            <summary>
            Configures the Weavy web application.
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Attributes.HandleExceptionAttribute">
            <summary>
            Logs unhandled exceptions and creates an error respnse.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Attributes.HandleExceptionAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Attributes.HandleValidationAttribute">
            <summary>
            Creates an error response for validation errors.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Attributes.HandleValidationAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Attributes.NoDocumentationAttribute">
            <summary>
            Api controllers and methods with this attribute will not have any automatic documentation generated.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.AppQueryBinder">
            <summary>
            Binds the model to a AppQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.AppQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.AppQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.UserQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.AppQueryBinder.BindAppGuids(Weavy.Core.Models.AppQuery,System.String[])">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="guids"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.EventQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.EventQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.EventQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.EventQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.EventQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.RoleQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.RoleQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.RoleQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.RoleQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.RoleQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.IntsBinder">
            <summary>
            Binds the model to an array of integers.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.IntsBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="actionContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.ItemQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.ItemQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.ItemQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.ItemQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.ItemQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.NotificationQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.NotificationQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.NotificationQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.NotificationQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.NotificationQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.NotificationQueryBinder.BindEventTypes(System.String[])">
            <summary>
            Binds log entry types from qs.
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.QueryBinder">
            <summary>
            Binds the model to a Query object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.QueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.QueryBinder.BindModel(Weavy.Core.Models.QueryOptions,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.Query"/> object by parsing the query string.
            </summary>
            <param name="opts"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.QueryBinder.BindEntityTypes(Weavy.Core.Models.Query,System.String[])">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="types"></param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.QueryBinder.BindDateRange(Weavy.Core.Models.Query,System.String)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.QueryOptionsBinder">
            <summary>
            Binds the model to a QueryOptions object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.QueryOptionsBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.QueryOptionsBinder.BindModel(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return QueryOptions by parsing the query string.
            </summary>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.SpaceQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.SpaceQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.SpaceQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.SpaceQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.SpaceQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.TaskQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.TaskQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.TaskQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.TaskQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.UserQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Binders.UserQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.UserQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.UserQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Binders.UserQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.UserQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.AppsController">
            <summary>
            The Apps API allows a user to manage apps in a space. 
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.DeleteFollow(System.Int32)">
            <summary>
            Mark an app as unfollowed by the current user.
            </summary>
            <param name="id">The app id.</param>
            <returns>The unfollowed app.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.DeleteLike(System.Int32)">
            <summary>
            Mark an app as unliked by the current user.
            </summary>
            <param name="id">The app id.</param>
            <returns>The unliked app.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.DeleteStar(System.Int32)">
            <summary>
            Mark an app as unstarred by the current user.
            </summary>
            <param name="id">The app id.</param>
            <returns>The unstarred app.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.Get(System.Int32)">
            <summary>
            Get the app with the specified id.
            </summary>
            <param name="id">The app id.</param>
            <returns>Returns an app.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.Search(Weavy.Core.Models.AppQuery)">
            <summary>
            Searches for apps.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.Query"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.PostFollow(System.Int32)">
            <summary>
            Mark an app as followed by the current user.
            </summary>
            <param name="id">The app id.</param>
            <returns>The followed app.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.PostLike(System.Int32)">
            <summary>
            Mark an app as liked by the current user.
            </summary>
            <param name="id">The app id.</param>
            <returns>The liked app.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.PostStar(System.Int32)">
            <summary>
            Mark an app as starred by the current user.
            </summary>
            <param name="id">The app id.</param>
            <returns>The starred app.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.Apps(System.Int32)">
            <summary>
            Get all apps in a space.
            </summary>
            <param name="id">The space id.</param>
            <returns>The apps in a space.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.GetChildren(System.Int32)">
            <summary>
            Get all children for an app.
            </summary>
            <param name="id">The app id.</param>
            <returns>The children to the app.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.Update(System.Int32,Weavy.Web.Areas.Api.Models.Delta{Weavy.Core.Models.App})">
            <summary>
            Updates an app.
            </summary>
            <param name="id">Id of the app to update.</param>
            <param name="app">The app to update.</param>
            <returns>The app item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.Move(System.Int32,System.Int32)">
            <summary>
            Moves an app.
            </summary>
            <param name="id">Id of the app to move.</param>
            <param name="destinationId">The id for the destination app.</param>
            <returns>The moved app.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.AppsController.Insert(Weavy.Web.Areas.Api.Models.AppIn)">
            <summary>
            Inserts a new app in the specified space.
            </summary>
            <param name="app">The app to insert.</param>
            <returns>The inserted app.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.CommentsController">
            <summary>
            Comments are made by users on different objects such as posts or items. Comments are very similar to posts and messages, they can have attachments, be liked etc.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.GetAppComments(System.Int32)">
            <summary>
            Retrieves the comments for an app.
            </summary>
            <param name="id">The app id.</param>
            <returns>Returns a list of comments.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.GetFileComments(System.Int32)">
            <summary>
            Retrieves the comments for a file.
            </summary>
            <param name="id">The file id.</param>
            <returns>Returns a list of comments.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.GetItemComments(System.Int32)">
            <summary>
            Retrieves the comments for an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>Returns a list of comments.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.GetPostComments(System.Int32)">
            <summary>
            Retrieves the comments for a post.
            </summary>
            <param name="id">The post id.</param>
            <returns>Returns a list of comments.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.GetTaskComments(System.Int32)">
            <summary>
            Retrieves the comments for a task.
            </summary>
            <param name="id">The task id.</param>
            <returns>Returns a list of comments.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.GetEventComments(System.Int32)">
            <summary>
            Retrieves the comments for an event.
            </summary>
            <param name="id">The event id.</param>
            <returns>Returns a list of comments.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.CommentStream(Weavy.Core.Models.QueryOptions,System.Boolean)">
            <summary>
            Retrieves the stream of comments.
            </summary>
            <param name="opts">Query options for paging, sorting etc.</param>
            <param name="following">Set to false to return the global stream (i.e. everything the user has access to) or true to only return comments followed by the user.</param>
            <returns>Returns a list of comments.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.Get(System.Int32)">
            <summary>
            Get the comment with the specified id.
            </summary>
            <param name="id">The comment id.</param>
            <returns>Returns a comment.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.PostLike(System.Int32)">
            <summary>
            Mark a comment as liked by the current user.
            </summary>
            <param name="id">The comment id.</param>
            <returns>Returns the liked comment.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.PostStar(System.Int32)">
            <summary>
            Mark a comment as starred by the current user.
            </summary>
            <param name="id">The comment id.</param>
            <returns>Returns the liked comment.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.DeleteLike(System.Int32)">
            <summary>
            Mark a comment as unliked by the current user.
            </summary>
            <param name="id">The comment id.</param>
            <returns>Returns the unliked comment.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.DeleteStar(System.Int32)">
            <summary>
            Mark a comment as unstarred by the current user.
            </summary>
            <param name="id">The comment id.</param>
            <returns>Returns the unstarred comment.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.Insert(Weavy.Web.Areas.Api.Models.CommentIn)">
            <summary>
            Insert a new comment.
            </summary>
            <param name="comment">The comment to insert.</param>
            <returns>Returns the posted comment.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.Update(System.Int32,Weavy.Web.Areas.Api.Models.CommentUp)">
            <summary>
            Updates a comment.
            </summary>
            <param name="id">Id of the comment to update.</param>
            <param name="comment">The comment to update.</param>
            <returns>The updated comment.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.Delete(System.Int32)">
            <summary>
            Delete the comment with the specified id.
            </summary>
            <param name="id">Id of the comment to delete.</param>
            <returns>Returns the delete comment.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.Trash(System.Int32)">
            <summary>
            Trashes the comment with the specified id.
            </summary>
            <param name="id">Id of the comment to trash.</param>
            <returns>Returns the trashed comment.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.CommentsController.Restore(System.Int32)">
            <summary>
            Restores the comment with the specified id.
            </summary>
            <param name="id">Id of the comment to restore.</param>
            <returns>Returns the restored comment.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.EmbedsController">
            <summary>
            The Embeds API converts standard URLs into embedded videos, images and rich article previews. The api returns data in the oEmbed format. 
            See &lt;a href="http://oembed.com/"&gt;http://oembed.com/&lt;/a&gt; for details.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EmbedsController.Post(Weavy.Web.Areas.Api.Models.EmbedIn)">
            <summary>
            Creates an embed for the given url.
            </summary>
            <param name="embed">Contains the URL to retrieve embedding information for.</param>
            <returns>The embed for the given url.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EmbedsController.Get(System.Int32)">
            <summary>
            Gets the embed with the specified id.
            </summary>
            <param name="id">ID of the embed.</param>
            <returns>An embed.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.EventsController">
            <summary>
            The Tasks API allows a user to manage tasks. 
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.Delete(System.Int32)">
            <summary>
            Permanently deletes an event.
            </summary>
            <param name="id">Id of the event to delete.</param>
            <returns>The deleted event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.Trash(System.Int32)">
            <summary>
            Thrash an event.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.Restore(System.Int32)">
            <summary>
            Restores the event with the specified id.
            </summary>
            <param name="id">Id of the event to restore.</param>
            <returns>Returns the restored event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.DeleteFollow(System.Int32)">
            <summary>
            Unfollow an event.
            </summary>
            <param name="id">The event id.</param>
            <returns>The unfollowed event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.DeleteLike(System.Int32)">
            <summary>
            Unlike an event.
            </summary>
            <param name="id">The event id.</param>
            <returns>The unliked event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.DeleteStar(System.Int32)">
            <summary>
            Unstar an event.
            </summary>
            <param name="id">The event id.</param>
            <returns>The unstarred event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.Get(System.Int32)">
            <summary>
            Get the event with the specified id.
            </summary>
            <param name="id">The event id.</param>
            <returns>Returns an event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.GetSpaceEvents(System.Int32)">
            <summary>
            Get all events in the specified space.
            </summary>
            <param name="id">The space id.</param>
            <returns>Returns a list of <see cref="T:Weavy.Core.Models.Task"/> objects.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.Search(Weavy.Core.Models.EventQuery)">
            <summary>
            Searches for events.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.EventQuery"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.PostFollow(System.Int32)">
            <summary>
            Follow an event.
            </summary>
            <param name="id">The event id.</param>
            <returns>The followed event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.PostLike(System.Int32)">
            <summary>
            Like an event.
            </summary>
            <param name="id">The event id.</param>
            <returns>The liked event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.PostStar(System.Int32)">
            <summary>
            Star an event.
            </summary>
            <param name="id">The event id.</param>
            <returns>The starred event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.InsertIntoSpace(System.Int32,Weavy.Web.Areas.Api.Models.EventIn)">
            <summary>
            Inserts a new event into the specified space.
            </summary>
            <param name="id">Id of the space where the event should be inserted.</param>
            <param name="evt">The event to insert.</param>
            <returns>The inserted event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.AddAttendees(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Add attendees to an event.
            </summary>
            <param name="id">The id of the event.</param>
            <param name="userids">The userids of the attendee to add.</param>
            <returns>The updated event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.AddAttendee(System.Int32,System.Int32)">
            <summary>
            Add an attendee to an event.
            </summary>
            <param name="id">The id of the event.</param>
            <param name="userid">The userid of the attendee to add.</param>
            <returns>The updated event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.RemoveAttendee(System.Int32,System.Int32)">
            <summary>
            Remove attendee from an event.
            </summary>
            <param name="id">The id of the event.</param>
            <param name="userid">The userid of the attendee to remove.</param>
            <returns>The updated event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.Update(System.Int32,Weavy.Web.Areas.Api.Models.Delta{Weavy.Core.Models.Event})">
            <summary>
            Updates an event.
            </summary>
            <param name="id">Id of the event to update.</param>
            <param name="evt">The event to update.</param>
            <returns>The updated event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.SetParticipation(System.Int32,System.String)">
            <summary>
            Sets participation status for the current user.
            </summary>
            <param name="id">Id of the event.</param>
            <param name="status">Participation status to set, i.e. accepted, tentative, declined.</param>
            <returns>The event.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.EventsController.GetEvent(System.Int32)">
            <summary>
            Gets the event or throws 404 if event was not found.
            </summary>
            <param name="id">The id of the event.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.FilesController">
            <summary>
            The Files API has methods for managing files, e.g. uploading, attaching, downloading, deleting etc. 
            Files have id, name, mime-type, size and a link to download the file. Certain types of files can also have additional properties, e.g. width and height for images.
            Files can be replaced by newer revisions.
            Uploading a file uses multipart/form-data instead of JSON. 
            &lt;p&gt;When requesting a thumbnail image it is possible to provide additional options to the resize operation. The following values are possible:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;fit|pad|crop|stretch - determines how to resolve aspect ratio differences between the requested size and the original image's size&lt;/li&gt;
            &lt;li&gt;topleft|topcenter|topright|middleleft|middlecenter|middleright|bottomleft|bottomcenter - determines how to align the image when padding or cropping&lt;/li&gt;
            &lt;li&gt;ff000000 - the background color to apply, white will be used for jpg images when background is unspecified&lt;/li&gt;
            &lt;li&gt;q[0-100] - the encoding quality to use, only applies to jpg images&lt;/li&gt;
            &lt;li&gt;down|both|canvas - controls whether the image is allowed to upscale, downscale, both, or if only the canvas gets to be upscaled&lt;/li&gt;
            &lt;li&gt;noicc - when specified the ICC profile of the image will be ignored&lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;The request /api/files/123/64x128-pad,ff0000,q50/filename.jpg returns a resized image of file with id=123, the image is padded to fit in a rectangle with dimensions 64x128 pixels, has a red background color and is encoded with jpeg quality 50.&lt;/p&gt;
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetSpaceFiles(System.Int32)">
            <summary>
            Returns a list of files attached to the specified space.
            </summary>
            <param name="id">The space id.</param>
            <returns>A list of files.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetAppFiles(System.Int32)">
            <summary>
            Returns a list of files attached to the specified app.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetItemFiles(System.Int32)">
            <summary>
            Returns a list of files attached to the specified item.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetTaskFiles(System.Int32)">
            <summary>
            Returns a list of files attached to the specified task.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetEventFiles(System.Int32)">
            <summary>
            Returns a list of files attached to the specified event.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.PostAppFiles(System.Int32)">
            <summary>
            Upload and attach new file(s) to an app. We use multipart/form-data for the request format.
            </summary>
            <returns>The uploaded file(s).</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.PostEventFiles(System.Int32)">
            <summary>
            Upload and attach new file(s) to an event. We use multipart/form-data for the request format.
            </summary>
            <returns>The uploaded file(s).</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.PostItemFiles(System.Int32)">
            <summary>
            Upload and attach new file(s) to an item. We use multipart/form-data for the request format.
            </summary>
            <returns>The uploaded file(s).</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.PostTaskFiles(System.Int32)">
            <summary>
            Upload and attach new file(s) to a task. We use multipart/form-data for the request format.
            </summary>
            <returns>The uploaded file(s).</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.AttachTaskFiles(System.Int32,Weavy.Web.Areas.Api.Models.AttachIn)">
            <summary>Attach file(s) to a task.</summary>
            <param name="id">Id of the task where the files should be attached.</param>
            <param name="files">Ids of the files to attach.</param>
            <returns>The attached file(s).</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.AttachEventFiles(System.Int32,Weavy.Web.Areas.Api.Models.AttachIn)">
            <summary>Attach file(s) to a event.</summary>
            <param name="id">Id of the event where the files should be attached.</param>
            <param name="files">Ids of the files to attach.</param>
            <returns>The attached file(s).</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.AttachItemFiles(System.Int32,Weavy.Web.Areas.Api.Models.AttachIn)">
            <summary>Attach file(s) to an item.</summary>
            <param name="id">Id of the item where the files should be attached.</param>
            <param name="files">Ids of the files to attach.</param>
            <returns>The attached file(s).</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.AttachAppFiles(System.Int32,Weavy.Web.Areas.Api.Models.AttachIn)">
            <summary>Attach file(s) to an app.</summary>
            <param name="id">Id of the app where the files should be attached.</param>
            <param name="files">Ids of the files to attach.</param>
            <returns>The attached file(s).</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.UploadAndAttach(Weavy.Core.Models.IEntity)">
            <summary>
            Helper method for uploading files and attaching them to the specified entity.
            </summary>
            <param name="entity">Entity where files should be attached, <c>null</c> to just upload without attaching the files.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetMessageFiles(System.Int32)">
            <summary>
            Returns a list of files attached to the specified post.
            </summary>
            <param name="id">The post id.</param>
            <returns>A list of files.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetCommentFiles(System.Int32)">
            <summary>
            Returns a list of files attached to the specified comment.
            </summary>
            <param name="id">The comment id.</param>
            <returns>A list of fies.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Get(System.Int32)">
            <summary>
            Get the file with the specified id.
            </summary>
            <param name="id">Id of the file to get.</param>
            <returns>Returns a file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetData(System.Int32,System.String)">
            <summary>
            Get the binary data of the specified file.
            </summary>
            <param name="id">Id of the file to return.</param>
            <param name="name">The file name.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetResized(System.Int32,System.Int32,System.String)">
            <summary>
            Get a (resized) thumbnail image of the specified file.
            </summary>
            <param name="id">Id of the file to return.</param>
            <param name="size">The image will be resized to fit in square with sides of size pixels.</param>
            <param name="name">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetResized(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.String)">
            <summary>
            Get a (resized) thumbnail image of the specified files.
            </summary>
            <param name="ids">Id of the files to return.</param>
            <param name="size">The image will be resized to fit in square with sides of size pixels.</param>
            <param name="name">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetResized(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get a (resized) thumbnail image of the specified file.
            </summary>
            <param name="id">Id of the file to return.</param>
            <param name="size">The image will be resized to fit in square with sides of size pixels.</param>
            <param name="options">A comma separated string with resize options.</param>
            <param name="name">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetResized(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.String,System.String)">
            <summary>
            Get a (resized) thumbnail image of the specified files.
            </summary>
            <param name="ids">Id of the files to return.</param>
            <param name="size">The image will be resized to fit in square with sides of size pixels.</param>
            <param name="options">A comma separated string with resize options.</param>
            <param name="name">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetResized(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Get a (resized) thumbnail image of the specified file.
            </summary>
            <param name="id">Id of the file to return.</param>
            <param name="width">The width (in pixels) of the resized image.</param>
            <param name="height">The height (in pixels) of the resized image.</param>
            <param name="name">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetResized(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Int32,System.String)">
            <summary>
            Get a (resized) thumbnail image of the specified files.
            </summary>
            <param name="ids">Id of the files to return.</param>
            <param name="width">The width (in pixels) of the resized image.</param>
            <param name="height">The height (in pixels) of the resized image.</param>
            <param name="name">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetResized(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get a (resized) thumbnail image of the specified file.
            </summary>
            <param name="id">Id of the file to return.</param>
            <param name="width">The width (in pixels) of the resized image.</param>
            <param name="height">The height (in pixels) of the resized image.</param>
            <param name="options">A comma separated string with resize options.</param>
            <param name="name">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetResized(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get a (resized) thumbnail image of the specified files.
            </summary>
            <param name="ids">Id of the files to return.</param>
            <param name="width">The width (in pixels) of the resized image.</param>
            <param name="height">The height (in pixels) of the resized image.</param>
            <param name="options">A comma separated string with resize options.</param>
            <param name="name">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Post">
            <summary>
            Uploads new file(s). We use multipart/form-data for the request format.
            After upload the files can be used as attachment references when posting new messages, comments etc. 
            </summary>
            <returns>The uploaded file(s).</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Replace(System.Int32)">
            <summary>
            Replace the binary content of a file.
            </summary>
            <param name="id">The id of the file to replace the content for.</param>
            <returns>The updated file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Update(System.Int32,Weavy.Core.Models.File)">
            <summary>
            Updates the description of the file.
            </summary>
            <param name="id">Id of the file to update.</param>
            <param name="file">The file to update.</param>
            <returns>The updated file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Tags(Weavy.Core.Models.Query)">
            <summary>
            Searches for tags attached to files.
            </summary>
            <param name="query">The query.</param>
            <returns>A search result.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Restore(System.Int32)">
            <summary>
            Restores a thrashed file from the recycle bin.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Trash(System.Int32)">
            <summary>
            Moves a file to the recycle bin.
            </summary>
            <param name="id"></param>
            <returns>The file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Move(System.Int32,Weavy.Core.Models.Entity)">
            <summary>
            Move a file
            <param name="id">Id of the file to move.</param>
            <param name="destination">The destination entity</param>
            </summary>
            <returns>The moved file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Delete(System.Int32)">
            <summary>
            Permanently deletes a file.
            </summary>
            <param name="id">Id of the file to delete.</param>
            <returns>The deleted file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.PostFollow(System.Int32)">
            <summary>
            Follow a file.
            </summary>
            <param name="id">The file id.</param>
            <returns>The followed file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.PostLike(System.Int32)">
            <summary>
            Mark a file as liked by the current user.
            </summary>
            <param name="id">The file id.</param>
            <returns>The liked file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.PostStar(System.Int32)">
            <summary>
            Mark a file as starred by the current user.
            </summary>
            <param name="id">The file id.</param>
            <returns>The starred file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.DeleteFollow(System.Int32)">
            <summary>
            Unfollow a file.
            </summary>
            <param name="id">The file id.</param>
            <returns>The unfollowed file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.DeleteLike(System.Int32)">
            <summary>
            Mark a file as unliked by the current user.
            </summary>
            <param name="id">The file id.</param>
            <returns>The unliked file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.DeleteStar(System.Int32)">
            <summary>
            Mark a file as unstarred by the current user.
            </summary>
            <param name="id">The file id.</param>
            <returns>The unstarred file.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.CreateOfficeDocument(System.Int32,Weavy.Web.Areas.Api.Models.DocumentIn)">
            <summary>
            Creates and returns a new Office document.
            </summary>
            <param name="id">Id of the app where the file should be created.</param>
            <param name="model"></param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetFile(System.Int32,System.Boolean)">
            <summary>
            Helper method to get a <see cref="T:Weavy.Core.Models.File"/> from the repository.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.File"/>.</param>
            <param name="filter">True to filter the result. False to bypass filter.</param>
            <returns>The <see cref="T:Weavy.Core.Models.File"/> or throws an exception.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.GetFileInfos(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)">
            <summary>
            Helper method to get files from the repository.
            </summary>
            <param name="ids">The ids of the files.</param>
            <param name="filter">True to filter the result. False to bypass filter.</param>
            <returns>The <see cref="T:Weavy.Core.Models.File"/> or throws an exception.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Transmit(Weavy.Core.Models.File,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Transmits (and optionally resizes) the specified file to the HTTP response output stream.
            </summary>
            <param name="file">The file to transmit.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="options"></param>
            <param name="download"><c>true</c> to force download of the file, <c>false</c> to display the file inline.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.FilesController.Transmit(System.IO.FileInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Transmits and resizes the specified file to the HTTP response output stream.
            </summary>
            <param name="file">The file to transmit.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="options"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.RolesController">
            <summary>
            A user can be a member of zero or more roles.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.RolesController.Get(System.Int32)">
            <summary>
            Retrieves a role.
            </summary>
            <param name="id">The role id.</param>
            <returns>Returns a role.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.RolesController.GetRoles(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Retrieves the roles contained in the ids array.
            </summary>
            <param name="ids">An array of id's.</param>
            <returns>A list of roles.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.RolesController.Search(Weavy.Core.Models.RoleQuery)">
            <summary>
            Searches for roles.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.RoleQuery"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.ItemsController">
            <summary>
            The Items API allows a user to manage items in an app. 
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Delete(System.Int32)">
            <summary>
            Permanently delete an item.
            </summary>
            <param name="id">Id of the item to delete.</param>
            <returns>The deleted item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Trash(System.Int32)">
            <summary>
            Trash an item, i.e. move it to the recycle bin.
            </summary>
            <param name="id">Id of the item to trash.</param>
            <returns>The trashed item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.TrashItems(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Trash a list of items, i.e. move them to the recycle bin.
            </summary>
            <param name="ids">A comma-separated list of item ids.</param>
            <returns>Returns the trashed items.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Restore(System.Int32)">
            <summary>
            Restore a trashed item from the recycle bin.
            </summary>
            <param name="id">Id of the item to restore.</param>
            <returns>The restored item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.DeleteFollow(System.Int32)">
            <summary>
            Unfollow an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The unfollowed item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.DeleteLike(System.Int32)">
            <summary>
            Unlike an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The unliked item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.DeleteStar(System.Int32)">
            <summary>
            Unstar an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The unstarred item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Get(System.Int32)">
            <summary>
            Get the item with the specified id.
            </summary>
            <param name="id">The item id.</param>
            <returns>Returns an item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.GetItems(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Get all items in the the specified app.
            </summary>
            <param name="id">The app id.</param>
            <param name="depth">
              The maximum depth of items to return (for hierarchical apps), i.e. setting depth to 1 returns only the root items. 
              If depth is <c>null</c>, all items are returned.
            </param>
            <returns>Returns a tree-sorted list of <see cref="T:Weavy.Core.Models.Item"/> objects.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Discard(System.Int32)">
            <summary>
            Discards the draft with the specified id.
            </summary>
            <param name="id">The id of the item to discard.</param>
            <returns>Returns an item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Search(Weavy.Core.Models.ItemQuery)">
            <summary>
            Searches for items.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.ItemQuery"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.GetItems(System.Int32,Weavy.Core.Models.Query)">
            <summary>
            Get items in the specified space ordered by the modified date.
            </summary>
            <param name="id">The space id.</param>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>A list of items.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.GetGlobal(Weavy.Core.Models.Query)">
            <summary>
            Get items the user has access to ordered by the modified date. 
            </summary>
            <returns>A list of items.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.PostFollow(System.Int32)">
            <summary>
            Follow an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The followed item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.PostLike(System.Int32)">
            <summary>
            Like an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The liked item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.PostStar(System.Int32)">
            <summary>
            Star an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The starred item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Pin(System.Int32)">
            <summary>
            Pin an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The pinned item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Unpin(System.Int32)">
            <summary>
            Unpin an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The unpinned item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Tags(Weavy.Core.Models.Query)">
            <summary>
            Searches for tags attached to <see cref="T:Weavy.Core.Models.Item"/> objects.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.Query"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Insert(Weavy.Web.Areas.Api.Models.ItemIn)">
            <summary>
            Inserts a new item in the specified app.
            </summary>
            <param name="item">The item to insert.</param>
            <returns>The inserted item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.AutoSave(System.Int32,Weavy.Web.Areas.Api.Models.Delta{Weavy.Core.Models.Item},System.Boolean)">
            <summary>
            Updates an item.
            </summary>
            <param name="id">Id of the item to update</param>
            <param name="item">The item to update.</param>
            <param name="force">Force update regardless if draft exists or not.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Update(System.Int32,Weavy.Web.Areas.Api.Models.Delta{Weavy.Core.Models.Item},System.Boolean)">
            <summary>
            Updates an item.
            </summary>
            <param name="id">Id of the item to update.</param>
            <param name="item">The item to update.</param>
            <param name="draft"><c>true</c> to save as draft, <c>false</c> to publish the item directly.</param>
            <returns>The updated item.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.ItemsController.Move(System.Int32,Weavy.Core.Models.Entity)">
            <summary>
            Moves an item.
            </summary>
            <param name="id">Id of the item to move.</param>
            <param name="destination">The destination entity</param>
            <returns>The moved item.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.MessagesController">
            <summary>
            The Messages API allows a user to create private messages between an arbitrary number of people. 
            The Messages API is built around 2 central objects: Conversations and Messages.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.GetConversations(Weavy.Core.Models.QueryOptions)">
            <summary>
            Get the current user's conversations.
            </summary>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>Returns the current user's conversations.</returns>
            <example>GET api/conversations?top=5</example>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.GetRooms(Weavy.Core.Models.QueryOptions)">
            <summary>
            Get the current user's chat rooms.
            </summary>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>Returns the current user's chat rooms.</returns>
            <example>GET api/conversations/rooms?top=5</example>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.GetPeople(Weavy.Core.Models.QueryOptions)">
            <summary>
            Get the current user's conversations with other people.
            </summary>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>Returns the current user's archived conversations.</returns>
            <example>GET api/conversations/people?top=5</example>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.GetUnread(System.Boolean,Weavy.Core.Models.QueryOptions)">
            <summary>
            Get the current user's unread conversations (conversations with unread messages).
            </summary>
            <param name="followed">When <c>false</c> returns all conversations with unread messages, otherwise returns only followed conversations with unread messages.</param>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>Returns the most recent unread conversations for the current user.</returns>
            <example>GET api/conversations/unread?top=5</example>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.GetConversation(System.Int32)">
            <summary>
            Get the conversation with the specified id.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.GeConversationWithUser(System.String)">
            <summary>
            Get the existing, or create a new, one-on-one conversation between the current- and specified user.
            </summary>
            <param name="username">Username of the other participant.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.CreateConversation(Weavy.Web.Areas.Api.Models.CreateConversationModel)">
            <summary>
            Create a new or get the existing conversation between the current- and specified user.
            </summary>
            <param name="model">Conversation model.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.UpdateConversation(System.Int32,Weavy.Web.Areas.Api.Models.CreateConversationModel)">
            <summary>
            Updates a conversation.
            </summary>
            <param name="id">The id of the conversation</param>
            <param name="model">Conversation model.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.AddMembersToConversation(Weavy.Web.Areas.Api.Models.CreateConversationModel)">
            <summary>
            Add members to existing conversation.
            </summary>
            <param name="model">Conversation model.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.StarConversation(System.Int32)">
            <summary>
            Mark a conversation as starred by the current user.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>The starred conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.UnstarConversation(System.Int32)">
            <summary>
            Mark a conversation as unstarred by the current user.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>The unstarred conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.FollowConversation(System.Int32)">
            <summary>
            Mark a conversation as followed by the current user.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>The followed conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.UnfollowConversation(System.Int32)">
            <summary>
            Mark a conversation as unfollowed by the current user.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>The unfollowed conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.Read(System.Int32)">
            <summary>
            Marks a conversation as read for the current user.
            </summary>
            <param name="id">Id of the conversation to mark as read.</param>
            <returns>The read conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.Delivered(System.Int32)">
            <summary>
            Marks a conversation as delivered for the current user.
            </summary>
            <param name="id">Id of the conversation to mark as delivered.</param>
            <returns>The delivered conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.ReadAll">
            <summary>
            Mark all conversations for the current user as read.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.UnRead(System.Int32)">
            <summary>
            Marks a conversation as unread for the current user.
            </summary>
            <param name="id">Id of the conversation to mark as unread.</param>
            <returns>The unread conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.LeaveConversation(System.Int32)">
            <summary>
            Leave a conversation.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>The left conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.LeaveConversation(System.Int32,System.Int32)">
            <summary>
            Removes a user from the conversation.
            </summary>
            <param name="id">The conversation id.</param>
            <param name="member">The member to remove</param>
            <returns>The left conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.Archive(System.Int32)">
            <summary>
            Archives a conversation for the current user.
            </summary>
            <param name="id">Id of the conversation to archive.</param>
            <returns>The archived conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.UnArchive(System.Int32)">
            <summary>
            Unarchives a conversation for the current user.
            </summary>
            <param name="id">Id of the conversation to unarchive.</param>
            <returns>The unarchived conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.GetMessages(System.Int32,Weavy.Core.Models.Query)">
            <summary>
            Get the messages in the specified conversation.
            </summary>
            <param name="id">The conversation id.</param>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.InsertMessage(System.Int32,Weavy.Web.Areas.Api.Models.MessageIn)">
            <summary>
            Creates a new message in the specified conversation.
            </summary>
            <param name="id">The conversation id.</param>
            <param name="message">The message to insert.</param>
            <returns>The inserted message.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.InsertMessage(Weavy.Web.Areas.Api.Models.ConversationIn)">
            <summary>
            Posts a new message to the specified recipients (automatically creates a new conversation if needed).
            </summary>
            <param name="message">The message to insert.</param>
            <returns>The posted message.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.Get(System.Int32)">
            <summary>
            Get the message with the specified id.
            </summary>
            <param name="id">The message id.</param>
            <returns>Returns a message.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.Like(System.Int32)">
            <summary>
            Mark a message as liked by the current user.
            </summary>
            <param name="id">The message id.</param>
            <returns>The liked message.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.Unlike(System.Int32)">
            <summary>
            Mark a message as unliked by the current user.
            </summary>
            <param name="id">The message id.</param>
            <returns>The unliked message.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.Star(System.Int32)">
            <summary>
            Mark a message as starred by the current user.
            </summary>
            <param name="id">The message id.</param>
            <returns>The starred message.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.MessagesController.Unstar(System.Int32)">
            <summary>
            Mark a message as unstarred by the current user.
            </summary>
            <param name="id">The message id.</param>
            <returns>The unstarred message.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.NotesController">
            <summary>
            A Note is a sticky message that the space administrator can post to a space. Notes are always visible on the space start page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotesController.GetNotes(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieves the notes posted in the specified space.
            </summary>
            <param name="id">The space id.</param>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>A list of notes.</returns>
            <example>GET api/spaces/1/notes?top=20</example>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotesController.Insert(System.Int32,Weavy.Web.Areas.Api.Models.NoteIn)">
            <summary>
            Posts a note in the specified space.
            </summary>
            <param name="id">The space id.</param>
            <param name="note">The note to post.</param>
            <returns>The inserted note.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotesController.Update(System.Int32,Weavy.Web.Areas.Api.Models.NoteIn)">
            <summary>
            Updates a note.
            </summary>
            <param name="id">Id of the note to update.</param>
            <param name="note">The note to update.</param>
            <returns>The updated note.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotesController.Get(System.Int32)">
            <summary>
            Get the note with the specified id.
            </summary>
            <param name="id">The note id.</param>
            <returns>Returns a note.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotesController.Trash(System.Int32)">
            <summary>
            Trash a note.
            </summary>
            <param name="id">Id of the note to trash.</param>
            <returns>The trashed note.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotesController.Restore(System.Int32)">
            <summary>
            Restores a note from the trash.
            </summary>
            <param name="id">Id of the note to restore.</param>
            <returns>The restored note.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotesController.Delete(System.Int32)">
            <summary>
            Delete the note with the specified id.
            </summary>
            <param name="id">Id of the note to delete.</param>
            <returns>The deleted note.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.NotificationsController">
            <summary>
            The Notifications API allow users to manage their notifications. 
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotificationsController.Get(System.Int32)">
            <summary>
            Get the notification with the specified id.
            </summary>
            <param name="id">Id of the notification to get.</param>
            <returns>The notification.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotificationsController.PostRead(System.Int32)">
            <summary>
            Mark the notification with the specified id as read.
            </summary>
            <param name="id">Id of the notification to mark as read.</param>
            <returns>The notification.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotificationsController.PostUnRead(System.Int32)">
            <summary>
            Marks the notification with the specified id as unread.
            </summary>
            <param name="id">Id of the notification to mark as unread.</param>
            <returns>The notification.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotificationsController.PostReadAll(System.Nullable{System.Int32})">
            <summary>
            Mark all unread notifications for the current user as read. Optionally pass in the id if the last viewed notification.
            </summary>
            <param name="id">Id of the last viewed notification</param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotificationsController.GetUnread(Weavy.Core.Models.NotificationQuery)">
            <summary>
            Get the unread nofications for the current user.
            </summary>
            <param name="query">Query options for paging, sorting etc.</param>
            <returns>Returns the most recent unread notifications for the current user.</returns>
            <example>GET api/notifications/unread?top=5</example>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.NotificationsController.GetNotifications(Weavy.Core.Models.NotificationQuery)">
            <summary>
            Get the nofications for the current user.
            </summary>
            <param name="query">Query options for paging, sorting etc.</param>
            <returns>Returns notifications for the current user.</returns>
            <example>GET api/notifications?top=5</example>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.OAuthController">
            <summary>
            The OAuth API is used to obtain an OAuth 2 Bearer Token which can be used to make API request.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.OAuthController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Api.Controllers.OAuthController"/> class.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.PostsController">
            <summary>
            A Post is the central object you see in the stream. It has rich text and annotations. It can be liked, starred, commented etc. 
            Posts are closely tied to the follow graph, if you would like to send private messages you should look at the Messages API.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.GetPosts(System.Int32,Weavy.Core.Models.Query)">
            <summary>
            Retrieves the stream of posts in a space.
            </summary>
            <param name="id">The space id.</param>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>A list of posts.</returns>
            <example>GET api/spaces/1/posts?top=20</example>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Insert(System.Int32,Weavy.Web.Areas.Api.Models.PostIn)">
            <summary>
            Creates a new post in the specified space.
            </summary>
            <param name="id">The space id.</param>
            <param name="post">The post to insert.</param>
            <returns>The inserted post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Update(System.Int32,Weavy.Web.Areas.Api.Models.PostUp)">
            <summary>
            Updates a post.
            </summary>
            <param name="id">Id of the post to update.</param>
            <param name="post">The post to update.</param>
            <returns>The updated post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Get(System.Int32)">
            <summary>
            Get the post with the specified id.
            </summary>
            <param name="id">The post id.</param>
            <returns>Returns a post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Vote(System.Int32,System.Int32)">
            <summary>
            Vote for an option in a poll.
            </summary>
            <param name="id">The post id.</param>
            <param name="optionid">The option id.</param>
            <returns>The post that .</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Like(System.Int32)">
            <summary>
            Mark a post as liked by the current user.
            </summary>
            <param name="id">The post id.</param>
            <returns>The liked post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Unlike(System.Int32)">
            <summary>
            Mark a post as unliked by the current user.
            </summary>
            <param name="id">The post id.</param>
            <returns>The unliked post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Star(System.Int32)">
            <summary>
            Mark a post as starred by the current user.
            </summary>
            <param name="id">The post id.</param>
            <returns>The starred post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Unstar(System.Int32)">
            <summary>
            Mark a post as unstarred by the current user.
            </summary>
            <param name="id">The post id.</param>
            <returns>The unstarred post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Follow(System.Int32)">
            <summary>
            Follow a post.
            </summary>
            <param name="id">The post id.</param>
            <returns>The followed post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Unfollow(System.Int32)">
            <summary>
            Unfollow a post.
            </summary>
            <param name="id">The post id.</param>
            <returns>The unfollowed post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Pin(System.Int32)">
            <summary>
            Pin a post.
            </summary>
            <param name="id">The post id.</param>
            <returns>The pinned post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Unpin(System.Int32)">
            <summary>
            Unpin a post.
            </summary>
            <param name="id">The post id.</param>
            <returns>The unpinned post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Trash(System.Int32)">
            <summary>
            Trash a post.
            </summary>
            <param name="id">Id of the post to trash.</param>
            <returns>The trashed post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Restore(System.Int32)">
            <summary>
            Restores a post from the trash.
            </summary>
            <param name="id">Id of the post to restore.</param>
            <returns>The restored post.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.PostsController.Delete(System.Int32)">
            <summary>
            Delete the post with the specified id.
            </summary>
            <param name="id">Id of the post to delete.</param>
            <returns>The deleted post.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.SearchController">
            <summary>
            Provides API search functionality.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SearchController.Search(Weavy.Core.Models.Query)">
            <summary>
            Performs a search against the index.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.Query"/> object that contains the parameters to use in the search.</param>
            <returns>A <see cref="T:Weavy.Web.Areas.Api.Models.ScrollableList`1"/> with the results from the search.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SearchController.Autocomplete(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns autocomplete suggestions for the supplied query.
            </summary>
            <param name="q"></param>
            <param name="top"></param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> with the results from the search.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SearchController.AutocompleteUsers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns user autocomplete suggestions for the specified query.
            </summary>
            <param name="q"></param>
            <param name="top"></param>
            <param name="spaceId">Id of space where user should be member.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> with the results from the search.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SearchController.AutocompleteMentions(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns autocomplete suggestions for @mentions.
            </summary>
            <param name="q"></param>
            <param name="top"></param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> with the results from the search.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.SpacesController">
            <summary>
            A space is a work area. Apps, Items, Posts and other things all exists in the context of a space. 
            Users can be members of a space which give them certain permissions.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.Delete(System.Int32)">
            <summary>
            Delete the space with the specified id.
            </summary>
            <param name="id">Id of the space to delete.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.DeleteFollow(System.Int32)">
            <summary>
            Stop following the activity in a space.
            </summary>
            <param name="id">The space id.</param>
            <returns>The unfollowed space.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.DeleteStar(System.Int32)">
            <summary>
            Mark a space as unstarred by the current user.
            </summary>
            <param name="id">The space id.</param>
            <returns>The unstarred space.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.Get(System.Int32)">
            <summary>
            Get the space with the specified id.
            </summary>
            <param name="id">The space id.</param>
            <returns>Returns a space.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.GetSpaces">
            <summary>
            Returns the available spaces, i.e. spaces that are visible for the current user.
            </summary>
            <returns>A list of spaces.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.Search(Weavy.Core.Models.SpaceQuery)">
            <summary>
            Performs a search for spaces.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.SpaceQuery"/> object that constitutes the search.</param>
            <returns>A search result containing <see cref="T:Weavy.Core.Models.Space"/> objects.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.GetMembers(System.Int32)">
            <summary>
            Gets the members of the space.
            </summary>
            <param name="id">The space id.</param>
            <returns>The joined space.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.AddMembers(System.Int32,Weavy.Web.Areas.Api.Models.MembersIn)">
            <summary>
            Add members to a space
            </summary>
            <param name="id">The space id</param>
            <param name="members">The ids of the members to add</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.UpdateMember(System.Int32,Weavy.Web.Areas.Api.Models.MemberUp)">
            <summary>
            Update a space member
            </summary>
            <param name="id">The space id</param>
            <param name="model">The <see cref="T:Weavy.Web.Areas.Api.Models.MemberUp"/> object to update.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.ReviewMember(System.Int32,Weavy.Web.Areas.Api.Models.MemberUp)">
            <summary>
            Update a space member
            </summary>
            <param name="id">The space id</param>
            <param name="model">The <see cref="T:Weavy.Web.Areas.Api.Models.MemberUp"/> object to review.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.PostJoin(System.Int32)">
            <summary>
            Joins the specified space.
            </summary>
            <param name="id">The space id.</param>
            <returns>The joined space.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.DeleteLeave(System.Int32)">
            <summary>
            Leaves the specified space.
            </summary>
            <param name="id">The space id.</param>
            <returns>The space that was just left.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.RemoveMember(System.Int32,Weavy.Web.Areas.Api.Models.MemberUp)">
            <summary>
            Removes a member from the space.
            </summary>
            <param name="id">The space id.</param>
            <param name="member">The memeber to remove from the space</param>
            <returns>The member that was removed.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.Post(Weavy.Core.Models.Space)">
            <summary>
            Creates a new space.
            </summary>
            <param name="space">The space to insert.</param>
            <returns>The created space.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.PostFollow(System.Int32)">
            <summary>
            Start following the activity in a space.
            </summary>
            <param name="id">The space id.</param>
            <returns>The followed space.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.PostStar(System.Int32)">
            <summary>
            Mark a space as starred by the current user.
            </summary>
            <param name="id">The space id.</param>
            <returns>The starred space.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SpacesController.Put(System.Int32,Weavy.Core.Models.Space)">
            <summary>
            Updates a space.
            </summary>
            <param name="id">The space id.</param>
            <param name="space">The space to update.</param>
            <returns>The updated space.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.SystemController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SystemController.GetVersion">
            <summary>
            Gets the version number of this installation.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SystemController.GetStatus">
            <summary>
            Gets the status of this installation.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.SystemController.GetTheme">
            <summary>
            Gets the theme settings for this installation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.TasksController">
            <summary>
            The Tasks API allows a user to manage tasks. 
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.Delete(System.Int32)">
            <summary>
            Permanently deletes a task.
            </summary>
            <param name="id">Id of the task to delete.</param>
            <returns>The deleted task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.DeleteMany(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Permanently deletes a list of tasks.
            </summary>
            <param name="ids">A comma-separated list of tasks to delete.</param>
            <returns>Returns the deleted tasks.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.Trash(System.Int32)">
            <summary>
            Thrash a task.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.Restore(System.Int32)">
            <summary>
            Restore a trashed task from the recycle bin.
            </summary>
            <param name="id">Id of the task to restore.</param>
            <returns>The restored task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.TrashMany(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Thrash a list of tasks.
            </summary>
            <param name="ids">A comma-separated list of tasks to trash.</param>
            <returns>Returns the trashed tasks.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.DeleteFollow(System.Int32)">
            <summary>
            Unfollow a task.
            </summary>
            <param name="id">The task id.</param>
            <returns>The unfollowed task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.DeleteLike(System.Int32)">
            <summary>
            Unlike a task.
            </summary>
            <param name="id">The task id.</param>
            <returns>The unliked task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.DeleteStar(System.Int32)">
            <summary>
            Unstar a task.
            </summary>
            <param name="id">The task id.</param>
            <returns>The unstarred task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.Get(System.Int32)">
            <summary>
            Get the task with the specified id.
            </summary>
            <param name="id">The task id.</param>
            <returns>Returns an task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.GetAppTasks(System.Int32)">
            <summary>
            Get all task in the the specified app.
            </summary>
            <param name="id">The app id.</param>
            <returns>Returns a list of <see cref="T:Weavy.Core.Models.Task"/> objects.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.GetItemTasks(System.Int32)">
            <summary>
            Get all task in the the specified item.
            </summary>
            <param name="id">The item id.</param>
            <returns>Returns a list of <see cref="T:Weavy.Core.Models.Task"/> objects.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.Search(Weavy.Core.Models.TaskQuery)">
            <summary>
            Searches for tasks.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.TaskQuery"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.Sort(System.Int32,Weavy.Web.Areas.Api.Models.SortTaskModel)">
            <summary>
            Sort task.
            </summary>
            <param name="id">The id of the task to sort.</param>
            <param name="sort">The <see cref="T:Weavy.Web.Areas.Api.Models.SortTaskModel"/> that specifies the new position.</param>
            <returns>The sorted task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.PostFollow(System.Int32)">
            <summary>
            Follow a task.
            </summary>
            <param name="id">The task id.</param>
            <returns>The followed task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.PostLike(System.Int32)">
            <summary>
            Like a task.
            </summary>
            <param name="id">The task id.</param>
            <returns>The liked task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.PostStar(System.Int32)">
            <summary>
            Star a task.
            </summary>
            <param name="id">The task id.</param>
            <returns>The starred task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.InsertIntoApp(System.Int32,Weavy.Web.Areas.Api.Models.TaskIn)">
            <summary>
            Inserts a new task into the specified app
            </summary>
            <param name="id">Id of the app where the task should be inserted.</param>
            <param name="task">The task to insert.</param>
            <returns>The inserted task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.InsertIntoUser(System.Int32,Weavy.Web.Areas.Api.Models.TaskIn)">
            <summary>
            Inserts a new task into the specified user.
            </summary>
            <param name="id">Id of the user where the task should be inserted.</param>
            <param name="task">The task to insert.</param>
            <returns>The inserted task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.InsertIntoItem(System.Int32,Weavy.Web.Areas.Api.Models.TaskIn)">
            <summary>
            Inserts a new task into the specified item.
            </summary>
            <param name="id">Id of the item where the task should be inserted.</param>
            <param name="task">The task to insert.</param>
            <returns>The inserted task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.InsertIntoTask(System.Int32,Weavy.Web.Areas.Api.Models.TaskIn)">
            <summary>
            Inserts a new subtask into the specified task.
            </summary>
            <param name="id">Id of the task where the task should be inserted.</param>
            <param name="task">The task to insert.</param>
            <returns>The inserted task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.Insert(Weavy.Core.Models.IEntity,Weavy.Web.Areas.Api.Models.TaskIn)">
            <summary>
            Inserts a new task in the specified parent.
            </summary>
            <param name="parent">The parent to insert the task into.</param>
            <param name="task">The task to insert.</param>
            <returns>The inserted task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.Update(System.Int32,Weavy.Web.Areas.Api.Models.Delta{Weavy.Core.Models.Task})">
            <summary>
            Updates a task.
            </summary>
            <param name="id">Id of the task to update.</param>
            <param name="task">The item to update.</param>
            <returns>The updated task.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.TasksController.Move(System.Int32,Weavy.Core.Models.IEntity)">
            <summary>
            Moves an task and its subtasks to a new parent item.
            </summary>
            <param name="id">The id of the task to move.</param>
            <param name="parent">The parent to move the task to.</param>
            <returns>The updated task.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.WidgetsController">
            <summary>
            api for adding and removing user specific bubbles 
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.WidgetsController.AddBubble(Weavy.Web.Models.BubbleModel)">
            <summary>
            Add a new bubble.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.WidgetsController.RemoveBubble(Weavy.Web.Models.BubbleModel)">
            <summary>
            Remove a bubble.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.WidgetsController.GetConfiguration">
            <summary>
            Returns the strip configuration with script to load the widget.
            </summary>
            <remarks>Anonymous access is allowed.</remarks>
            <returns>The widget configurarion.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.UsersController">
            <summary>
            The Users API has methods for manipulating users. 
            Each user has a profile that holds all the personal details of the user. 
            This includes basic information like the name and email address, but can also include more advanced fields like phone numbers and IM addresses.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetMe">
            <summary>
            Retrieves the current user.
            </summary>
            <returns>Returns a user.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetPresence(System.Int32)">
            <summary>
            Retrieves presence information for the specified user.
            </summary>
            <returns>Returns a user.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.PutMe(Weavy.Core.Models.User)">
            <summary>
            Updates the current user.
            </summary>
            <param name="user">The user info to update.</param>
            <returns>The updated user.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.Get(System.Int32)">
            <summary>
            Retrieves a user.
            </summary>
            <param name="id">The user id.</param>
            <returns>Returns a user.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetOnline(Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieves a list of online users.
            </summary>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetUsers(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Retrieves a list of users.
            </summary>
            <param name="ids">A comma-separated list of user ids.</param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.Follow(System.Int32)">
            <summary>
            Start following a person.
            </summary>
            <param name="id">The user id.</param>
            <returns>The followed user.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.Unfollow(System.Int32)">
            <summary>
            Stop following a person.
            </summary>
            <param name="id">The user id.</param>
            <returns>The unfollowed person.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.Watch(System.Int32)">
            <summary>
            Turn on notifications for a followed person.
            </summary>
            <param name="id">The user id.</param>
            <returns>The followed user.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.Mute(System.Int32)">
            <summary>
            Turns off notifications for a followed person.
            </summary>
            <param name="id">The user id.</param>
            <returns>The followed user.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.Trash(System.Int32)">
            <summary>
            Trash a user.
            </summary>
            <param name="id">Id of the user to trash.</param>
            <returns>The trashed user.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.Restore(System.Int32)">
            <summary>
            Restores a user from the trash.
            </summary>
            <param name="id">Id of user to restore.</param>
            <returns>The restored user.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetFollowers(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve the people that follow a person.
            </summary>
            <param name="id">The user id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetFollowing(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Returns users that the specified user is following.
            </summary>
            <param name="id">The user id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetPostLikes(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that liked a post.
            </summary>
            <param name="id">The post id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetPostStars(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that starred a post.
            </summary>
            <param name="id">The post id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetCommentLikes(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that liked a comment.
            </summary>
            <param name="id">The comment id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetCommentStars(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that starred a comment.
            </summary>
            <param name="id">The comment id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetSpaceLikes(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that likes a space.
            </summary>
            <param name="id">The space id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetSpaceStars(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that stars a space.
            </summary>
            <param name="id">The space id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetSpaceFollows(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that follows a space.
            </summary>
            <param name="id">The space id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetAppLikes(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that likes an app.
            </summary>
            <param name="id">The app id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetAppStars(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that stars an app.
            </summary>
            <param name="id">The app id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetAppFollows(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that follow an app.
            </summary>
            <param name="id">The app id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetItemLikes(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve all users that likes the specified item.
            </summary>
            <param name="id">The item id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetItemStars(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve all users that stars the specified item.
            </summary>
            <param name="id">The item id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetItemFollows(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve all users that follow the specified item.
            </summary>
            <param name="id">The item id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.GetTaskStars(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that stars a task.
            </summary>
            <param name="id">The task id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.Search(Weavy.Core.Models.UserQuery)">
            <summary>
            Searches for users.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.UserQuery"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.UsersController.Tags(Weavy.Core.Models.Query)">
            <summary>
            Searches for tags attached to <see cref="T:Weavy.Core.Models.User"/> objects.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.Query"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Controllers.WeavyApiController">
            <summary>
            Abstract base class for API controllers.
            </summary>
        </member>
        <member name="F:Weavy.Web.Areas.Api.Controllers.WeavyApiController.DefaultPageSize">
            <summary>
            The default page size for api requests.
            </summary>
        </member>
        <member name="F:Weavy.Web.Areas.Api.Controllers.WeavyApiController.MaxPageSize">
            <summary>
            The max page size for api requests.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Controllers.WeavyApiController.User">
            <summary>
            Gets the user security information for the current HTTP request.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Controllers.WeavyApiController.OwinContext">
            <summary>
            Get the current Owin context.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.WeavyApiController.ThrowResponseException(System.Net.HttpStatusCode,System.String)">
            <summary>
            Throws a HttpResponseException with the specified code and message.
            </summary>
            <param name="code">The status code of the response.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.WeavyApiController.ThrowValidationException(System.Net.HttpStatusCode,System.Web.Http.ModelBinding.ModelStateDictionary)">
            <summary>
            Throws a HttpResponseException with the specified code and message.
            </summary>
            <param name="code">The status code of the response.</param>
            <param name="modelState">The error message.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Controllers.WeavyApiController.ValidateModel(System.Object)">
            <summary>
            Helper method for validating an object after patch and put requests.
            </summary>
            <param name="model"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Formatters.JsonContentNegotiator">
            <summary>
            A content negotiator that always returns aplication/json.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Formatters.JsonContentNegotiator.#ctor">
            <summary>
            Initializes a new instance of the JsonContentNegotiator class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Formatters.JsonContentNegotiator.Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Always returns a JsonMediaTypeFormatter.
            </summary>
            <param name="type">The type to be serialized.</param>
            <param name="request">The request.</param>
            <param name="formatters">The set of MediaTypeFormatter objects from which to choose.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.RegisterIn">
            <summary>
            Verify signup model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.RegisterIn.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.RegisterIn.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.RegisterIn.Token">
            <summary>
            Gets or sets the token for the invite.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.RegisterIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validate model.
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.VerifySignupIn">
            <summary>
            Verify signup model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.VerifySignupIn.Token">
            <summary>
            Gets or sets the token for the invite.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.VerifySignupIn.Code">
            <summary>
            Gets or set the confirmation code.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.SignupIn">
            <summary>
            Signup model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.SignupIn.Email">
            <summary>
            Gets or sets the email address.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.AppIn">
            <summary>
            App input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.AppIn.SpaceId">
            <summary>
            Gets or sets the id of the <see cref="T:Weavy.Core.Models.Space"/> the item belongs to.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.AppIn.Guid">
            <summary>
            Gets or sets the guid of the <see cref="T:Weavy.Core.Models.App"/> to insert.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.AppIn.ParentId">
            <summary>
            Gets or sets the id of the parent <see cref="T:Weavy.Core.Models.App"/>.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.AttachIn">
            <summary>
            File attach input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.AttachIn.Files">
            <summary>
            Ids of files to attach.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.AttachIn.Replace">
            <summary>
            Gets or sets a value that determines how to handle files with the same names as already existing files, <c>true</c> replaces existing files and <c>false</c> skips them.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.CommentIn">
            <summary>
            Comment input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.CommentIn.AttachedTo">
            <summary>
            Gets or sets a reference to the commented object, i.e. file, content, message etc.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.CommentIn.Text">
            <summary>
            Gets or sets the comment text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.CommentIn.Attachments">
            <summary>
            Gets or sets the attachment ids.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.CommentUp">
            <summary>
            Comment update model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.CommentUp.Text">
            <summary>
            Gets or sets the comment text.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.ConversationIn">
            <summary>
            Conversation input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ConversationIn.Recipients">
            <summary>
            Gets or sets the user ids of the message recipients.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.ConversationIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.CreateConversationModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.CreateConversationModel.Id">
            <summary>
            The id of the conversation
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.CreateConversationModel.Name">
            <summary>
            The name of the conversation
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.CreateConversationModel.Users">
            <summary>
            The users/members of the conversation
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.Delta`1">
            <summary>
            A class the tracks changes (i.e. the Delta) for a particular <typeparamref name="TEntityType"/>.
            </summary>
            <typeparam name="TEntityType">TEntityType is the base type of entity this delta tracks changes for.</typeparam>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Weavy.Web.Areas.Api.Models.Delta`1"/>.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Weavy.Web.Areas.Api.Models.Delta`1"/>.
            </summary>
            <param name="entityType">The derived entity type for which the changes would be tracked.
            <paramref name="entityType"/> should be assignable to instances of <typeparamref name="TEntityType"/>.</param>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.Delta`1.EntityType">
            <summary>
            The actual type of the entity for which the changes are tracked.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.Clear">
            <summary>
            Clears the Delta and resets the underlying Entity.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.TrySetPropertyValue(System.String,System.Object)">
            <summary>
            Attempts to set the Property called <paramref name="name"/> to the <paramref name="value"/> specified.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>True if successful</returns>
            <remarks>
            Only properties that exist on <see cref="P:Weavy.Web.Areas.Api.Models.Delta`1.EntityType"/> can be set.
            If there is a type mismatch the request will fail.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The value of the Property</param>
            <returns>True if the Property was found</returns>
            <remarks>
            Only properties that exist on <see cref="P:Weavy.Web.Areas.Api.Models.Delta`1.EntityType"/> can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.GetExpandoValue(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.TryGetPropertyType(System.String,System.Type@)">
            <summary>
            Attempts to get the <see cref="T:System.Type"/> of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="type">The type of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
            <remarks>
            Only properties that exist on <see cref="P:Weavy.Web.Areas.Api.Models.Delta`1.EntityType"/> can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Overrides the DynamicObject TrySetMember method, so that only the properties
            of <see cref="P:Weavy.Web.Areas.Api.Models.Delta`1.EntityType"/> can be set.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Overrides the DynamicObject TryGetMember method, so that only the properties
            of <see cref="P:Weavy.Web.Areas.Api.Models.Delta`1.EntityType"/> can be got.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.GetEntity">
            <summary>
            Returns the <see cref="P:Weavy.Web.Areas.Api.Models.Delta`1.EntityType"/> instance
            that holds all the changes (and original values) being tracked by this Delta.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.GetChangedPropertyNames">
            <summary>
            Returns the Properties that have been modified through this Delta as an 
            enumeration of Property Names 
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.GetUnchangedPropertyNames">
            <summary>
            Returns the Properties that have not been modified through this Delta as an 
            enumeration of Property Names 
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.GetChangedProperties(`0)">
            <summary>
            Returns a <see cref="T:Weavy.Core.Models.PropertyDictionary"/> with the Expando properties for this delta.
            </summary>
            <param name="original">The entity to be updated.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.CopyChangedValues(`0)">
            <summary>
            Copies the changed property values from the underlying entity (accessible via <see cref="M:Weavy.Web.Areas.Api.Models.Delta`1.GetEntity" />) 
            to the <paramref name="original"/> entity.
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.CopyUnchangedValues(`0)">
            <summary>
            Copies the unchanged property values from the underlying entity (accessible via <see cref="M:Weavy.Web.Areas.Api.Models.Delta`1.GetEntity" />) 
            to the <paramref name="original"/> entity.
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.Patch(`0)">
            <summary>
            Overwrites the <paramref name="original"/> entity with the changes tracked by this Delta.
            </summary>
            <param name="original">The entity to be updated.</param>
            <remarks>The semantics of this operation are equivalent to a HTTP PATCH operation, hence the name.</remarks>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.Put(`0)">
            <summary>
            Overwrites the <paramref name="original"/> entity with the values stored in this Delta.
            </summary>
            <param name="original">The entity to be updated.</param>
            <remarks>The semantics of this operation are equivalent to a HTTP PUT operation, hence the name.</remarks>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.Initialize(System.Type)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.InitializePropertiesThatExist">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.Delta`1.IsNullable(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.DocumentIn">
            <summary>
            New document input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.DocumentIn.Name">
            <summary>
            Gets or sets the filename.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.EmbedIn">
            <summary>
            Embed input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.EmbedIn.Url">
            <summary>
            The URL to retrieve embedding information for.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.EmbedIn.MaxWidth">
            <summary>
            The maximum width of the embedded resource. Only applies to some resource types
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.EmbedIn.MaxHeight">
            <summary>
            The maximum height of the embedded resource. Only applies to some resource types.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.EventIn">
            <summary>
            Event input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.EventIn.Title">
            <summary>
            Gets or sets the event title.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.ItemIn">
            <summary>
            Item input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ItemIn.AppId">
            <summary>
            Gets or sets the id of the <see cref="T:Weavy.Core.Models.App"/> the item belongs to.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ItemIn.ParentId">
            <summary>
            Gets or sets the id of the parent <see cref="T:Weavy.Core.Models.Item"/>.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.MembersIn">
            <summary>
            Model for adding members to a space.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MembersIn.Members">
            <summary>
            Gets or sets the ids of the people to add.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.MemberUp">
            <summary>
            Model for updating a space member.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MemberUp.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MemberUp.Access">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MemberUp.Approve">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.MentionModel">
            <summary>
            Object returned by mention autocomplete function.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MentionModel.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MentionModel.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MentionModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MentionModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MentionModel.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MentionModel.ThumbUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MentionModel.IsExternal">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.MessageIn">
            <summary>
            Message input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MessageIn.Text">
            <summary>
            Gets or sets the message text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MessageIn.Attachments">
            <summary>
            Gets or sets the attachment ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.MessageIn.Embed">
            <summary>
            Gets or sets the embed id.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.MessageIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.NoteIn">
            <summary>
            Note input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.NoteIn.Title">
            <summary>
            Gets or sets the note title.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.NoteIn.Text">
            <summary>
            Gets or sets the note text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.NoteIn.NoteType">
            <summary>
            Gets or sets the note type.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.PostIn">
            <summary>
            Post input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.PostIn.Text">
            <summary>
            Gets or sets the post text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.PostIn.Attachments">
            <summary>
            Gets or sets the attachment ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.PostIn.Embed">
            <summary>
            Gets or sets the embed id.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.PostIn.Options">
            <summary>
            Gets or sets poll options.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.PostIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.PostUp">
            <summary>
            Post update model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.PostUp.Text">
            <summary>
            Gets or sets the post text.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.PostUp.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.ScrollableList`1">
            <summary>
            A wrapper around a PagedList for better JSON serialization.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.ScrollableList`1.#ctor(Weavy.Core.Collections.PagedList{`0},System.Uri)">
            <summary>
              Initializes a new instance of the ScrollableList class.
            </summary>
            <param name="source">The PagedList to wrap.</param>
            <param name="uri">The URI</param>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.ScrollableList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Uri)">
            <summary>
              Initializes a new instance of the ScrollableList class.
            </summary>
            <param name="source">The collection of items to initialize the scrollable list with.</param>
            <param name="top">The number of requested items.</param>
            <param name="skip">The number of skipped items.</param>
            <param name="total">The total item count (before skip, top etc. was applied).</param>        
            <param name="uri">The URI</param>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ScrollableList`1.Data">
            <summary>
            Gets the items on the current page.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ScrollableList`1.Top">
            <summary>
            Gets the maximum requested number of items.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ScrollableList`1.Skip">
            <summary>
            Gets the number of skipped items.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ScrollableList`1.Count">
            <summary>
            Gets the  total number of items in the result.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ScrollableList`1.Prev">
            <summary>
             The query options for scrolling to the previous page.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ScrollableList`1.Next">
            <summary>
             The query options for scrolling to the next page.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.SortTaskModel">
            <summary>
            Model for sorting a task.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.SortTaskModel.Before">
            <summary>
            The id of the sibling to sort the task before.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.SortTaskModel.After">
            <summary>
            The id of the sibling to sort the task after.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Models.SortTaskModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.TaskIn">
            <summary>
            Task input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.TaskIn.Title">
            <summary>
            Gets or sets the task title.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.ThemeOut">
            <summary>
            Theme output model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ThemeOut.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ThemeOut.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ThemeOut.Color">
            <summary>
            Gets the theme color as specified by the user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.ThemeOut.Colors">
            <summary>
            Gets the different shades of the theme color.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.UploadOut">
            <summary>
            File upload output model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UploadOut.Uploaded">
            <summary>
            Gets or sets the uploaded files.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UploadOut.Attached">
            <summary>
            Gets or sets the attached files.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UploadOut.Skipped">
            <summary>
            Gets or sets the skipped files.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UploadOut.Replaced">
            <summary>
            Gets or sets the replaced files.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Models.UsersGroupsModel">
            <summary>
            Object returned by users and groups autocomplete function.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UsersGroupsModel.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UsersGroupsModel.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UsersGroupsModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UsersGroupsModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UsersGroupsModel.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UsersGroupsModel.ThumbUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UsersGroupsModel.IsExternal">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Api.Models.UsersGroupsModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Routing.IntsConstraint">
            <summary>
            Inline route constraint for two or more comma sepaerated ints, e.g. 1,2,3.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Routing.IntsConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Api.Routing.OptionsConstraint">
            <summary>
            Inline route constraint for file resizer options, e.g. "crop,both,q90".
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Api.Routing.OptionsConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Controllers.HomeController">
            <summary>
            The controller that will handle requests for the API documentation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Controllers.HomeController.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.#ctor(System.Web.Http.HttpConfiguration)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.Index">
            <summary>
            Lists the available api controllers and action methods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.GetControllerDocumentation(System.String)">
            <summary>
            Lists the available action methods for the specified api controller.
            </summary>
            <param name="controllerId">The controller id</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.GetActionDocumentation(System.String)">
            <summary>
            Returns documentation about the specified api action method.
            </summary>
            <param name="actionId">The action id</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.GetOAuthDocumentation">
            <summary>
            Displays OAuth documentation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.GetOAuthTokenDocumentation">
            <summary>
            Displays OAuth Token documentation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.DocsAreaRegistration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.DocsAreaRegistration.AreaName">
            <summary>
            Gets the name of the area to register.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.DocsAreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>
            Registers an area in an ASP.NET MVC application using the specified area's context information.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Extensions.ApiDescriptionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.ApiDescriptionExtensions.GetActionId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the action method in the <see cref="T:System.Web.Http.Description.ApiDescription"/> object.
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.ApiDescriptionExtensions.GetControllerId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the controller in the <see cref="T:System.Web.Http.Description.ApiDescription"/> object.
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetDocumentation(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the models that represents an API displayed on the help page. The models are initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetControllerDocumentation(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="controllerId"></param>
            <returns>
            A <see cref="T:Weavy.Web.Areas.Docs.Models.ControllerDoc"/> object.
            </returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetControllerDocumentation(System.Web.Http.HttpConfiguration,System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>
            A <see cref="T:Weavy.Web.Areas.Docs.Models.ControllerDoc"/> object.
            </returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetActionDocumentation(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="actionId">The action id.</param>
            <returns>
            An <see cref="T:Weavy.Web.Areas.Docs.Models.ActionDoc"/> object.
            </returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the documentation sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetSampleGenerator(System.Web.Http.HttpConfiguration,Weavy.Web.Areas.Docs.Samples.SampleGenerator)">
            <summary>
            Sets the documentation sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.IExtraDocumentationProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.IExtraDocumentationProvider.GetExampleDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.IExtraDocumentationProvider.GetReturnsDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.IExtraDocumentationProvider.GetSummaryDocumentation(System.Type)">
            <summary>
            Gets the summary of the class with the specified <see cref="T:System.Type"/>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Models.ActionDoc">
            <summary>
            The model that represents the documentation for an Api action method.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Models.ActionDoc.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.Models.ActionDoc"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Weavy.Web.Areas.Docs.Models.ActionDoc.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.SampleRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.SampleResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Example">
            <summary>
            Gets or sets the example text for the API.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Returns">
            <summary>
            Gets or sets the returns text for the API.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Method">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Models.ControllerDoc">
            <summary>
            The model that represents the documentation for a Web Api controller.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Models.ControllerDoc.#ctor(System.Web.Http.Description.ApiDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.Models.ControllerDoc"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.ApiDescription"/> that describes the Api.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.DocsUrl">
            <summary>
            Relative path to the documentaton page for the controller.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.ControllerType">
            <summary>
            Gets or sets the type of the controller that defines the Api.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.ControllerName">
            <summary>
            Gets or sets the name of the controller.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.Summary">
            <summary>
            Gets or sets the summary description for the controller.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.Actions">
            <summary>
            Gets or sets the available methods in the controller.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Models.ItemSample">
            <summary>
            Sample input item for api documentation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ItemSample.Title">
            <summary>
            Gets or sets the title of the item.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ItemSample.Body">
            <summary>
            Gets or sets the body text of the item.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Samples.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.Samples.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.ImageSample.Src">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.ImageSample.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.ImageSample.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.ImageSample.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Samples.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.InvalidSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.Samples.InvalidSample"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.InvalidSample.ErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.InvalidSample.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.InvalidSample.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.InvalidSample.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Samples.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Samples.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="F:Weavy.Web.Areas.Docs.Samples.SampleDirection.Request">
            <summary>
            The sample is for request.
            </summary>
        </member>
        <member name="F:Weavy.Web.Areas.Docs.Samples.SampleDirection.Response">
            <summary>
            The sample is for response.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Samples.SampleGenerator">
            <summary>
            This class will generate the samples for the API documentation.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.Samples.SampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.SampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.SampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.SampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Weavy.Web.Areas.Docs.Samples.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Weavy.Web.Areas.Docs.Samples.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Weavy.Web.Areas.Docs.Samples.SampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Weavy.Web.Areas.Docs.Samples.SampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create one using <see cref="T:Weavy.Web.Areas.Docs.Samples.ObjectGenerator"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Weavy.Web.Areas.Docs.Samples.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Samples.SampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Weavy.Web.Areas.Docs.Samples.SampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleKey.#ctor(Weavy.Web.Areas.Docs.Samples.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Weavy.Web.Areas.Docs.Samples.SampleKey"/> based on <see cref="P:Weavy.Web.Areas.Docs.Samples.SampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Weavy.Web.Areas.Docs.Samples.SampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Weavy.Web.Areas.Docs.Samples.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Weavy.Web.Areas.Docs.Samples.SampleKey"/> based on media type, <see cref="P:Weavy.Web.Areas.Docs.Samples.SampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Weavy.Web.Areas.Docs.Samples.SampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.SampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.SampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.SampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.SampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.SampleKey.ParameterType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.SampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Weavy.Web.Areas.Docs.Samples.SampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleKey.Equals(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleKey.GetHashCode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Samples.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.TextSample.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.TextSample.Text">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.TextSample.Equals(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.TextSample.GetHashCode">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.TextSample.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.XmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)">
            <summary>
            
            </summary>
            <param name="controllerDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.XmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.XmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
            <summary>
            
            </summary>
            <param name="parameterDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.XmlDocumentationProvider.GetResponseDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.XmlDocumentationProvider.GetMethodNode(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.XmlDocumentationProvider.GetExampleDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Get the value of the 'example' element.
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.XmlDocumentationProvider.GetReturnsDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Get the value of the &lt;returns&gt;&lt;/returns&gt; element.
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.XmlDocumentationProvider.GetSummaryDocumentation(System.Type)">
            <summary>
            Gets the summary of the class with the specified <see cref="T:System.Type"/>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Controllers.ContentController">
            <summary>
            Controller for managing content types.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.ContentController.Index">
            <summary>
            Display list of available content types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.ContentController.Get(System.Guid)">
            <summary>
            Get meta data about a content type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.ContentController.Delete(System.Guid)">
            <summary>
            Deletes an item from the data store.
            </summary>
            <param name="id">The guid of the <see cref="T:Weavy.Core.Models.Plugin"/> to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.ContentController.Enable(System.Guid)">
            <summary>
            Enables the specified content item.
            </summary>
            <param name="id">Id of the item to enable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.ContentController.Disable(System.Guid)">
            <summary>
            Disables the specified content item.
            </summary>
            <param name="id">Id of the app to disable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.ContentController.Update(System.Guid,System.String)">
            <summary>
            Enable/Disable/Delete content type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Controllers.DaemonsController">
            <summary>
            Controller for managing daemons.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.DaemonsController.Index">
            <summary>
            Display list of daemons.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.DaemonsController.Get(System.Guid)">
            <summary>
            Get daemon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.DaemonsController.Update(System.Guid,System.String)">
            <summary>
            Updates a daemon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.DaemonsController.Run(System.Guid)">
            <summary>
            Runs a daemon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.DaemonsController.Enable(System.Guid)">
            <summary>
            Enables the specified daemon.
            </summary>
            <param name="id">Id of the daemon to enable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.DaemonsController.Disable(System.Guid)">
            <summary>
            Disables the specified daemon.
            </summary>
            <param name="id">Id of the daemon to disable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.DaemonsController.Delete(System.Guid)">
            <summary>
            Deletes a daemon <see cref="T:Weavy.Core.Models.Plugin"/> from the data store.
            </summary>
            <param name="id">The guid of the <see cref="T:Weavy.Core.Models.Plugin"/> to delete.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Controllers.HomeController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HomeController.About">
            <summary>
            Manage license
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HomeController.Index">
            <summary>
            Display manage dashboard.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HomeController.License">
            <summary>
            Manage license
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HomeController.License(Weavy.Web.Models.LicenseModel)">
            <summary>
            Manage license
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HomeController.Routes(System.String)">
            <summary>
            Display list of registered routes (for debugging purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HomeController.Statistics">
            <summary>
            View current usage statistics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HomeController.Theme">
            <summary>
            Edit theme settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HomeController.UpdateTheme(Weavy.Core.Models.Theme)">
            <summary>
            Update theme settings.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Controllers.HooksController">
            <summary>
            Controller for managing hooks.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HooksController.Index">
            <summary>
            Display list of hooks. Only shows hooks that are not part of core.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HooksController.Get(System.Guid)">
            <summary>
            Get hook.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HooksController.Delete(System.Guid)">
            <summary>
            Deletes a hook <see cref="T:Weavy.Core.Models.Plugin"/> from the data store.
            </summary>
            <param name="id">The guid of the <see cref="T:Weavy.Core.Models.Plugin"/> to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HooksController.Update(System.Guid,System.String)">
            <summary>
            Updates hook
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HooksController.Enable(System.Guid)">
            <summary>
            Enables the specified hook.
            </summary>
            <param name="id">Id of the hook to enable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.HooksController.Disable(System.Guid)">
            <summary>
            Disables the specified hook.
            </summary>
            <param name="id">Id of the hook to disable.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Controllers.LogsController">
            <summary>
            Controller for viewing logfiles.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.LogsController.Index">
            <summary>
            Display list of logfiles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.LogsController.Get(System.String,System.Nullable{System.Boolean})">
            <summary>
            Display content of logfile
            </summary>
            <param name="name"></param>
            <param name="download"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.LogsController.Delete(System.Int32)">
            <summary>
            Delete log file.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Controllers.SettingsController">
            <summary>
            Controller for managing settings.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.SettingsController.Get(System.Guid)">
            <summary>
            Display form for editing settings.
            </summary>
            <param name="id">Id of plugin.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.SettingsController.Update(System.Guid,System.String)">
            <summary>
            Updates settings.
            </summary>
            <param name="id"></param>
            <param name="tab">The tab that was active when the form was submitted.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Controllers.SignupsController">
            <summary>
            Controller for managing sign-ups.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.SignupsController.Index(Weavy.Core.Models.InviteQuery,System.String)">
            <summary>
            Display list of sign-ups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.SignupsController.Update(System.Int32,System.String)">
            <summary>
            Update sign-up.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Controllers.ToolsController">
            <summary>
            Controller for managing tools.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.ToolsController.Index">
            <summary>
            Display list of tools.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.ToolsController.Get(System.Guid)">
            <summary>
            Get tool.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.ToolsController.Run(System.Guid,System.String)">
            <summary>
            Executes a function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.ToolsController.Delete(System.Guid)">
            <summary>
            Deletes a daemon <see cref="T:Weavy.Core.Models.Plugin"/> from the data store.
            </summary>
            <param name="id">The guid of the <see cref="T:Weavy.Core.Models.Plugin"/> to delete.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Controllers.RolesController">
            <summary>
            Controller for managing roles.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.Index(Weavy.Core.Models.RoleQuery)">
            <summary>
            List roles.
            </summary>
            <returns>A list of roles.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.Get(System.Int32,Weavy.Core.Models.UserQuery)">
            <summary>
            Display the list of people in a role.
            </summary>
            <param name="id">Id of the role.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.GetByName(System.String)">
            <summary>
            Display the list of people in a role.
            </summary>
            <param name="name">Name of the role.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.Edit(System.Int32)">
            <summary>
            Display form for updating role.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.New">
            <summary>
            Display form for creating role.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.Insert(Weavy.Core.Models.Role)">
            <summary>
            Insert new role.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.Update(System.Int32,System.String)">
            <summary>
            Update role.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.Trash(System.Int32)">
            <summary>
            Trashes the role e.i. sets the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.Restore(System.Int32)">
            <summary>
            Restores the role e.i. clears the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.Delete(System.Int32)">
            <summary>
            Permanently delete the role.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.AddMembers(System.Int32,System.Collections.Generic.List{Weavy.Core.Models.Entity{Weavy.Core.Models.User}})">
            <summary>
            Add role members.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.RemoveMember(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Removes a role member.
            </summary>
            <param name="id"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Controllers.RolesController.GetRole(System.Int32,System.Boolean)">
            <summary>
            Helper method for getting a role. Throws a HTTP 404 exception if the role cannot be found.
            </summary>
            <param name="id">Id of role to get.</param>
            <param name="filter"></param>
            <returns>A role</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.ManageAreaRegistration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.ManageAreaRegistration.AreaName">
            <summary>
            Gets the name of the area to register.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.ManageAreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>
            Registers an area in an ASP.NET MVC application using the specified area's context information.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Models.AboutModel">
            <summary>
            View model for the about page.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.AboutModel.Version">
            <summary>
            Gets or sets the current version number.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.AboutModel.Projects">
            <summary>
            Gets the list of open source projects used by Weavy.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Models.OpenSourceProject">
            <summary>
            A class describing an open source project.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.OpenSourceProject.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.OpenSourceProject.Url">
            <summary>
            Gets or sets the url.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.OpenSourceProject.License">
            <summary>
            Gets or sets the license.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.OpenSourceProject.LicenseUrl">
            <summary>
            Gets or sets the url to the license.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Models.RouteModel">
            <summary>
            Class that describes a route.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Models.RouteModel.#ctor(System.Web.Routing.RouteBase)">
            <summary>
            
            </summary>
            <param name="routeBase"></param>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Models.RouteModel.#ctor(System.String,System.Web.Http.Controllers.ReflectedHttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="action"></param>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.RouteModel.Methods">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.RouteModel.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.RouteModel.Controller">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.RouteModel.Action">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.RouteModel.Area">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Models.RouteModel.GetController(System.Web.Routing.Route)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Models.RouteModel.GetAction(System.Web.Routing.Route)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Models.RouteModel.GetMethods(System.Web.Routing.Route)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Manage.Models.RouteModel.GetArea(System.Web.Routing.Route)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Manage.Models.SubscriptionModel">
            <summary>
            View model for the subscription page.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.SubscriptionModel.Url">
            <summary>
            Gets or sets the url for the iframe to post to.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.SubscriptionModel.LicenseKey">
            <summary>
            Gets or sets the license key.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.SubscriptionModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.SubscriptionModel.Email">
            <summary>
            Gets or sets the email.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Manage.Models.SubscriptionModel.UserCount">
            <summary>
            Gets or sets the user count.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Setup.Controllers.SetupController">
            <summary>
            Controller for the setup wizard.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.Index">
            <summary>
            Display setup wizard.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.Register">
            <summary>
            Display form for requesting a new license.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.Register(Weavy.Core.Models.LicenseRequest)">
            <summary>
            Submit license request.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.License">
            <summary>
            Display form to register/update license.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.License(Weavy.Web.Models.LicenseModel)">
            <summary>
            Try to register the supplied license.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.Account">
            <summary>
            Display form for creating first user account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.Account(Weavy.Web.Models.SetupAccountModel)">
            <summary>
            Persist and authenticate the new or updated account.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.Configure(Weavy.Web.Models.ConfigurationModel)">
            <summary>
            Endpoint used from Weavy Cloud to configure a new Weavy installation.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.ApplyConfiguration(Weavy.Web.Models.ConfigurationModel)">
            <summary>
            Apply the specified configuration settings.
            </summary>
            <returns>The admin user.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.GetConfig">
            <summary>
            Helper for getting setup wizard config settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.Controllers.SetupController.SetConfig(Weavy.Web.Models.ConfigurationModel)">
            <summary>
            Helper for setting setup wizard config settings.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Setup.SetupAreaRegistration">
            <summary>
            Class for registering the setup area.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Setup.SetupAreaRegistration.AreaName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Setup.SetupAreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Setup.Views.ViewPage`1">
            <summary>
            Base class for strongly typed views.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Messenger.Controllers.MessengerApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerApiController.InsertMessage(System.Int32,Weavy.Web.Areas.Api.Models.MessageIn)">
            <summary>
            Creates a new message in the specified conversation.
            </summary>
            <param name="id">The conversation id.</param>
            <param name="message">The message to insert.</param>
            <returns>The inserted message.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerApiController.SetDelivered(System.Int32)">
            <summary>
            Set DeliveredAt for the conversation of the specified message.
            </summary>
            <param name="id">Message id.</param>
            <returns>The delivered message.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerApiController.SetRead(System.Int32)">
            <summary>
            Set ReadAt for the specified conversation
            </summary>
            <param name="id">Conversation id.</param>
            <returns>The conversation that was marked as read.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerApiController.UpdateUserSettings(Weavy.Web.Areas.Messenger.Models.MessengerSettings)">
            <summary>
            Update user settings
            </summary>
            <param name="model"></param>
            <returns>The updated user.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Messenger.Controllers.MessengerController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.Index">
            <summary>
            Display list of active conversations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.Archived">
            <summary>
            Display list of archived conversations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.Search(Weavy.Core.Models.ConversationQuery)">
            <summary>
            Search conversations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.Conversation(System.Int32,Weavy.Core.Models.Query)">
            <summary>
            Display specified conversation.
            </summary>
            <param name="id">Id of conversation.</param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.Messages(System.Int32,Weavy.Core.Models.Query)">
            <summary>
            Display messages for specified conversation.
            </summary>
            <param name="id">Id of conversation.</param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.GetConversationWithUser(System.Int32)">
            <summary>
            Get the existing, or create a new, one-on-one conversation between the current- and specified user.
            </summary>
            <param name="id">Id of the other user.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.CreateRoom(System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Create a new room conversation.
            </summary>
            <param name="name">The name of the room</param>
            <param name="users">The members of the conversation</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.UpdateRoom(System.Int32,System.String)">
            <summary>
            Update room name.
            </summary>
            <param name="id">Id of conversation.</param>
            <param name="name">Room name.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.GetModel(System.Nullable{System.Int32},System.Boolean,Weavy.Core.Models.Query)">
            <summary>
            Returns a <see cref="T:Weavy.Web.Areas.Messenger.Models.MessengerModel"/> for the specified conversation.
            </summary>
            <param name="id">Id of conversation.</param>
            <param name="archived"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.PartialMessage(System.Int32)">
            <summary>
            Returns the specified message.
            </summary>
            <param name="id">Id of message.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.PartialConversation(System.Int32,System.Boolean)">
            <summary>
            Returns the specified conversation.
            </summary>
            <param name="id">Id of message.</param>
            <param name="active"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.PartialDetails(System.Int32)">
            <summary>
            Returns the specified conversation details.
            </summary>
            <param name="id">Id of conversation.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.PartialUser(System.Int32)">
            <summary>
            Returns the specified user profile.
            </summary>
            <param name="id">Id of the user.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.PartialList(System.Nullable{System.Int32})">
            <summary>
            Returns the conversations list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.DrawerMessage(Weavy.Core.Models.UserQuery)">
            <summary>
            Returns html for the new message drawer, i.e. a list of user matching the search
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.DrawerRoomMembers(Weavy.Core.Models.UserQuery,System.Int32[])">
            <summary>
            Returns html for the new room members drawer.
            </summary>
            <param name="query"></param>
            <param name="users">Ids of selected users.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.UpdateUserProfile">
            <summary>
            Update user profile.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Controllers.MessengerController.SendInvites(System.String[])">
            <summary>
            Send email invites.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Messenger.MessengerAreaRegistration">
            <summary>
            Class for registering the messenger area.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.MessengerAreaRegistration.AreaName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.MessengerAreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Messenger.Models.MessengerModel">
            <summary>
            View model for the messenger.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Models.MessengerModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerModel.Conversation">
            <summary>
            The currently active conversation
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerModel.Conversations">
            <summary>
            A list of all active conversations.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerModel.Messages">
            <summary>
            A list of messages in the active conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerModel.Other">
            <summary>
            Gets the other person in a one-to-one conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerModel.Settings">
            <summary>
            Gets or sets the user settings for the current user
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerModel.UnreadConversations">
            <summary>
            Gets the number of unread conversations.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerModel.Archive">
            <summary>
            Gets or sets a value indicating whether we are listing archived conversations or not.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerModel.Files">
            <summary>
            Gets or sets files posted in the active conversation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Messenger.Models.MessengerSettings">
            <summary>
            View model for user settings.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Models.MessengerSettings.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Models.MessengerSettings.#ctor(Weavy.Core.Models.User)">
            <summary>
            Get properties from user object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Messenger.Models.MessengerSettings.Merge(Weavy.Core.Models.Profile)">
            <summary>
            Merges values from usersettings model to profile.
            </summary>
            <param name="profile"></param>
            <returns></returns>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerSettings.GroupConversations">
            <summary>
            Gets or sets a value indicating whether conversations should be grouped by rooms or not.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerSettings.EnterToSend">
            <summary>
            Gets or sets a value indicating whether Enter should send a message or insert a new line.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerSettings.DesktopNotifications">
            <summary>
            True if desktop notifications is active.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerSettings.EmailNotifications">
            <summary>
            True if the user wants email notifications.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerSettings.MobileNotifications">
            <summary>
            True if we should push messages to mobile app.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Messenger.Models.MessengerSettings.Timezone">
            <summary>
            The users timezone.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Messenger.Views.ViewPage`1">
            <summary>
            Base class for strongly typed views.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Signup.Controllers.SignupController">
            <summary>
            Controller for servicing external signups.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.Index(System.String)">
            <summary>
            Displays form for entering email.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.Index(Weavy.Web.Areas.Signup.Models.EmailAddressModel)">
            <summary>
            Checks the email address and determines next appropriate step.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.Confirm(System.String)">
            <summary>
            Displays the form for confirming email address.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.Confirm(System.String,Weavy.Web.Models.ConfirmationModel)">
            <summary>
            Displays the form for confirming email address.
            </summary>
            <param name="token"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.Register(System.String)">
            <summary>
            Display form for registering a new account.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.Register(System.String,Weavy.Web.Models.RegisterModel)">
            <summary>
            Register a new account.
            </summary>
            <param name="token"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.SignIn(System.String)">
            <summary>
            Displays the sign in form.
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.SignIn(Weavy.Web.Models.SignInModel)">
            <summary>
            Signs in. 
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.Pending">
            <summary>
            Displays a page the informs the user that their signup is pending.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.Configure">
            <summary>
            Displays a page that sends messages to the parent window (to configure the extension).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.Forbidden">
            <summary>
            Displays a an error message (signups not available).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.NotFound">
            <summary>
            Displays an error message (invite not found).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.SignIn(System.Int32,System.Boolean)">
            <summary>
             Attach a ClaimsIdentity object to the Identity property of the specified user,
             then sign in via the Owin authentication middleware.
            </summary>
            <param name="id"></param>
            <param name="persistent"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.CanProcessSignups">
            <summary>
            Returns a value indicating if we can accept new signups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.Controllers.SignupController.EmailAsUsername(System.String)">
            <summary>
            Gets a valid username from an email address.
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Signup.Models.EmailAddressModel">
            <summary>
            View model for entering email.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Signup.Models.EmailAddressModel.Email">
            <summary>
            Gets or set the email address.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Signup.SignupAreaRegistration">
            <summary>
            Class for registering the signup area.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Signup.SignupAreaRegistration.AreaName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Signup.SignupAreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Signup.Views.ViewPage`1">
            <summary>
            Base class for strongly typed views.
            </summary>
        </member>
        <member name="F:Weavy.Web.Areas.Signup.Views.ViewPage`1.ONBOARDING_URL">
            <summary>
            Gets the url to onboarding.
            </summary>
        </member>
        <member name="T:Weavy.Web.Attributes.AdminAttribute">
            <summary>
            Only admins are allowed access to controllers/actions with this attribute.
            </summary>
        </member>
        <member name="M:Weavy.Web.Attributes.AdminAttribute.AuthorizeCore(System.Web.HttpContextBase)">
            <summary>
            Checks if the current user is an administrator.
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Attributes.InternalAttribute">
            <summary>
            Only internal users are allowed access to controllers/actions with this attribute.
            </summary>
        </member>
        <member name="M:Weavy.Web.Attributes.InternalAttribute.AuthorizeCore(System.Web.HttpContextBase)">
            <summary>
            Checks if the current user is an administrator.
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Attributes.PermissionAttribute">
            <summary>
            Checks that the current user has the specified system permission.
            </summary>
        </member>
        <member name="M:Weavy.Web.Attributes.PermissionAttribute.#ctor(Weavy.Core.Models.Permission)">
            <summary>
            
            </summary>
            <param name="permission"></param>
        </member>
        <member name="M:Weavy.Web.Attributes.PermissionAttribute.AuthorizeCore(System.Web.HttpContextBase)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Attributes.SystemStatusAttribute">
            <summary>
            Prevent access to actions based on <see cref="T:Weavy.Core.Models.SystemStatus"/>
            </summary>
        </member>
        <member name="T:Weavy.Web.Binders.AppQueryBinder">
            <summary>
            Binds the model to a AppQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.AppQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.ContentQueryBinder">
            <summary>
            Binds the model to a AppQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.ContentQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.ConversationQueryBinder">
            <summary>
            Binds the model to a ConversationQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.ConversationQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.EntityBinder">
            <summary>
            Binds the model to an Entity object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.EntityBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.IEntityBinder">
            <summary>
            Binds the model to an Entity&lt;IEntity&gt; object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.IEntityBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.IEntitiesBinder">
            <summary>
            Binds the model to a List&lt;Entity&lt;IEntity&gt;&gt;.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.IEntitiesBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.EntityBinderProvider">
            <summary>
            Defines methods that enable dynamic implementations of model binding for classes that implement the IModelBinder interface. 
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.EntityBinderProvider.GetBinder(System.Type)">
            <summary>
            
            </summary>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.EntityQueryBinder">
            <summary>
            Binds the model to a EntityQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.EntityQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.EnumFlagsModelBinder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.EnumFlagsModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.EnumTypeModelBinder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.EnumTypeModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.FileQueryBinder">
            <summary>
            Binds the model to a ItemQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.FileQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.RoleQueryBinder">
            <summary>
            Binds the model to a GroupQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.RoleQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.IntsBinder">
            <summary>
            Binds the model to an array of integers.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.IntsBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Binds the model to a value by using the specified controller context and binding context.
            </summary>
            <param name="controllerContext">The controller context</param>
            <param name="bindingContext">The binding context</param>
            <returns>The bound value</returns>
        </member>
        <member name="T:Weavy.Web.Binders.ItemQueryBinder">
            <summary>
            Binds the model to a ItemQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.ItemQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.NotificationQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.NotificationQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.NotificationQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Binders.NotificationQueryBinder.BindEventTypes(System.String[])">
            <summary>
            Binds entry types from qs.
            </summary>
            <param name="eventTypes"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.QueryBinder">
            <summary>
            Binds the model to a Query object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.QueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Binders.QueryBinder.BindEntityTypes(Weavy.Core.Models.Query,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="types"></param>
        </member>
        <member name="M:Weavy.Web.Binders.QueryBinder.BindDateRange(Weavy.Core.Models.Query,System.String)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.QueryOptionsBinder">
            <summary>
            Binds the model to a QueryOptions object.
            </summary>
        </member>
        <member name="F:Weavy.Web.Binders.QueryOptionsBinder.DefaultPageSize">
            <summary>
            The default page size.
            </summary>
        </member>
        <member name="F:Weavy.Web.Binders.QueryOptionsBinder.MaxPageSize">
            <summary>
            The max page size.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.QueryOptionsBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Binders.QueryOptionsBinder.BindModel(System.Web.Mvc.ModelBindingContext)">
            <summary>
            Return QueryOptions by parsing the query string.
            </summary>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Binders.QueryOptionsBinder.Get(System.Web.Mvc.ModelBindingContext,System.String[])">
            <summary>
            Gets a string value from the binding context.
            </summary>
            <param name="bindingContext"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Binders.QueryOptionsBinder.GetList``1(System.Web.Mvc.ModelBindingContext,System.String[])">
            <summary>
            Gets a value from the binding context.
            </summary>
            <param name="bindingContext"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Binders.QueryOptionsBinder.GetValue(System.Web.Mvc.ModelBindingContext,System.String[])">
            <summary>
            Gets the <see cref="T:System.Web.Mvc.ValueProviderResult"/> from the binding context or null if no item match the keys.
            </summary>
            <param name="bindingContext"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.SpaceQueryBinder">
            <summary>
            Binds the model to a SpaceQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.SpaceQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.TagQueryBinder">
            <summary>
            Binds the model to a AppQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.TagQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.UserQueryBinder">
            <summary>
            Binds the model to a UserQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.UserQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Controllers.AccountController">
            <summary>
            Controller for managing user accounts.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.AddLogin(System.String)">
            <summary>
            Request a redirect to the external login provider to link a login for the current user.
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.AddLoginCallback">
            <summary>
            Callback from external login provider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Notify">
            <summary>
            A view that notifies the parent window when a user signs in / signs out.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignIn(System.String)">
            <summary>
            Display sign in form.
            </summary>
            <param name="path">The url to redirect to after sign in.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignIn(Weavy.Web.Models.SignInModel,System.String)">
            <summary>
            Sign in with forms authentication against local or AD account.
            </summary>
            <param name="model"></param>
            <param name="path">The url to redirect to after sign in.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.MSOFBA">
            <summary>
            Page to display after successful authentication with MS-OFBA.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignInFromExtension(Weavy.Web.Models.SignInModel,System.String)">
            <summary>
            Responds to signins from extension after configuration.
            </summary>
            <param name="model"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.LinkLogin(Weavy.Web.Models.LinkLoginModel)">
            <summary>
            Associate an external login with an existing user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RemoveLogin(System.String,System.String)">
            <summary>
            Remove a linked account from the current user.
            </summary>
            <param name="provider"></param>
            <param name="providerid"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignInExternal(System.String,System.String)">
            <summary>
            Request a redirect to the external login provider.
            </summary>
            <param name="provider"></param>
            <param name="path">The url to redirect to after sign in.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignInCallback(System.String)">
            <summary>
            Callback method for signing in via external login provider.
            </summary>
            <param name="path">The url to redirect to after sign in.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignOut(System.String)">
            <summary>
            Sign out, then redirect to sign in screen.
            </summary>
            <param name="path">The url to pass to sign in after signing out.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignUp">
            <summary>
            Display sign up form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignUp(Weavy.Web.Models.SignUpModel)">
            <summary>
            Send email with confirmation code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Confirm(System.String)">
            <summary>
            Display form for confirming email adress.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Confirm(System.String,Weavy.Web.Models.ConfirmationModel)">
            <summary>
            Confirm email adress.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RecoverPassword">
            <summary>
            Display form for recovering lost login information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RecoverPassword(Weavy.Web.Models.PasswordRecoveryModel)">
            <summary>
            Send password recovery email.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.ResetPassword(System.String)">
            <summary>
            Display form for resetting password.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.ResetPassword(Weavy.Web.Models.PasswordResetModel)">
            <summary>
            Reset password.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Register(System.String)">
            <summary>
            Display form for registering a new account.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Register(System.String,Weavy.Web.Models.RegisterModel)">
            <summary>
            Register a new account.
            </summary>
            <param name="token"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RegisterWindows">
            <summary>
            Display form for connecting a windows account with a local account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RegisterWindows(Weavy.Web.Models.RegisterWindowsModel)">
            <summary>
            Create a local account for the current windows user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.AddWindows">
            <summary>
            Add a windows account to an existing local user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.AddWindows(Weavy.Web.Models.RegisterWindowsModel)">
            <summary>
            Add a windows account to an existing local user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.EditProfile">
            <summary>
            Display form for editing the user profile for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.UpdateProfile">
            <summary>
            Updates profile for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.EditSettings">
            <summary>
            Display form for editing notification settings for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.UpdateSettings(Weavy.Core.Models.UserSettings)">
            <summary>
            Updates user settings for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.EditAccount">
            <summary>
            Display form for editing the account for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.UpdateAccount(Weavy.Web.Models.AccountModel)">
            <summary>
            Updates account info for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.EditPassword">
            <summary>
            Display form for changing password for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.UpdatePassword(Weavy.Web.Models.PasswordModel)">
            <summary>
            Change password for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Welcome">
            <summary>
            Onboarding page for new Weavy users.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.CheckWindowsLogin">
            <summary>
            A simple check that throws an exception if there is already a login for the current Windows user.
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.GetSignInViewName(System.String)">
            <summary>
            Helper method for returning correct sign in view.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignIn(System.Int32,System.Boolean)">
            <summary>
             Attach a ClaimsIdentity object to the Identity property of the specified user,
             then sign in via the Owin authentication middleware.
            </summary>
            <param name="id"></param>
            <param name="persistent"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RedirectToLocal(System.String)">
            <summary>
            Returns a redirect action that redirects to a local url. If the specified url is not local it redirects to the start page.
            </summary>
            <param name="url">The url to redirect to.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ContentController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.MoveFileModal(System.Int32)">
            <summary>
            Get partial for move file modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.MoveFile(System.Int32,Weavy.Web.Models.ContentMoveModel)">
            <summary>
            Move file to new folder.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.OfficeController">
            <summary>
            Controller for the Office AddIn.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.OfficeController.Taskpane(System.String)">
            <summary>
            Display taskpane for the specified file.
            </summary>
        </member>
        <member name="T:Weavy.Web.Controllers.ShareController">
            <summary>
            Controller for sharing entities with people
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ShareController.Insert(Weavy.Web.Models.ShareIn)">
            <summary>
            Insert a new share
            </summary>
            <param name="share"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.CreateSpaceModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Controllers.CreateSpaceModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.CreateSpaceModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ConnectSpaceModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Controllers.ConnectSpaceModel.SearchTerm">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Controllers.ConnectSpaceModel.Spaces">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Controllers.ConnectSpaceModel.Content">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Controllers.AppController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Get(System.Int32,Weavy.Core.Models.ContentQuery,System.Nullable{Weavy.Core.Models.ContentView})">
            <summary>
            Display specified folder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.New(System.Int32,System.Guid)">
            <summary>
            Display form for adding content to an app.
            </summary>
            <param name="id">Id of parent app.</param>
            <param name="guid">Guid ofcontent (app or item) to add.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Insert(System.Int32,System.Guid,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Add content to an app.
            </summary>
            <param name="id">Id of parent app.</param>
            <param name="guid">Guid of content (app or item) to add.</param>
            <param name="operation"></param>
            <param name="attachmentids"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Edit(System.Int32)">
            <summary>
            Edit details for the specified app.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Update(System.Int32)">
            <summary>
            Update details for the specified app.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Trash(System.Int32)">
            <summary>
            Trash the specified app, i.e. sets the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Restore(System.Int32)">
            <summary>
            Restore the specified app i.e. clears the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.MoveModal(System.Int32)">
            <summary>
            Get partial for move app modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Move(System.Int32,Weavy.Web.Models.ContentMoveModel)">
            <summary>
            Move app.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.CreateOffice(System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.CommentController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Get(System.Int32)">
            <summary>
            Display a comment (redirects to the parent view).
            </summary>
            <param name="id">Id of comment</param>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Edit(System.Int32)">
            <summary>
            Edit comment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Update(System.Int32,Weavy.Web.Models.CommentUpdateModel)">
            <summary>
            Update a comment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Feedback(System.Int32)">
            <summary>
            Get feedback (likes) for the specified comment as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Likes(System.Int32)">
            <summary>
            Get likes details for the specified comment as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Trash(System.Int32)">
            <summary>
            Trash the specified comment.
            </summary>
            <param name="id"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Restore(System.Int32)">
            <summary>
            Restore the specified comment.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.EmbedController">
            <summary>
            Controller for embeds.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.EmbedController.Insert(Weavy.Web.Areas.Api.Models.EmbedIn)">
            <summary>
            
            </summary>
            <param name="embed"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.EmbedController.Get(System.Int32)">
            <summary>
            Get an existing embed partial view
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.TrashController">
            <summary>
            Controller for restoring/deleting items from the trash.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.TrashController.Index(Weavy.Core.Models.Query)">
            <summary>
            Display list of items in recycle bin.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TrashController.Delete(Weavy.Core.Models.EntityType,System.Int32,System.String)">
            <summary>
            Permanently delete a thrashed item.
            </summary>
            <param name="type">The entity to delete.</param>
            <param name="id">The id of the entity to delete</param>
            <param name="tab">The current selected tab</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TrashController.Restore(Weavy.Core.Models.EntityType,System.Int32,System.String)">
            <summary>
            Restore a thrashed entity.
            </summary>
            <param name="type">The entity to restore.</param>
            <param name="id">The id of the entity to restore</param>
            <param name="tab">The current selected tab</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TrashController.TrashFile(System.Int32)">
            <summary>
            Trash the specified file, i.e. sets the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.TrashController.RestoreFile(System.Int32)">
            <summary>
            Restores the specified file i.e. clears the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ErrorController">
            <summary>
            Controller for handling application errors.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.Index">
            <summary>
            Generic error page for unhandled exceptions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.Unauthorized">
            <summary>
            HTTP 401 Unauthorized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.Forbidden">
            <summary>
            HTTP 403 Forbidden.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.NotFound(System.String)">
            <summary>
            HTTP 404 Not Found.
            </summary>
            <param name="aspxerrorpath"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.Expired">
            <summary>
            Displays a license expired message.
            </summary>        
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.Version">
            <summary>
            Displays a version not allowed message.
            </summary>        
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.ThrowException(System.Nullable{System.Int32})">
            <summary>
            Action for testing exceptions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.GetError(System.Net.HttpStatusCode)">
            <summary>
            Helper method for getting error info.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ExternalLinkController">
            <summary>
            Controller for serving external links.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ExternalLinkController.GetLink(System.Guid)">
            <summary>
            Serves the entity referenced by the external link.
            </summary>
            <param name="id">Id of external link.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.ExternalLinkController.RevokeLink(System.Guid)">
            <summary>
            Revoke the specified external link.
            </summary>
            <param name="id">Id of link to revoke.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ExternalLinkController.ViewLink(System.Int32)">
            <summary>
            Display modal with external link to the specified file.
            </summary>
            <param name="id">Id of file.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.FileController">
            <summary>
            Controller for serving files.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Favicon">
            <summary>
            Writes the favicon to the output.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.AppIcon(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Writes the app icon for mobile devices etc to the output.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.BackgroundImage(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Gets an image for use as background in navbars, covers etc.
            </summary>
            <param name="id">Id of the file to return.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="options"></param> 
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.FavIcon(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes the favicon to the output.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Get(System.Int32)">
            <summary>
            Display details for the specified file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Delete(System.Int32,System.Int64)">
            <summary>
            Permanently delete file version.
            </summary>
            <param name="id">Id of file</param>
            <param name="timestamp">The timestamp of the revision to delete</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Revert(System.Int32,System.Int64)">
            <summary>
            Revert to previous revision.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.File"/> to revert.</param>
            <param name="timestamp">Timestamp of the revision to revert to.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Revisions(System.Int32)">
            <summary>
            Lists all versions of the current file.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.File"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.GetRevision(System.Int32,System.Int64)">
            <summary>
            Display a specific revision of a file.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.File"/>.</param>
            <param name="timestamp">The timestamp for the version to show.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.GetContent(System.Int32,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Writes the binary data of the specified file to the output.
            </summary>
            <param name="id">Id of the file to return.</param>
            <param name="name">Filename without extension.</param>
            <param name="ext">Extension of desired output format.</param>
            <param name="timestamp">The revision of the <see cref="T:Weavy.Core.Models.File"/> to get</param>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Edit(System.Int32)">
            <summary>
            Display a form for editing the specified <see cref="T:Weavy.Core.Models.File"/>.
            </summary>
            <param name="id">Id of the file to edit.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Update(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Updates metadata and/or content of a file.
            </summary>
            <param name="id">Id of the file to update.</param>
            <param name="replacement">The id of the uploaded <see cref="T:Weavy.Core.Models.File"/> to replace the current content with.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Collage(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes a collage of the specified images to the output.
            </summary>
            <param name="ids">The image ids.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="options"></param>
            <param name="name"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.GetAppArchive(System.Int32,System.String)">
            <summary>
            Sends the binary content of the files attached to the <see cref="T:Weavy.Core.Models.App"/> as a zip.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.App"/></param>
            <param name="name">The name of the returned zip file.</param>
            <returns>The attached files as a zip file.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.GetItemArchive(System.Int32,System.String)">
            <summary>
            Sends the binary content of the files attached to the <see cref="T:Weavy.Core.Models.Item"/> as a zip.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Item"/></param>
            <param name="name">The name of the returned zip file.</param>
            <returns>The attached files as a zip file.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Avatar(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes the default avatar to the output (optionally resized).
            </summary>
            <param name="name">Name of the image to return.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="options"></param>
            <param name="ext"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Image(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes the specified image to the output (optionally resized).
            </summary>
            <param name="path">Path of the image to return.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="options"></param>
            <param name="ext"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Manifest(System.String)">
            <summary>
            Writes the Web App Manifest file, see https://www.w3.org/TR/appmanifest/.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.AppThumb(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes a thumbnail image for the specified app to the output.
            </summary>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="options"></param>
            <param name="ext"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.FileThumb(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Writes the binary data of the specified file to the output.
            </summary>
            <param name="id">Id of the file to return.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="options"></param>
            <param name="name">Filename without extension.</param>
            <param name="ext">Extension of desired output format.</param>
            <param name="timestamp">The revision of the <see cref="T:Weavy.Core.Models.File"/> to get</param>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.ItemThumb(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes a thumbnail image for the specified item to the output.
            </summary>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="options"></param>
            <param name="ext"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.GetExternalContent(System.Guid,System.String,System.String)">
            <summary>
            Writes the binary data of the specified file to the output.
            </summary>
            <param name="id">Id of external link.</param>
            <param name="name">Filename without extension.</param>
            <param name="ext">Extension of desired output format.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.ContentThumb(Weavy.Core.Models.IContent,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes a thumbnail image for the specified content item to the output.
            </summary>
            <param name="content"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="options"></param>
            <param name="ext"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.SetCacheHeaders(System.DateTime,System.String,System.Nullable{System.Int32})">
            <summary>
            Set cache headers and returns a value indicating whether the file has changed since last request.
            </summary>
            <param name="time">Time when file was last modified.</param>
            <param name="etag">Etag of file.</param>
            <param name="cache">Number of seconds to cache the file in the browser, or <c>null</c>.</param>
            <returns><c>true</c> if file has not changed since last request, otherwise <c>false</c></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.TransmitFileInfo(System.IO.FileInfo,System.String)">
            <summary>
            
            </summary>
            <param name="fi">The file to transmit</param>
            <param name="name">File name to set in Content-Disposition header to force download of the file.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.FileController.Comments(System.Int32)">
            <summary>
            Get comments for the specified item as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.StarController">
            <summary>
            Controller for starred items.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.StarController.Get(Weavy.Core.Models.EntityType,System.Int32)">
            <summary>
            Gets the starred entity as a partial view.
            </summary>
            <param name="type">The entity type.</param>
            <param name="id">The id of the entity.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.StarController.Index">
            <summary>
            Return partial views for displaying starred items in user drawer.
            </summary>
        </member>
        <member name="T:Weavy.Web.Controllers.HomeController">
            <summary>
            Home controller.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.HomeController.Index">
            <summary>
            Display start page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.HomeController.HQ">
            <summary>
            Display form for creating the HQ space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.HomeController.InsertHQ(Weavy.Core.Models.Space)">
            <summary>
            Insert a new space and set is as HQ.
            </summary>
            <param name="space"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.HomeController.SetHQ(System.Nullable{System.Int32})">
            <summary>
            Set existing space as HQ.
            </summary>
            <param name="id">If of space to set as HQ, or <c>null</c> to remove HQ flag from existing HQ.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.HomeController.Search(System.String,Weavy.Core.Models.Query)">
            <summary>
            Display search page.
            </summary>
        </member>
        <member name="T:Weavy.Web.Controllers.ItemController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Drafts">
            <summary>
            Return partial view for displaying drafts in user drawer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Get(System.Int32)">
            <summary>
            Display specified item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Subscribers(System.Int32)">
            <summary>
            Get subscribers, i.e. people that follow the item and will get notified on changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Edit(System.Int32,System.Boolean)">
            <summary>
            Edit specified item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Update(System.Int32,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Update specified item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Discard(System.Int32)">
            <summary>
            Discard draft and unlocks item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Trash(System.Int32)">
            <summary>
            Trash the specified item, i.e. sets the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Restore(System.Int32)">
            <summary>
            Restore the specified item i.e. clears the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Star(System.Int32)">
            <summary>
            Star an item.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Space"/> to archive.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Unstar(System.Int32)">
            <summary>
            Unstar an item.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Space"/> to restore.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Comments(System.Int32)">
            <summary>
            Get comments for the specified item as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Followers(System.Int32)">
            <summary>
            Get followers for the specified item as a partial view.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Delete(System.Int32,System.Int64)">
            <summary>
            Permanently delete item revision.
            </summary>
            <param name="id">Id of item.</param>
            <param name="timestamp">The timestamp of the revision to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Revert(System.Int32,System.Int64)">
            <summary>
            Revert to previous revision.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Item"/> to revert.</param>
            <param name="timestamp">Timestamp of the revision to revert to.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Revisions(System.Int32)">
            <summary>
            Lists all versions of the current item.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Item"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.GetRevision(System.Int32,System.Int64)">
            <summary>
            Display a specific revision of an item.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Item"/>.</param>
            <param name="timestamp">The timestamp for the version to show.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.MoveModal(System.Int32)">
            <summary>
            Get partial for move item modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ItemController.Move(System.Int32,Weavy.Web.Models.ContentMoveModel)">
            <summary>
            Move item.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ConversationController">
            <summary>
            Controller for conversations.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ConversationController.Get(System.Int32)">
            <summary>
            Display a conversation (redirects to messenger).
            </summary>
            <param name="id">Id of message</param>
        </member>
        <member name="T:Weavy.Web.Controllers.MessageController">
            <summary>
            Controller for messages.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.MessageController.Get(System.Int32)">
            <summary>
            Display a message (redirects to parent object).
            </summary>
            <param name="id">Id of message</param>
        </member>
        <member name="T:Weavy.Web.Controllers.NotesController">
            <summary>
            Controller for sticky notes.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.NotesController.Get(System.Int32)">
            <summary>
            Redirect to the space where the sticky note is posted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.NotesController.New(System.Int32)">
            <summary>
            Get modal content for inserting new sticky note into the specified space.
            </summary>
            <param name="id">Id of space where note should be inserted.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.NotesController.Edit(System.Int32)">
            <summary>
            Get modal content for editing sticky note.
            </summary>
            <param name="id">Id of sticky note to edit.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.NotesController.Insert(System.Int32,Weavy.Web.Areas.Api.Models.NoteIn)">
            <summary>
            Insert a new sticky note into the specified space.
            </summary>
            <param name="id">Space id</param>
            <param name="model">The note to insert.</param>
            <returns>The inserted post.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.NotesController.Update(System.Int32,Weavy.Web.Areas.Api.Models.NoteIn)">
            <summary>
            Update a sticky note.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.NotificationController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.NotificationController.Index">
            <summary>
            Return partial view for displaying notifications in ther user drawer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.NotificationController.Get(System.Int32)">
            <summary>
            Get notification with specified id.
            </summary>
            <param name="id">Id of notification</param>
        </member>
        <member name="M:Weavy.Web.Controllers.NotificationController.Preview(System.Int32)">
            <summary>
            Display a way to interact with the notification.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.NotificationController.ReadAll">
            <summary>
            Marks all notifications as read.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.PeopleController">
            <summary>
            Controller for People.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Get(System.Int32)">
            <summary>
            Display the profile of the specified user.
            </summary>
            <param name="id">Id of the user to display.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.GetByUsername(System.String)">
            <summary>
            Display the profile of the specified user.
            </summary>
            <param name="username">Username of the user to display.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Index(Weavy.Core.Models.UserQuery,System.String,System.Nullable{Weavy.Core.Models.Layout})">
            <summary>
            Display list of users.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.New">
            <summary>
            Display form for creating user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Insert(Weavy.Web.Models.CreateAccountModel)">
            <summary>
            Insert new user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Invite">
            <summary>
            Display form for inviting users.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Invite(Weavy.Web.Models.InviteUsersModel)">
            <summary>
            Invite user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.EditProfile(System.Int32)">
            <summary>
            Display form for editing the user profile for a different user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.UpdateProfile(System.Int32)">
            <summary>
            Updates profile for a different user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.EditAccount(System.Int32)">
            <summary>
            Display form for editing the user account for a user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.UpdateAccount(System.Int32,Weavy.Web.Models.EditAccountModel)">
            <summary>
            Updates account info for a user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.EditSettings(System.Int32)">
            <summary>
            Display form for editing the user settings for a user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.UpdateSettings(System.Int32,Weavy.Core.Models.UserSettings)">
            <summary>
            Updates settings for a user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Trash(System.Int32)">
            <summary>
            Trashes the user e.i. sets the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Restore(System.Int32)">
            <summary>
            Restores the user e.i. clears the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Welcome(System.Int32,System.String)">
            <summary>
            Send welcome email with username and password.
            </summary>
            <param name="id"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.PostController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Get(System.Int32)">
            <summary>
            Display details for the specified post.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Insert(System.Int32,Weavy.Web.Models.PostInsertModel)">
            <summary>
            Insert a post into the specified space.
            </summary>
            <param name="id">Space id</param>
            <param name="post">The post to insert.</param>
            <returns>The inserted post.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Pin(System.Int32)">
            <summary>
            Pin a post.
            </summary>
            <param name="id">Post id.</param>
            <returns>Redirects to the space.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Unpin(System.Int32)">
            <summary>
            Unpin a post.
            </summary>
            <param name="id">Post id.</param>
            <returns>Redirects to the space.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.EditModal(System.Int32)">
            <summary>
            Get partial for edit post modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.MoveModal(System.Int32)">
            <summary>
            Get partial for move post modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Move(System.Int32,Weavy.Web.Models.PostMoveModel)">
            <summary>
            Move post.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Update(System.Int32,Weavy.Web.Models.PostUpdateModel)">
            <summary>
            Update a post.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Feedback(System.Int32)">
            <summary>
            Get feedback (likes, comments) for the specified post as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Likes(System.Int32)">
            <summary>
            Get likes details for the specified post as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Votes(System.Int32,System.Int32)">
            <summary>
            Get votes details for the specified post and option as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Comments(System.Int32)">
            <summary>
            Get comments for the specified post as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Poll(System.Int32,System.Int32)">
            <summary>
            Vote on a poll.
            </summary>
            <param name="id"></param>
            <param name="optionid"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.SpaceController">
            <summary>
            Controller for managing spaces.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Join(System.Int32)">
            <summary>
            Current user Joins a space.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to join.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Leave(System.Int32)">
            <summary>
            Current user leaves a space.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to leave.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Follow(System.Int32)">
            <summary>
            Follow a <see cref="T:Weavy.Core.Models.Space"/>.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to follow.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Unfollow(System.Int32)">
            <summary>
            Unfollow an <see cref="T:Weavy.Core.Models.Space"/>.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to unfollow.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Archive(System.Int32)">
            <summary>
            Archive a space.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Space"/> to archive.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Unarchive(System.Int32)">
            <summary>
            Restores a <see cref="T:Weavy.Core.Models.Space"/> from the archive.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Space"/> to restore.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Star(System.Int32)">
            <summary>
            Star a space.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Space"/> to star.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Unstar(System.Int32)">
            <summary>
            Unstar a <see cref="T:Weavy.Core.Models.Space"/>.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Space"/> to unstar.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Trash(System.Int32)">
            <summary>
            Trash a space.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to trash.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Restore(System.Int32)">
            <summary>
            Restores a <see cref="T:Weavy.Core.Models.Space"/>.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to restore.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Edit(System.Int32)">
            <summary>
            Display form for editing a space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Widget(System.Int32)">
            <summary>
            Display widget settings for the space.
            </summary>
            <param name="id">Space id</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.UpdateWidget(System.Int32)">
            <summary>
            Update widget settings for the space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Settings(System.Int32)">
            <summary>
            Edit the space settings.
            </summary>
            <param name="id">Space id</param>        
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.UpdateSettings(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Update a space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.UpdateInvite(System.Int32,System.Int32,System.String)">
            <summary>
            Update an invite.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Members(System.Int32,System.String,Weavy.Core.Models.Query)">
            <summary>
            Display the list of members in the space.
            </summary>
            <param name="id">Space id</param>
            <param name="tab"></param>
            <param name="query">Query for paging etc.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.InsertMembers(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add member(s) to the space.
            </summary>
            <param name="id"></param>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.UpdateMember(System.Int32,System.Int32,Weavy.Core.Models.Access)">
            <summary>
            Updates the permission of the specified member.
            </summary>
            <param name="id"></param>
            <param name="userid"></param>
            <param name="access"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Admin(System.Int32)">
            <summary>
            Make the current user admin in the space.
            </summary>
            <param name="id">The id of the space.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Get(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Display home page of the specified space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Content(System.Int32,Weavy.Core.Models.ContentQuery,System.Nullable{Weavy.Core.Models.ContentView})">
            <summary>
            Displays the root folder of a space.
            </summary>
            <param name="id">Space id</param>
            <param name="query"></param>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Activity(System.Int32,Weavy.Core.Models.QueryOptions,System.Nullable{Weavy.Core.Models.ContentView})">
            <summary>
            Display recent activity in a space.
            </summary>
            <param name="id">Space id</param>
            <param name="opts"></param>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Search(System.Int32,System.String,Weavy.Core.Models.Query)">
            <summary>
            Search content the the specified space.
            </summary>
            <param name="id"></param>
            <param name="query"></param>
            <param name="tab"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.RemoveInvite(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.RemoveMember(System.Int32,System.Int32)">
            <summary>
            Remove member from space
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Delete(System.Int32)">
            <summary>
            Permanently delete the space.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.ApproveMember(System.Int32,System.Int32)">
            <summary>
            Approve request to join a space.
            </summary>
            <param name="id"></param>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.DenyMember(System.Int32,System.Int32)">
            <summary>
            Deny request to join a space.
            </summary>
            <param name="id"></param>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Index(Weavy.Core.Models.SpaceQuery,System.String,System.Nullable{Weavy.Core.Models.Layout})">
            <summary>
            Display list of spaces.
            </summary>
            <param name="query"></param>
            <param name="tab"></param>
            <param name="layout"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.New(System.Nullable{System.Boolean})">
            <summary>
            Display form for creating a new space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Insert(Weavy.Core.Models.Space,System.Boolean)">
            <summary>
            Create a new space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Update(System.Int32,System.String)">
            <summary>
            Update a space.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.StartController">
            <summary>
            Controller for first setup steps.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.StartController.Index">
            <summary>
            Display form for editing profile info.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.StartController.UpdateProfile">
            <summary>
            Set profile info.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.StartController.Settings">
            <summary>
            Display form for editing user settings, e.g. notification preferences.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.StartController.UpdateSettings(Weavy.Core.Models.UserSettings)">
            <summary>
            Update user settings.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.UIController">
            <summary>
            Controller for misc ui components.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.TinyMceSkin(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.InsertLink(Weavy.Core.Models.Query,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Search with the given query options.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.InsertImage(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Insert/Edit image dialog for TinyMCE.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.CronDescription(System.String)">
            <summary>
            Converts cron syntax into a human readable string.
            </summary>
            <param name="expression">The expression to convert.</param>
            <returns>A readable description of the expression.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.DismissMessage(System.String)">
            <summary>
            Dismiss message for the current user.
            </summary>
            <param name="key">The key of the message to clear.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.RemoveMessage(System.String)">
            <summary>
            Removes a message for the current user.
            </summary>
            <param name="key">The key of the message to remove.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.Fab(Weavy.Web.Models.FabModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.MoveFolderOptions(System.String,System.Int32,System.Int32)">
            <summary>
            Gets html markup for options in select list for moving a content item to a new folder.
            </summary>
            <param name="type">Type of content to move</param>
            <param name="id">Id of content to move</param>
            <param name="spaceid">Id of space for which to list folders.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.WeavyController">
            <summary>
            Abstract base class for controllers.
            </summary>
        </member>
        <member name="F:Weavy.Web.Controllers.WeavyController.ControllerString">
            <summary>
            Returns the string "Controller".
            </summary>
        </member>
        <member name="F:Weavy.Web.Controllers.WeavyController.ActionString">
            <summary>
            Returns the string "Action".
            </summary>
        </member>
        <member name="F:Weavy.Web.Controllers.WeavyController.PageSizes">
            <summary>
            Page sizes for paging and infinite scroll.
            </summary>
        </member>
        <member name="P:Weavy.Web.Controllers.WeavyController.User">
            <summary>
            Gets the user security information for the current HTTP request.
            </summary>
        </member>
        <member name="P:Weavy.Web.Controllers.WeavyController.OwinContext">
            <summary>
            Get the current Owin context.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Alert(Weavy.Web.Models.AlertModel)">
            <summary>
            Injects an alert message to be displayed on next page load.
            </summary>
            <param name="alert">The alert to display,</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Alert(System.String)">
            <summary>
            Injects an success message to be displayed on next page load.
            </summary>
            <param name="message">The message to display</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Alert(Weavy.Core.Models.AlertType,System.String)">
            <summary>
            Injects an alert message to be displayed on next page load.
            </summary>
            <param name="type">The type of alert to display, i.e. info, success, warning or danger.</param>
            <param name="message">The message to display</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Alert(Weavy.Core.Models.AlertType,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Injects an alert message to be displayed on next page load.
            </summary>
            <param name="type">The type of alert to display, i.e. info, success, warning or danger.</param>
            <param name="message">The message to display</param>
            <param name="dismissible"></param>
            <param name="sticky"></param>
            <param name="html"></param>
            <param name="inline"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Alert(System.Web.Mvc.ModelStateDictionary)">
            <summary>
            Injects an validation alert to be displayed on next page load.
            </summary>
            <param name="modelState">If not <c>null</c>, a validation summary will be displayed in the alert.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Script(System.String)">
            <summary>
            Injects a script to be executed on next page load.
            </summary>
            <param name="script"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.GetView(System.Nullable{Weavy.Core.Models.ContentView},Weavy.Core.Models.App)">
            <summary>
            Gets and/or sets the selected view from the cookie collection. 
            </summary>
            <param name="view">The view to set or null to get the selected view.</param>
            <param name="app">The app for which to get/set view.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.GetSort(System.Nullable{Weavy.Core.Models.SortBy},Weavy.Core.Models.App)">
            <summary>
            Gets and/or sets the selected sort by from the cookie collection. 
            </summary>
            <param name="sort">The sort by to set or null to get the selected sort by</param>
            <param name="app">The app for which to get/set sort by.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.ActiveLayout(System.Nullable{Weavy.Core.Models.Layout},System.Collections.Generic.IEnumerable{Weavy.Core.Models.Layout})">
            <summary>
            Gets or sets the selected layout from the cookie collection. 
            </summary>
            <param name="layout">The layout to set or null to get the selected layout.</param>
            <param name="supported">Optional list of the supported layouts.</param>
            <returns>The selected layout or the default layout.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Execute``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Executes an action method on another controller.
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Json(System.Object)">
            <summary>
            Creates a JsonResult object that serializes the specified object to JavaScript Object Notation (JSON).
            </summary>
            <param name="data">The JavaScript object graph to serialize.</param>
            <returns>The JSON result object that serializes the specified object to JSON format.</returns>
            <remarks>The data in the data parameter must be serializable. The JsonConvert class is used to serialize the object. The result object that is prepared by this method is written to the response by the ASP.NET MVC framework when the object is executed.</remarks>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
            <summary>
            Creates a JsonResult object that serializes the specified object to JavaScript Object Notation (JSON) format using the specified JSON request behavior.
            </summary>
            <param name="data">The JavaScript object graph to serialize.</param>
            <param name="behavior">The JSON request behavior.</param>
            <remarks>The data in the data parameter must be serializable. The JsonConvert class is used to serialize the object. The result object that is prepared by this method is written to the response by the ASP.NET MVC framework when the object is executed.</remarks>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.ThrowResponseException(System.Net.HttpStatusCode,System.String)">
            <summary>
            Throws a HttpException with the specified code and message.
            </summary>
            <param name="code">The status code of the response.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.TrySetTags(Weavy.Core.Models.ITaggable)">
            <summary>
            Tries to set the tags property from request.
            </summary>
            <param name="taggable"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.View(System.String,System.Nullable{System.Guid},System.Object)">
            <summary>
            
            </summary>
            <param name="viewName"></param>
            <param name="guid"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.PartialView(System.String,System.Nullable{System.Guid},System.Object)">
            <summary>
            
            </summary>
            <param name="viewName"></param>
            <param name="guid"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.RedirectToReferrer(System.String)">
            <summary>
            Creates a <see cref="T:System.Web.Mvc.RedirectResult"/> that redirects to the url referrer of the request.
            </summary>
            <param name="fallback">If referrer is null or not local to the applciation, redirect to this url instead.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.GetSpace(System.Int32,System.Boolean)">
            <summary>
            Helper method for getting a space (and setting it in <see cref="P:Weavy.Web.WeavyRequestContext.Current"/>). Throws a HTTP 404 exception if the space cannot be found.
            </summary>
            <param name="id">Id of space to get.</param>
            <param name="filter"></param>
            <returns>A space</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.GetApp(System.Int32,System.Boolean)">
            <summary>
            Helper method for getting an app (and setting it in <see cref="P:Weavy.Web.WeavyRequestContext.Current"/>). Throws a HTTP 404 exception if the app cannot be found.
            </summary>
            <param name="id">Id of app to get.</param>
            <param name="filter"></param>
            <returns>An app</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.GetItem(System.Int32,System.Boolean)">
            <summary>
            Helper method for getting an item (and setting it in <see cref="P:Weavy.Web.WeavyRequestContext.Current"/>). Throws a HTTP 404 exception if the item cannot be found.
            </summary>
            <param name="id">Id of item to get.</param>
            <param name="filter"></param>
            <returns>An item</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.GetFile(System.Int32,System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Helper method for getting an item. Throws a HTTP 404 exception if the file cannot be found.
            </summary>
            <param name="id">Id of item to get.</param>
            <param name="timestamp"></param>
            <param name="filter"></param>
            <returns>An item</returns>
        </member>
        <member name="T:Weavy.Web.Controllers.WidgetController">
            <summary>
            Controller for widget actions.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.Index">
            <summary>
            Display recent spaces, search, list items etc.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.Notifications">
            <summary>
            Display notifications.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.Stars">
            <summary>
            Display starred items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.Drafts">
            <summary>
            Display drafts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.Messenger">
            <summary>
            Display messenger.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.EditProfile">
            <summary>
            Display form for editing the user profile for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.UpdateProfile">
            <summary>
            Updates profile for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.EditSettings">
            <summary>
            Display form for editing notification settings for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.UpdateSettings(Weavy.Core.Models.UserSettings)">
            <summary>
            Updates user settings for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.EditAccount">
            <summary>
            Display form for editing the account for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.UpdateAccount(Weavy.Web.Models.AccountModel)">
            <summary>
            Updates account info for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.EditPassword">
            <summary>
            Display form for changing password for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.UpdatePassword(Weavy.Web.Models.PasswordModel)">
            <summary>
            Change password for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.Spaces(Weavy.Core.Models.SpaceQuery,System.String)">
            <summary>
            Display list of spaces.
            </summary>
            <param name="query"></param>
            <param name="tab"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.NewSpace">
            <summary>
            Display form for creating a new space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.InsertSpace(Weavy.Core.Models.Space)">
            <summary>
            Create new space.
            </summary>
            <param name="space"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.Search(Weavy.Core.Models.Query)">
            <summary>
            Search in widget strip.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WidgetController.Script">
            <summary>
            Returns the widget script.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.BubbleModel">
            <summary>
            Api bubble model
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.BubbleModel.SpaceId">
            <summary>
            The id of the space to add as a bubble
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.BubbleModel.Url">
            <summary>
            The current url
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.BubbleModel.Destination">
            <summary>
            The url to open up in the bubble
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.BubbleModel.Type">
            <summary>
            How the space should be added
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AccountModel">
            <summary>
            Model used when editing user account.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AccountModel.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AccountModel.Email">
            <summary>
            Gets or sets the email.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.AccountModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Determines whether the model is valid.
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.PasswordRecoveryModel">
            <summary>
            Model used when recovering lost password information.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordRecoveryModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordRecoveryModel.User">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PasswordResetModel">
            <summary>
            Model used when changing password.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordResetModel.Token">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordResetModel.NewPassword">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordResetModel.VerifyPassword">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PasswordResetModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.SignInModel">
            <summary>
            Model used when signing in with a local user account.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.SignInModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.RememberMe">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.AllowSignUps">
            <summary>
            Gets a value indicating whether sign-ups are allowed.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.Settings">
            <summary>
            Gets the auth settings.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.Path">
            <summary>
            Gets or sets the path where to redirect after successful sign-in.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PasswordModel">
            <summary>
            Model used when changing password.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordModel.OldPassword">
            <summary>
            Gets or sets the old password.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordModel.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordModel.VerifyPassword">
            <summary>
            Gets or sets the password verification.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PasswordModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the model.
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.SignUpModel">
            <summary>
            Model used when signing up for an account.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignUpModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignUpModel.Invite">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.SignUpModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Determines whether the model is valid.
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.ConfirmationModel">
            <summary>
            Model used when confirming email address for invites and sign-ups.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfirmationModel.Code">
            <summary>
            Confirmation code
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfirmationModel.Invite">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.RegisterModel">
            <summary>
            Model used when registering a local account.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterModel.Space">
            <summary>
            Gets the <see cref="P:Weavy.Web.Models.RegisterModel.Space"/> the user was invited to (if any).
            </summary>     
            <remarks>
            </remarks>
        </member>
        <member name="M:Weavy.Web.Models.RegisterModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.LinkLoginModel">
            <summary>
            Model used when linking a login to an existing user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LinkLoginModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LinkLoginModel.Email">
            <summary>
            Gets the existing email address.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LinkLoginModel.Provider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LinkLoginModel.ProviderId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.RegisterWindowsModel">
            <summary>
            Model used when connecting a windows login to a local account.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterWindowsModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterWindowsModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterWindowsModel.First">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterWindowsModel.SamAccountName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.WelcomeModel">
            <summary>
            Model for onboarding new users.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.WelcomeModel.AllowSignup">
            <summary>
            Gets or sets a value indicating if signups are allowed.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.WelcomeModel.Strips">
            <summary>
            Gets or sets all strips in installation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.WelcomeModel.OnboardingSpace">
            <summary>
            Gets or sets the space used for onboarding.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.CreateAccountModel">
            <summary>
            Model used when creating an account.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.CreateAccountModel.#ctor">
            <summary>
            Iniializes a new instance of the <see cref="T:Weavy.Web.Models.CreateAccountModel"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateAccountModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateAccountModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateAccountModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateAccountModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateAccountModel.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateAccountModel.IsAdmin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateAccountModel.IsExternal">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateAccountModel.IsSuspended">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.CreateAccountModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation. Subclasses can override this method to supply their own implementation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.EditAccountModel">
            <summary>
            Model used when creating/editing users.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.EditAccountModel.#ctor">
            <summary>
            Iniializes a new instance of the <see cref="T:Weavy.Web.Models.EditAccountModel"/> class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.EditAccountModel.#ctor(Weavy.Core.Models.User)">
            <summary>
            Iniializes a new instance of the <see cref="T:Weavy.Web.Models.EditAccountModel"/> class for the specified <see cref="P:Weavy.Web.Models.EditAccountModel.User"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.IsAdmin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.IsExternal">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.IsSuspended">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.IsTrashed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.EditAccountModel.User">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.EditAccountModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AlertModel">
            <summary>
            Class for pushing alert messages to the UI.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.AlertModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.Type">
            <summary>
            Gets or sets the alert type, e.g. info, success, warning or danger,
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.Dismissible">
            <summary>
            Gets or sets a value indicating whether to add an optional dismiss button to the alert.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.Message">
            <summary>
            Gets or sets the alert message.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.Sticky">
            <summary>
            Gets or sets a value indicating whether the alert should fade out or not.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.IsHtml">
            <summary>
            Gets or sets a value indicating whether the alert message contains html or not.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.IsInline">
            <summary>
            Gets or sets a value indicating whether the Alert should be displayed inline instead of automatically on page load.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AppHeaderFilter">
            <summary>
            Filter property class that handles App header partial
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppHeaderFilter.ShowSearch">
            <summary>
            If search box should be visible or not
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppHeaderFilter.ShowStarred">
            <summary>
            If starred should be shown or not
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppHeaderFilter.ShowLayouts">
            <summary>
            If layout selector should be visible or not
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppHeaderFilter.ShowAddNew">
            <summary>
            If the New [item] button should be visible or not
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppHeaderFilter.ShowNoContent">
            <summary>
            If the No Content banner should be visible
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AppModel">
            <summary>
            View model for an app.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.AppModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppModel.App">
            <summary>
            Gets the app.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppModel.View">
            <summary>
            Gets the <see cref="T:Weavy.Core.Models.ContentView"/> to render.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppModel.Sort">
            <summary>
            Gets the sort order used.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppModel.Content">
            <summary>
            Get the content to display in the app view.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppModel.TagCloud">
            <summary>
            Gets the tag cloud.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppModel.Archive">
            <summary>
            Gets the archive.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.CommentUpdateModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.Id">
            <summary>
            Gets or sets the comment id
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.Text">
            <summary>
            Gets or sets the comment text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.Attachments">
            <summary>
            Gets or sets the attachment ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.Files">
            <summary>
            Gets or sets the attachments.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.RemovedAttachments">
            <summary>
            Gets or sets the removed attachment ids.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.CommentUpdateModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.HomeModel">
            <summary>
            View model for home page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.HomeModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.HomeModel.ManageAlert">
            <summary>
            Gets or sets a value indicating if there is a problem to resolve in the manage area.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.HomeModel.HQSpaces">
            <summary>
            Gets or sets a list of spaces that can be set as HQ.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.InviteUsersModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.InviteUsersModel.Invite1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.InviteUsersModel.Invite2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.InviteUsersModel.Invite3">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.LocalDomainEmailAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LocalDomainEmailAddress.Local">
            <summary>
            Gets or sets the local part of the email address.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LocalDomainEmailAddress.Domain">
            <summary>
            Gets or sets the domain part of the email address.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LocalDomainEmailAddress.Email">
            <summary>
            Gets or sets the full email address.
            </summary>        
        </member>
        <member name="M:Weavy.Web.Models.LocalDomainEmailAddress.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validate that the email address is valid (and part of the whitelisted domains).
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.MembersModel">
            <summary>
            View model for the space members page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.MembersModel.#ctor">
            <summary>
            
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MembersModel.IsPending">
            <summary>
            Gets or sets a value indicating whether the current user has a pending membership request.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MembersModel.HasAdmin">
            <summary>
            Gets or sets a value indicating whether the current space has any admins.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MembersModel.Members">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MembersModel.Query">
            <summary>
            Gets or sets the query used when listing members.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MembersModel.Invites">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.NotificationsModel">
            <summary>
            View model for notifications in user drawer.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.NotificationsModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.NotificationsModel.UnreadConversations">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.NotificationsModel.UnreadNotifications">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.NotificationsModel.ReadNotifications">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ContentModel">
            <summary>
            View model for displaying content in a strip.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ContentModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ContentModel.App">
            <summary>
            Gets or sets the current folder.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ContentModel.View">
            <summary>
            Gets the <see cref="T:Weavy.Core.Models.ContentView"/> to render.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ContentModel.Content">
            <summary>
            Get or sets the content to display.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ConversationModel">
            <summary>
            View model for a <see cref="P:Weavy.Web.Models.ConversationModel.Conversation"/>.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ConversationModel.#ctor">
            <summary>
            Iniializes a new instance of the <see cref="T:Weavy.Web.Models.ConversationModel"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationModel.Conversation">
            <summary>
            Gets the conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationModel.Messages">
            <summary>
            Gets the messages to display.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationModel.Files">
            <summary>
            Gets the files posted in the conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationModel.Draft">
            <summary>
            Gets or sets the current draft.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationModel.Text">
            <summary>
            Gets or sets the query text.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.DocumentSlice">
            <summary>
            Model for receiving a slice of an office document from our Office Add-In.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.DocumentSlice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.DocumentSlice"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.DocumentSlice.Index">
            <summary>
            Gets or sets the slice index.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.DocumentSlice.SliceCount">
            <summary>
            Gets or sets the total number of slices in the document
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.DocumentSlice.Data">
            <summary>
            Gets or sets the slice data as a base64 encoded string.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ErrorModel">
            <summary>
            View model for error pages.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ErrorModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ErrorModel.Code">
            <summary>
            Get or set the Http Status Code.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ErrorModel.Description">
            <summary>
            Get or set the Http Status Description.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ErrorModel.Message">
            <summary>
            Gets or sets the exception message.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ErrorModel.StackTrace">
            <summary>
            Gets or sets the exception stack trace.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.FabModel">
            <summary>
            Model for the FAB button modal dialog
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.FabModel.Space">
            <summary>
            The current space
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.FabModel.App">
            <summary>
            The current app
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.FabModel.SpaceId">
            <summary>
            The id of the selected space
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.FabModel.AppId">
            <summary>
            The id of the selected app
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.FabModel.AppGuid">
            <summary>
            The app guid of the selected app
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.FabModel.AppName">
            <summary>
            The name for a new app
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.FileRevisionsModel">
            <summary>
            Class for displaying the revisions of a file.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.FileRevisionsModel.File">
            <summary>
            Gets or sets the file selected.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.FileRevisionsModel.Revisions">
            <summary>
            Gets or sets the versions for a file.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.RoleModel">
            <summary>
            View model for role.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.RoleModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.RoleModel"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RoleModel.Role">
            <summary>
            Gets or sets the role.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RoleModel.Members">
            <summary>
            Gets or sets the members in the role.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.IPagedList`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Weavy.Web.Models.LauncherModel">
            <summary>
            Model for Weavy launcher iframe
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LauncherModel.Icon">
            <summary>
            The icon for the strip
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LauncherModel.Color">
            <summary>
            The color of the strip
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.LinkActive">
            <summary>
            Enum used for setting links to .active.
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.None">
            <summary>
            Never set link to .active
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.Area">
            <summary>
            Set link to .active if areas match
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.Controller">
            <summary>
            Set link to .active if areas and controllers match
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.Action">
            <summary>
            Set link to .active if areas, controllers and actions match
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.Path">
            <summary>
            Set link to .active if paths match
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.Url">
            <summary>
            Set link to .active if full urls (including query string) match
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.Mapping`2">
            <summary>
            Helper class for managing the mapping of for instance users to SignalR connections.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Weavy.Web.Models.Mapping`2.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.Mapping`2.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.Mapping`2.Add(`0,`1)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Weavy.Web.Models.Mapping`2.GetValues(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.Mapping`2.Remove(`0,`1)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:Weavy.Web.Models.MessageModel">
            <summary>
            Message input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageModel.Text">
            <summary>
            Gets or sets the message text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageModel.Attachments">
            <summary>
            Gets or sets the attachment ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageModel.Embed">
            <summary>
            Gets or sets the embed id.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageModel.EnableEmbeds">
            <summary>
            Gets or sets a value indicating if embeds are enabled.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.MessageModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.RoomModel">
            <summary>
            Conversation input model with message.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RoomModel.Name">
            <summary>
            Gets or sets the name of the room.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RoomModel.Participants">
            <summary>
            Gets or sets the recipients of the message as a comma-separated list of usernames.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.MessageModelWithRecipient">
            <summary>
            Conversation input model with message.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageModelWithRecipient.To">
            <summary>
            Gets or sets the recipient of the message.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.MessageModelWithRecipient.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.Package">
            <summary>
            Wraps a package.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.Package.Posts">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.Package.Spaces">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.Posts">
            <summary>
            Wraps a post.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.Posts.CreatedById">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.Posts.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.Posts.Html">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.Posts.Attachments">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.SpacePackage">
            <summary>
            Wraps a space.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpacePackage.Space">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpacePackage.Apps">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpacePackage.Avatar">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpacePackage.Posts">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpacePackage.Members">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AppPackage">
            <summary>
            Wraps an app.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppPackage.AppGuid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppPackage.App">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppPackage.Apps">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppPackage.Items">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.Attachment">
            <summary>
            Class for wrapping a file.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.Attachment.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.Attachment.Path">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.Attachment.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ItemPackage">
            <summary>
            Class for wrapping items.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ItemPackage.ItemGuid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ItemPackage.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ItemPackage.CreatedById">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ItemPackage.ModifiedById">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ItemPackage.Attachments">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AppMember">
            <summary>
            Class for wrapping members.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppMember.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppMember.Allow">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppMember.Deny">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PersonalModel">
            <summary>
            View model for displaying account/personal information.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PersonalModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PersonalModel.Stars">
            <summary>
            Get or sets the starred entities to display.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PersonalModel.Drafts">
            <summary>
            Gets or sets the drafts to display.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PersonalModel.Notifications">
            <summary>
            Gets or sets the notifications to display.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PollOptionUpsertModel">
            <summary>
            View model for updating a specific poll option
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PollOptionUpsertModel.Id">
            <summary>
            Poll option id
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PollOptionUpsertModel.Text">
            <summary>
            Poll option text
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ContentMoveModel">
            <summary>
            Model for moving content between spaces/folders.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ContentMoveModel.Source">
            <summary>
            Entity to move.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ContentMoveModel.FolderId">
            <summary>
            Id of parent folder where content should be moved.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PostMoveModel">
            <summary>
            Model for moving a post.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostMoveModel.SpaceId">
            <summary>
            Id of space where post should be moved.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostMoveModel.Post">
            <summary>
            Gets or sets the post to move. 
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ShareIn">
            <summary>
            Share input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ShareIn.Text">
            <summary>
            Gets or sets the share text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ShareIn.EntityId">
            <summary>
            The id of the entity to share.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ShareIn.EntityType">
            <summary>
            The type of the entity to share.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ShareIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PostIn">
            <summary>
            Post input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostIn.Text">
            <summary>
            Gets or sets the post text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostIn.Attachments">
            <summary>
            Gets or sets the attachment ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostIn.Options">
            <summary>
            Gets or sets poll options.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostIn.Embed">
            <summary>
            Gets or sets the embed id.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostIn.EntityId">
            <summary>
            The id of the current entity
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostIn.EntityType">
            <summary>
            The type of the current entity
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostIn.Mentions">
            <summary>
            Gets or sets an additional list of people or groups to notify (besides people @mentioned in the text).
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PostInsertModel">
            <summary>
            Viewmodel for insert new post
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostInsertModel.Text">
            <summary>
            Gets or sets the post text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostInsertModel.Attachments">
            <summary>
            Gets or sets the attachment ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostInsertModel.EmbedId">
            <summary>
            Gets or sets the embed id.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostInsertModel.Options">
            <summary>
            Gets or sets poll options.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostInsertModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PostUpdateModel">
            <summary>
            Viewmodel for updating a post
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostUpdateModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostUpdateModel.#ctor(Weavy.Core.Models.Post)">
            <summary>
            
            </summary>
            <param name="post"></param>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Id">
            <summary>
            Gets or sets the post id
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Text">
            <summary>
            Gets or sets the post text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Attachments">
            <summary>
            Gets or sets the attachment ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Files">
            <summary>
            Gets or sets the attachments.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.RemovedAttachments">
            <summary>
            Gets or sets the removed attachment ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Options">
            <summary>
            Gets or sets poll options.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.EmbedId">
            <summary>
            Gets or sets the embed id.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.PollId">
            <summary>
            Gets or sets the poll id.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Post">
            <summary>
            Get the post being edited.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostUpdateModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.RevisionsModel">
            <summary>
            Class for displaying the revisions of an item.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RevisionsModel.Item">
            <summary>
            Gets or sets the item selected.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RevisionsModel.Revisions">
            <summary>
            Gets or sets the versions for an item.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.LicenseModel">
            <summary>
            View model for the register license form.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LicenseModel.LicenseKey">
            <summary>
            Gets or sets the license key.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LicenseModel.License">
            <summary>
            Used when displaying info about the license.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LicenseModel.IsGracePeriod">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LicenseModel.IsExpired">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LicenseModel.IsAllowed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.LicenseModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.SetupAccountModel">
            <summary>
            Model used when setting up a local account.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SetupAccountModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SetupAccountModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SetupAccountModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.SetupAccountModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.SmtpModel">
            <summary>
            View model for setting smtp settings.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SmtpModel.Server">
            <summary>
             Gets or sets the name or IP address of the host used for SMTP transactions.  
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SmtpModel.Port">
            <summary>
            Gets or sets the port used for SMTP transactions.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SmtpModel.From">
            <summary>
            Gets or sets the 'from' address used when sending emails.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SmtpModel.Username">
            <summary>
            Gets or sets the username used for SMTP transactions
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SmtpModel.Password">
            <summary>
            Gets or sets the password used for SMTP transactions.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SmtpModel.DefaultCredentials">
            <summary>
            Gets or sets a value indicating whether default user credentials should be used to access the smtp server.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SmtpModel.Ssl">
            <summary>
            Gets or sets a value indicating whether to use Secure Sockets Layer (SSL) to encrypt the connection.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ConfigurationModel">
            <summary>
            Model for configuring Weavy during setup.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ConfigurationModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.ConfigurationModel"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.ApplicationUrl">
            <summary>
            Gets or sets the application url to use.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.LicenseKey">
            <summary>
            Gets or sets the license key to use when installing.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.Name">
            <summary>
            Gets or sets the name of the first user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.Email">
            <summary>
            Gets or sets the email of the first user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.Username">
            <summary>
            Gets or sets the username to set for the first user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.Password">
            <summary>
            Gets or sets the password to set for the first user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.WhitelistedDomain">
            <summary>
            Gets or sets the domain to whitelist.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.Provider">
            <summary>
            Gets or sets the external auth provider for the first user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.ProviderId">
            <summary>
            Gets or sets the external auth provider id for the first user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.AzureTenantId">
            <summary>
            Gets or sets the tenant id for Azure AD authentication.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.License">
            <summary>
            Gets or sets the license.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.LicenseRequest">
            <summary>
            Gets or sets the license request.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.Smtp">
            <summary>
            Gets or sets the smtp configuration.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.SystemOwnerEmail">
            <summary>
            Gets or sets the system owner email.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.SortModel">
            <summary>
            View model for sorting.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.SortModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SortModel.Id">
            <summary>
            The Id of the item to sort.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SortModel.Order">
            <summary>
            The order (weight) of the item.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SortModel.Children">
            <summary>
            The children to sort.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PostsModel">
            <summary>
            View model for the posts screen.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostsModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostsModel.EnableEmbeds">
            <summary>
            Gets or sets a value indicating if embeds are enabled.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostsModel.EnableSharing">
            <summary>
            Gets or sets a value indicating whether sharing is enabled.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostsModel.Members">
            <summary>
            Gets or sets the list of people to display on the posts screen.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostsModel.Posts">
            <summary>
            Gets or sets the posts to display on the posts screen.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.WidgetConfiguration">
            <summary>
            Configuration for the Widget.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.WidgetConfiguration.InitScript">
            <summary>
            Gets the generic script to trigger Weavy.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.WidgetConfiguration.IsAuthenticated">
            <summary>
            Gets or sets a value indicating if the user is authenticated.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.TypingModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.TypingModel.Conversation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.TypingModel.User">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.WidgetError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.WidgetError.Message">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Extensions.ControllerExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Extensions.ControllerExtensions.ControllerName(System.Type)">
            <summary>
            
            </summary>
            <param name="controller"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.ControllerExtensions.ControllerName(System.Web.Mvc.ControllerContext)">
            <summary>
            Gets the name of the current controller.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.ControllerExtensions.ActionName(System.Web.Mvc.ControllerContext)">
            <summary>
            Gets the name of the current action.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.ControllerExtensions.GetViewName(System.Web.Mvc.ControllerContext,System.String,System.Nullable{System.Guid})">
            <summary>
            Returns the name of a view for rendering an extension with the specified guid.
            </summary>
            <param name="context"></param>
            <param name="name"></param>
            <param name="guid"></param>
            <returns>A view name</returns>
        </member>
        <member name="T:Weavy.Web.Extensions.ExpressionHelper">
            <summary>
            Helper methods for working with Expressions.
            </summary>
        </member>
        <member name="M:Weavy.Web.Extensions.ExpressionHelper.GetRouteValuesFromExpression``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.ExpressionHelper.GetTargetActionName(System.Reflection.MethodInfo)">
            <summary>
            This method contains some heuristics that will help determine the correct action name from a given MethodInfo
            assuming the default sync / async invokers are in use. The logic's not foolproof, but it should be good enough
            for most uses. 
            </summary>
            <param name="methodInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.ExpressionHelper.AddParameterValuesFromExpressionToDictionary(System.Web.Routing.RouteValueDictionary,System.Linq.Expressions.MethodCallExpression)">
            <summary>
            
            </summary>
            <param name="rvd"></param>
            <param name="call"></param>
        </member>
        <member name="M:Weavy.Web.Extensions.ExpressionHelper.Wrap(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Extensions.HtmlHelperExtensions">
            <summary>
            Helper methods for generating Html markup.
            </summary>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.AlertMessages(System.Web.Mvc.HtmlHelper,System.Boolean)">
            <summary>
            Renders alert messages that are stored in TempData.
            </summary>
            <param name="helper"></param>
            <param name="inline"><c>true</c> to render inline alerts, or <c>false</c> to render <see cref="T:Weavy.Web.Models.AlertModel"/> messages where the IsInline property is <c>false</c>. </param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.Scripts(System.Web.Mvc.HtmlHelper,System.Object)">
            <summary>
            Renders script that are stored in TempData.
            </summary>
            <param name="helper"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.Badge(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Privacy)">
            <summary>
            Returns a badge indicating the space privacy level.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="privacy">The privacy level for which to render a badge.</param>
            <returns>HTML markup for a badge.</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.Badge(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Invite)">
            <summary>
            Returns a badge indicating the invite status.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="invite">The invite for which to render a badge.</param>
            <returns>HTML markup for a badge.</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.NotificationsBadge(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns a badge indicating the number of unread notifications.
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.Badge(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Member)">
            <summary>
            Returns a badge indicating the space member permission.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="member">The member for which to render a badge.</param>
            <returns>HTML markup for a badge.</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.Badge(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.User)">
            <summary>
            Returns a badge indicating the user status.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="user">The user for which to render a badge.</param>
            <returns>HTML markup for a badge.</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.FilterForm``1(System.Web.Mvc.HtmlHelper,System.Linq.Expressions.Expression{System.Action{``0}},Weavy.Core.Models.Query,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="expression"></param>
            <param name="query"></param>
            <param name="htmlAttributes"></param>
            <param name="inputAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.SearchResultText``2(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.SearchResult{``0,``1})">
            <summary>
            Returns a descriptive text for the specified search result.
            </summary>
            <param name="html"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.DisplayGroups(System.Web.Mvc.HtmlHelper,System.Object,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="model"></param>
            <param name="group"></param>
            <param name="exclude"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.EditorsForModel(System.Web.Mvc.HtmlHelper,System.Object,System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns an HTML input field for each property in the model.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="model">The object for which to render input fields, <c>null</c> to render input fields for the current model.</param>
            <param name="group">The name of the group for which to return input fields, <c>null</c> to return input fields for properties without GroupName in the model.</param>
            <param name="formGroups"><c>true</c> to wrap the label and input field in .form-group, otherwise <c>false</c></param>
            <param name="formLabels"><c>true</c> to render labels for input fields, otherwise <c>false</c></param>
            <param name="formText"><c>true</c> to render help text for input fields, otherwise <c>false</c></param>
            <param name="include">Names of properties that should not be rendered, <c>null</c> to include all properties.</param>
            <param name="exclude">Names of properties that should not be rendered, <c>null</c> includes all properties.</param>
            <returns>An HTML input element for each property in the model.</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.SvgSprite(System.Web.Mvc.HtmlHelper)">
            <summary>
            Renders markup for the svg sprite map on the page.
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.SvgIcon(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.IEntity,System.Nullable{System.Int32},System.Object)">
            <summary>
            Renders icon markup for the specified entity.
            </summary>
            <param name="html"></param>
            <param name="entity"></param>
            <param name="size"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.SvgIcon(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Nullable{System.Int32},System.Object)">
            <summary>
            Renders markup for the specified icon.
            </summary>
            <param name="html"></param>
            <param name="name">name of icon, e.g. "home", see icons task in gulpfile.js for a complete list.</param>
            <param name="color">name of color to use for the icon, e.g. "blue", "red-500", "green-700" etc.</param>
            <param name="size">icon size, i.e. 18, 24, 36 or 48.</param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.SvgIcons(System.Web.Mvc.HtmlHelper)">
            <summary>
            Renders a list of all icons in our sprite (used on test page)
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.SelectOptions(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IEnumerable{Weavy.Core.Models.IEntity},System.Nullable{System.Int32})">
            <summary>
            Returns a list of &lt;option&gt; elements representing the specified entities.
            </summary>
            <param name="html"></param>
            <param name="entities">The entities for which to create options.</param>
            <param name="selected">Id of selected entity.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.FolderPickerOptions(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.IContent,System.Int32)">
            <summary>
            Returns a list of &lt;option&gt; elements representing folders in the specified space.
            </summary>
            <param name="html"></param>
            <param name="content">Content (folder, item, file) to move.</param>
            <param name="spaceId">Id of space for which to list folders.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.FolderpickerOptions(Weavy.Core.Models.IContent,System.Collections.Generic.IEnumerable{Weavy.Core.Models.App},System.Collections.Generic.IEnumerable{Weavy.Core.Models.App},System.Int32)">
            <summary>
            Recursively create a list of &lt;option&gt; elements representing folders.
            </summary>
            <param name="content">Content to move</param>
            <param name="folders">List of folders</param>
            <param name="descendants">Descendants of source folder.</param>
            <param name="depth"></param>
            <returns>A flat list of <see cref="T:Weavy.Core.Models.App"/> objects.</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.ActionLink``1(System.Web.Mvc.HtmlHelper,System.Linq.Expressions.Expression{System.Action{``0}},System.String,System.String,System.String,System.String,System.Object,Weavy.Web.Models.LinkActive)">
            <summary>
            
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="html"></param>
            <param name="qs">query string</param>
            <param name="icon">icon name</param>
            <param name="color">icon color</param>
            <param name="text"></param>
            <param name="expression"></param>
            <param name="active"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.Pagination(System.Web.Mvc.HtmlHelper,Weavy.Core.Collections.IPagedList)">
            <summary>
            Renders pagination controls.
            </summary>
            <param name="html"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.WriteDots(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the dots (…) for the pager.
            </summary>
            <param name="html">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.WritePageNumber(System.Web.UI.HtmlTextWriter,Weavy.Core.Collections.IPagedList,System.String,System.Collections.Specialized.NameValueCollection,System.Int32,System.Int32)">
            <summary>
            Renders the anchors used for paging.
            </summary>
            <param name="html">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
            <param name="list"></param>
            <param name="path"></param>
            <param name="qs"></param>
            <param name="page">The current page number.</param>
            <param name="top"></param>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.GetRouteValuesFromExpression``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.GetTargetActionName(System.Reflection.MethodInfo)">
            <summary>
            
            </summary>
            <param name="methodInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.AddParameterValuesFromExpressionToDictionary(System.Web.Routing.RouteValueDictionary,System.Linq.Expressions.MethodCallExpression)">
            <summary>
            
            </summary>
            <param name="rvd"></param>
            <param name="mce"></param>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.IconImg(System.Web.Mvc.HtmlHelper,System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Object)">
            <summary>
            Returns an img element with the theme icon.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="size"></param>
            <param name="retina"></param>
            <param name="absolute"></param> 
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.Time(System.Web.Mvc.HtmlHelper,System.Nullable{System.DateTime},System.String)">
            <summary>
            Returns a &lt;time&gt; element with the specified date.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="date">The (UTC) date to return as text.</param>
            <param name="format">A standard or custom date and time format string.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.Time(System.Web.Mvc.HtmlHelper,System.DateTime,System.String,System.Boolean)">
            <summary>
            Returns a &lt;time&gt; element with the specified date.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="date">The (UTC) date to return as text.</param>
            <param name="format">A standard or custom date and time format string.</param>
            <param name="abbrev"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.TimeWhen(System.Web.Mvc.HtmlHelper,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Returns a &lt;time&gt; element when the specified date occured.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="date">The (UTC) date to return as text.</param>
            <param name="abbrev"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.TimeWhen(System.Web.Mvc.HtmlHelper,System.DateTime,System.Boolean)">
            <summary>
            Returns a &lt;time&gt; element when the specified date occured.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="date">The (UTC) date to return as text.</param>
            <param name="abbrev"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.WhatByWhen(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Item)">
            <summary>
            Returns a string containing when item was created/modified and by whom.
            </summary>
            <param name="helper"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.SubscribersText(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.IFollowable)">
            <summary>
            Returns a string containing info about number of subscribers.
            </summary>
            <param name="helper"></param>
            <param name="followable"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.ScrollMore(System.Web.Mvc.HtmlHelper,Weavy.Core.Collections.IPagedList,System.String,System.String,System.String)">
            <summary>
            Renders an anchor for loading more data with infinite scroll.
            </summary>
            <param name="helper"></param>
            <param name="list"></param>
            <param name="target">Selector for target element where next page should be appended</param>
            <param name="mode">Specify "append" or "prepend" to indicate whether new data scould be appended or prepended to <paramref name="target"/>.</param>
            <param name="url">Base url to use when constructing the link for loading next page of data.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.ScrollNext(System.Web.Mvc.HtmlHelper,Weavy.Core.Collections.IPagedList,System.String)">
            <summary>
            Renders an anchor element for loading next page of data with infinite scroll.
            </summary>
            <param name="helper"></param>
            <param name="list"></param>
            <param name="url">base url to use when generating the link</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.SvgSpinner(System.Web.Mvc.HtmlHelper,System.Int32,System.Boolean)">
            <summary>
            Renders markup for the animated spinner.
            </summary>
            <param name="html"></param>
            <param name="size"></param>
            <param name="spin"><c>true</c> to add the .spin class on first render.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.Title(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Helper for getting the title for the html head.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="title">The defined title.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.ThemeHead(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Helper for rendering link to favicon, app manifest etc.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.ThemeStyle(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Helper for rendering a themed stylesheet.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="fileName">Virtual path to scss file, e.g. ~/styles/weavy.scss</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.ThemeStyle(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Nullable{Weavy.Bundler.BundleOutput})">
            <summary>
            Helper for rendering a themed stylesheet.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="fileName">Virtual path to scss file, e.g. ~/styles/weavy.scss</param>
            <param name="htmlColor">html color, e.g. "red" or "#0275D8", <c>null</c> uses the color from the current <see cref="T:Weavy.Core.Models.Theme"/> settings.</param>
            <param name="htmlAttributes"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.GetThemedScssFile(System.String,System.String)">
            <summary>
            Helper method for returning a .scss stylesheet file with our theme colors injected.
            </summary>
            <param name="fileName"></param>
            <param name="htmlColor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.GetThemedCss(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="htmlColor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.StarToggle(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.IEntity,System.Boolean,System.Object)">
            <summary>
            Returns an button element for starring/unstarring the specified entity.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="entity">The entity for which to generate a star link.</param>
            <param name="compact">Set to false to allow toggling an unstarred entity.</param>
            <param name="htmlAttributes">Html attributes to merge with the button.</param>
            <returns>An anchor element (a element).</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.FollowToggle(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.User)">
            <summary>
            Returns a button element (&lt;button&gt;) for following/unfollowing the specified user.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="user">The entity for which to generate a star link.</param>
            <returns>A button.</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.SubscribeToggle(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.IFollowable,System.Object)">
            <summary>
            Returns a anchor element (a element) for turning on/off notifications for the specified entity.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="followable">The entity.</param>
            <param name="htmlAttributes">Html attributes to merge.</param>
            <returns>An anchor.</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.JoinToggle(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Space)">
            <summary>
            Returns an anchor element (a element) for joining/leaving the specified space.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="space">The entity for which to generate a star link.</param>
            <returns>An anchor element (a element).</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.ItemBadge(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Item)">
            <summary>
            Returns a badge with item status, i.e. editing, locked etc.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="item">The entity for which to generate a badge.</param>
            <returns>A badge (span element).</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.PreviewAttributes(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.File,System.String,Weavy.Core.Models.IEntity)">
            <summary>
            Gets html attributes needed for triggering image and document preview.
            </summary>
            <param name="html"></param>
            <param name="file"></param>
            <param name="href"></param>
            <param name="attachedto"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.InitHtmlEditor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns a javascript for initializing the html editor.
            </summary>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.PartialContent(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.ContentView,Weavy.Core.Models.IContent,System.Object,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Renders the specified partial view as an HTML-encoded string.
            </summary>
            <param name="html"></param>
            <param name="view"></param>
            <param name="content"></param>
            <param name="model"></param>
            <param name="viewData"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.RenderPartialContent(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.ContentView,Weavy.Core.Models.IContent,System.Object,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Renders the specified partial view.
            </summary>
            <param name="html"></param>
            <param name="view"></param>
            <param name="content"></param>
            <param name="model"></param>
            <param name="viewData"></param>
        </member>
        <member name="M:Weavy.Web.Extensions.HtmlHelperExtensions.GetPartialContentViewName(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.ContentView,Weavy.Core.Models.IContent)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="view"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Extensions.HtmlHelperExtensions.ViewDataContainer">
            <summary>
            Private helper class needed to create a HtmlHelper with a new view context etc.
            </summary>
        </member>
        <member name="T:Weavy.Web.Extensions.UrlHelperExtensions">
            <summary>
            Extension methods for creating urls.
            </summary>
        </member>
        <member name="F:Weavy.Web.Extensions.UrlHelperExtensions.CONTROLLER">
            <summary>
            Returns the string "Controller".
            </summary>
        </member>
        <member name="F:Weavy.Web.Extensions.UrlHelperExtensions.ACTION">
            <summary>
            Returns the string "Action".
            </summary>
        </member>
        <member name="F:Weavy.Web.Extensions.UrlHelperExtensions.AREA">
            <summary>
            Returns the string "Area".
            </summary>
        </member>
        <member name="M:Weavy.Web.Extensions.UrlHelperExtensions.Back(System.Web.Mvc.UrlHelper,System.String)">
            <summary>
            Get an url suitable for navigating back from the current page.
            </summary>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="url">Default back url.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.UrlHelperExtensions.Back``1(System.Web.Mvc.UrlHelper,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Helper method for generating for getting an url for navigating back from the current page.
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.UrlHelperExtensions.Action``1(System.Web.Mvc.UrlHelper,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Helper method for generating urls to strongly typed actions.
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.UrlHelperExtensions.IsActive``1(System.Web.Mvc.UrlHelper,System.Linq.Expressions.Expression{System.Action{``0}},Weavy.Web.Models.LinkActive)">
            <summary>
            
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="helper"></param>
            <param name="expression"></param>
            <param name="active"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.UrlHelperExtensions.Rebuild(System.Web.Mvc.UrlHelper,System.Object[])">
            <summary>
            Rebuilds the url of the current request by adding, removing and/or replacing query string parameters.
            </summary>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="replacement"></param>
            <returns></returns>
            <example>
            A call to <c>Rebuild("tab", null, "p", 1, "ps", 25)</c> should remove the 'tab' parameter and add or replace the 'p' and 'ps' parameters depending on if they exist or not.
            </example>
        </member>
        <member name="M:Weavy.Web.Extensions.UrlHelperExtensions.OrderBy(System.Web.Mvc.UrlHelper,System.String)">
            <summary>
            Adds an orderby query string parameter to the current request path.
            </summary>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.UrlHelperExtensions.ScrollNext(System.Web.Mvc.UrlHelper,Weavy.Core.Collections.IPagedList,System.String)">
            <summary>
            Renders an url for loading next page of data with infinite scroll.
            </summary>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="list"></param>
            <param name="url">base url to use when generating the link</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.UrlHelperExtensions.Icon(System.Web.Mvc.UrlHelper,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Returns the url to the theme icon.
            </summary>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="size"></param>
            <param name="retina"></param>
            <param name="absolute"></param> 
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Extensions.WeavyHtmlExtensions">
            <summary>
            Contains extension methods for generating html markup.
            </summary>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.AvatarImg(Weavy.Core.Models.IHasAvatar,System.Int32,System.Boolean,System.Nullable{System.Drawing.Color},System.Boolean,System.Object,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Returns the avatar image for the specified item.
            </summary>
            <param name="item"></param>
            <param name="size"></param>
            <param name="retina"></param>
            <param name="background"></param>
            <param name="absolute"></param>
            <param name="htmlAttributes"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="presence"><c>true</c> to add presence status to the image, otherwise <c>false</c>.</param>
            <param name="rasterize"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.AvatarImg(Weavy.Core.Models.Notification,System.Int32,System.Boolean,System.Nullable{System.Drawing.Color},System.Boolean,System.Object,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="size"></param>
            <param name="retina"></param>
            <param name="background"></param>
            <param name="absolute"></param>
            <param name="htmlAttributes"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.AvatarImg(Weavy.Core.Models.File,System.Int32,System.Boolean,System.Nullable{System.Drawing.Color},System.Boolean,System.Object,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="file"></param>
            <param name="size"></param>
            <param name="retina"></param>
            <param name="background"></param>
            <param name="absolute"></param>
            <param name="htmlAttributes"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.AvatarImg(Weavy.Core.Models.Post,System.Int32,System.Boolean,System.Nullable{System.Drawing.Color},System.Boolean,System.Object,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="size"></param>
            <param name="retina"></param>
            <param name="background"></param>
            <param name="absolute"></param>
            <param name="htmlAttributes"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.AvatarLink(Weavy.Core.Models.IHasAvatar,System.Int32,System.Boolean,System.Nullable{System.Drawing.Color},System.Boolean,System.Object,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Returns an avatar image that links to the specified entity.
            </summary>
            <param name="entity"></param>
            <param name="size"></param>
            <param name="retina"></param>
            <param name="background"></param>
            <param name="absolute"></param>
            <param name="htmlAttributes"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="presence"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.Breadcrumb(Weavy.Core.Models.IContent,System.Object)">
            <summary>
            Returns breadcrumb navigation for the specified content item.
            </summary>
            <param name="entity"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.Description(Weavy.Core.Models.IndexResult)">
            <summary>
            Returns a descriptive text for the specified search result.
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.FAB(Weavy.Core.Models.App)">
            <summary>
            Returns a FAB with links for creating content in folder.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.AllowedChildrenString(Weavy.Core.Models.App)">
            <summary>
            Gets the allowed children for the app as a comma separated string of guids, or <c>null</c> if all are allowed.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.AllowedParentsString(Weavy.Core.Models.App)">
            <summary>
            Gets the allowed parents for the app as a comma separated string of guids, or <c>null</c> if all are allowed.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.DisplayInTreeView(Weavy.Core.Models.App)">
            <summary>
            Returns true if an app should be displayed in the tree view
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.AllowedParentsString(Weavy.Core.Models.Item)">
            <summary>
            Gets the allowed parents for the item as a comma separated string of guids, or <c>null</c> if all are allowed.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.AsTagLinks(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns the tags as a comma separated list of anchors.
            </summary>
            <param name="tags"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.MarkdownToHtml(System.String)">
            <summary>
            Converts a markdown string to Html.
            </summary>
            <param name="markdown">The markdown to convert to html</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.CommentsText(Weavy.Core.Models.ICommentable,System.Boolean)">
            <summary>
            Return a string with the number of comments for en entity, e.g. "3 comments".
            </summary>
            <param name="entity"></param>
            <param name="abbrev"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.FollowersText(Weavy.Core.Models.User,System.Boolean)">
            <summary>
            Return a string with the number of follers a user has, e.g. "3 followers".
            </summary>
            <param name="user"></param>
            <param name="abbrev"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.MembersText(Weavy.Core.Models.Space,System.Boolean)">
            <summary>
            Return a string with the number of members in a space, e.g. "3 members".
            </summary>
            <param name="space"></param>
            <param name="abbrev"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.MembersText(Weavy.Core.Models.Role,System.Boolean)">
            <summary>
            Return a string with the number of members in a group, e.g. "3 members".
            </summary>
            <param name="group"></param>
            <param name="abbrev"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.Icon(Weavy.Core.Models.Layout)">
            <summary>
            Returns the icon to use for the layout.
            </summary>
            <param name="layout"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.Icon(Weavy.Core.Models.ContentView)">
            <summary>
            Returns the icon to use for the view.
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.Liketext(Weavy.Core.Models.ILikeable)">
            <summary>
            Return a contextual description of which people likes the object, e.g. "You and 3 others like this".
            </summary>
            <param name="likeable"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.Domain(Weavy.Core.Models.Embed)">
            <summary>
            Gets the domain where the embed originates.
            </summary>
            <param name="embed"></param>
            <returns>The domain.</returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.Facepile(System.Collections.Generic.IEnumerable{Weavy.Core.Models.User},System.Int32,System.Int32,System.Boolean,System.Object)">
            <summary>
            Render linked avatar images for the specified user objects. 
            </summary>
            <param name="users"></param>
            <param name="max"></param>
            <param name="size"></param>
            <param name="retina"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.Link(Weavy.Core.Models.IEntity)">
            <summary>
            Returns a link to the entity.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.GetAdditionalData(System.Web.Mvc.ViewDataDictionary,System.String)">
            <summary>
            Helper method to return additional data for a ViewDataDictionary.
            </summary>
            <param name="viewData"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Extensions.WeavyHtmlExtensions.WidgetScript(Weavy.Core.Models.Space,System.Boolean)">
            <summary>
            Gets the script needed to embed this strip in the external system.
            </summary>
        </member>
        <member name="T:Weavy.Web.Filters.HandleExceptionFilter">
            <summary>
            Logs unhandled exceptions and displays a custom error page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Filters.HandleExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>
            Called when an exception occurs.
            </summary>
            <param name="filterContext">The filter context.</param>
        </member>
        <member name="T:Weavy.Web.WeavyApplication">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.WeavyApplication.Application_Start">
            <summary>
            Start up Weavy on application start.
            </summary>
        </member>
        <member name="M:Weavy.Web.WeavyApplication.Application_End">
            <summary>
            Shut down Weavy to free up some resources.
            </summary>
        </member>
        <member name="M:Weavy.Web.WeavyApplication.Application_PreSendRequestHeaders(System.Object,System.EventArgs)">
            <summary>
            Remove some HTTP Headers for a little extra security (by obscurity)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Weavy.Web.Owin.BasicAuthenticationExtensions">
            <summary>
            Extension methods for using the <see cref="T:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationMiddleware"/>,
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.BasicAuthenticationExtensions.UseBasicAuthentication(Owin.IAppBuilder,Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationOptions)">
            <summary>
            Inserts the <see cref="T:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationMiddleware"/> into the OWIN pipeline.
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationHandler">
            <summary>
            Authentication handler for the <see cref="T:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationMiddleware"/>,
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationHandler.#ctor(Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationHandler"/> class.
            </summary>
            <param name="options">The authentication options.</param>
        </member>
        <member name="M:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationHandler.AuthenticateCoreAsync">
            <summary>
            The core authentication logic for Basic authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationHandler.ApplyResponseChallengeAsync">
            <summary>
            Add response challenge header for Basic authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationMiddleware">
            <summary>
            Authentication middleware for Basic authentication.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationMiddleware"/> class.
            </summary>
            <param name="next">The next OWIN middleware.</param>
            <param name="options">he authentication options.</param>
        </member>
        <member name="M:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            Handles the request.
            </summary>
            <param name="context">The request context.</param>
        </member>
        <member name="M:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationMiddleware.CreateHandler">
            <summary>
            Creates an authentication handler.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationOptions">
            <summary>
            Authentication Options for the <see cref="T:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationMiddleware"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationOptions.Realm">
            <summary>
            Gets the realm.
            </summary>
        </member>
        <member name="P:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationOptions.LoginPath">
            <summary>
            Specifies the path to the log-in  redirect URL which is used by the Cookie authentication middleware, e.g. /sign-in.
            </summary>
            <remarks>
            This property is used to detect the case when Cookie authentication fails in a client 
            that doesn't support it (i.e. MS Office application), and thus we need to issue Basic 
            authentication.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.BasicAuthentication.BasicAuthenticationOptions"/> class.
            </summary>
            <param name="realm"></param>
        </member>
        <member name="T:Weavy.Web.Owin.CookieAuthentication.RedirectBehavior">
            <summary>
            Custom redirect behavior for cookie based authentication.
            </summary>
        </member>
        <member name="F:Weavy.Web.Owin.CookieAuthentication.RedirectBehavior.ApplyRedirect">
            <summary>
            Redirects to the LoginPage if the request was made by a browser, is not an ajax request, and was made by an unathenticated user.
            </summary>
        </member>
        <member name="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationExtensions">
            <summary>
            Provides extension methods to add MS-OFBA Authentication middleware to ASP.NET MVC project
            using app.UseXXX() patern.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationExtensions.UseMicrosoftOfficeFormsBasedAuthentication(Owin.IAppBuilder,Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions)">
            <summary>
            Adds MS-OFBA authentication middleware to the OWIN project (using passed <see cref="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions"/> class).
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationExtensions.UseMicrosoftOfficeFormsBasedAuthentication(Owin.IAppBuilder)">
            <summary>
            Adds MS-OFBA authentication middleware to the OWIN project (using default settings of <see cref="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions"/>).
            </summary>
        </member>
        <member name="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler">
            <summary>
            OWIN middleware that implements 'MS-OFBA' authentication protocol.
            </summary>
            <remarks>
            Provides fallback to MS-OFBA authentication if HTTP response code 302 
            (redirect to log-in page) has been issued after (failed) attempt to 
            authenticate using other OWIN authentication middleware (i.e. cookie)
            that isn't supported by host (i.e. Microsoft Office application).
            </remarks>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler.#ctor(Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler.AuthenticateCoreAsync">
            <summary>
            The core authentication logic which must be provided by the handler. Will be invoked at most
            once per request. Do not call directly, call the wrapping Authenticate method instead.
            </summary>
            <returns>
            The ticket data provided by the authentication logic
            </returns>
            <remarks>
            We always return null because goal of this handler is just to tell MS Office to open authentication window.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler.ApplyResponseChallengeAsync">
            <summary>
            Deal with 401 challenge concerns.
            </summary>
            <reremarks>
            If an authentication scheme in question
            deals an authentication interaction as part of it's request flow. (like adding a response header, or
            changing the 401 result to 302 of a log-in page or external sign-in location.)
            </reremarks>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler.ToAbsolute(Microsoft.Owin.IOwinRequest,Microsoft.Owin.PathString)">
            <summary>
            Gets absolute URI from relative.
            </summary>
            <param name="request">The request.</param>
            <param name="relativeUrl">The relative URL.</param>
        </member>
        <member name="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware">
            <summary>
            Implements MS-OFBA Authentication Middleware. 
            See https://msdn.microsoft.com/en-us/library/cc313069(v=office.12).aspx.
            </summary>
            <remarks>
            MS-OFBA is supported by Microsoft Office 2007 SP1 and later versions.
            MS-OFBA is not supported by Microsoft Mini-redirector and OS X Finder.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware"/> class.
            </summary>
            <param name="next">The next.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            Handles the request.
            </summary>
            <param name="context">The request context.</param>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware.CreateHandler">
            <summary>
            Creates the handler for MS-OFBA Authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware.IsMSOFBAAccepted(Microsoft.Owin.IOwinRequest)">
            <summary>
            Analyzes request headers to determine MS-OFBA support.
            </summary>
            <remarks>
            MS-OFBA is supported by Microsoft Office 2007 SP1 and later versions 
            and any application that provides X-FORMS_BASED_AUTH_ACCEPTED: t header 
            in OPTIONS request.
            </remarks>
        </member>
        <member name="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions">
            <summary>
            Provides options to configure Basic Authentication Middleware.
            </summary>
        </member>
        <member name="P:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions.LoginPath">
            <summary>
            Specifies the path to log-in page used by MS-OFBA.
            </summary>
            <remarks>
            This page will be displyed in dialog box presented by Microsoft Office  or other OFBA-enabled application.
            </remarks>
        </member>
        <member name="P:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions.LoginSuccessPath">
            <summary>
            Specifies the path to log-in redirect URL which is used to indicate successful login.
            </summary>
            <remarks>
            On seeing the redirect, the client determines that this URI matches that returned in response to the 
            Protocol Discovery request. In case the URIs match, the client assumes success, follows the 
            redirect, and closes the form.
            </remarks>
        </member>
        <member name="P:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions.DialogSize">
            <summary>
            Gets or sets the size of the OFBA log-in dialog.
            </summary>
            <value>
            The size of the dialog.
            </value>
        </member>
        <member name="P:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions.ReturnUrlParameter">
            <summary>
            The parameter name used to pass the return URL.
            </summary>
            <value>String that represents return URL parameter name.</value>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions"/> class.
            </summary>
        </member>
        <member name="T:Weavy.Web.Owin.OAuth.AuthorizationServerProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.OAuth.AuthorizationServerProvider.#ctor(System.String)">
            <summary>
            Creates new instance of the <see cref="T:Weavy.Web.Owin.OAuth.AuthorizationServerProvider"/>.
            </summary>
            <param name="publicClientId"></param>
        </member>
        <member name="M:Weavy.Web.Owin.OAuth.AuthorizationServerProvider.GrantResourceOwnerCredentials(Microsoft.Owin.Security.OAuth.OAuthGrantResourceOwnerCredentialsContext)">
            <summary>
            Called when a request to the Token endpoint arrives with a "grant_type" of "password". 
            This occurs when the user has provided name and password credentials directly into the client application's user interface, 
            and the client application is using those to acquire an "access_token" and optional "refresh_token". See also http://tools.ietf.org/html/rfc6749#section-4.3.2.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OAuth.AuthorizationServerProvider.ValidateClientAuthentication(Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext)">
            <summary>
            Called to validate that the origin of the request is a registered "client_id", and that the correct credentials for that client are present on the request. 
            
            If context.Validated is not called the request will not proceed further.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OAuth.AuthorizationServerProvider.ValidateClientRedirectUri(Microsoft.Owin.Security.OAuth.OAuthValidateClientRedirectUriContext)">
            <summary>
            Called to validate that the context.ClientId is a registered "client_id", and that the context.RedirectUri a "redirect_uri" registered for that client. 
            This only occurs when processing the Authorize endpoint. 
            
            The application MUST implement this call, and it MUST validate both of those factors before calling context.Validated. 
            If the context.Validated method is called with a given redirectUri parameter, then IsValidated will only become true if the incoming redirect URI matches the given redirect URI. 
            
            If context.Validated is not called the request will not proceed further.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.Turbolinks.TurbolinksExtensions">
            <summary>
            Extension methods for using the <see cref="T:Weavy.Web.Owin.Turbolinks.TurbolinksMiddleware"/>,
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.Turbolinks.TurbolinksExtensions.UseTurbolinks(Owin.IAppBuilder)">
            <summary>
            Inserts the <see cref="T:Weavy.Web.Owin.Turbolinks.TurbolinksMiddleware"/> into the OWIN pipeline.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.Turbolinks.TurbolinksMiddleware">
            <summary>
            Set Turbolinks response headers.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.Turbolinks.TurbolinksMiddleware.#ctor(Microsoft.Owin.OwinMiddleware)">
            <summary>
            Initialzes a new instance of the <see cref="T:Weavy.Web.Owin.Turbolinks.TurbolinksMiddleware"/> class.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Weavy.Web.Owin.Turbolinks.TurbolinksMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            Set Turbolinks response headers.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Owin.WeavyMiddleware">
            <summary>
            Handles startup configuration, authentication, logging etc.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.#ctor(Microsoft.Owin.OwinMiddleware)">
            <summary>
            Initialzes a new instance of the <see cref="T:Weavy.Web.Owin.WeavyMiddleware"/> class.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            Performs various tasks on each request.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.EnforceHttps(Microsoft.Owin.IOwinContext)">
            <summary>
            Check if we should enforce https.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.SetContext(Microsoft.Owin.IOwinContext)">
            <summary>
            Populates the <see cref="T:Weavy.Core.WeavyContext"/>.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.CheckStatus(Microsoft.Owin.IOwinContext)">
            <summary>
            Check system status.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.SetUser(Microsoft.Owin.IOwinContext)">
            <summary>
            Set the user for the request.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.CheckLicense(Microsoft.Owin.IOwinContext)">
            <summary>
            Check that license has not expired.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.SetCulture(Microsoft.Owin.IOwinContext)">
            <summary>
            Set the ui culture and culture for the request.
            </summary>
        </member>
        <member name="T:Weavy.Web.Owin.WeavyExtensions">
            <summary>
            Various Owin extension methods.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.UseWeavy(Owin.IAppBuilder)">
            <summary>
            Insert the <see cref="T:Weavy.Web.Owin.WeavyMiddleware"/> into the Owin pipeline.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsAjax(Microsoft.Owin.IOwinRequest)">
            <summary>
             Checks if the request was requested with XMLHttpRequest.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsApi(Microsoft.Owin.IOwinRequest,System.String)">
            <summary>
            Checks if the request is for the api.
            </summary>
            <param name="request"></param>
            <param name="path">Specific path to check for, e.g. "status".</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsManage(Microsoft.Owin.IOwinRequest,System.String)">
            <summary>
            Checks if the request is for the manage area.
            </summary>
            <param name="request"></param>
            <param name="path">Specific path to check for, e.g. "license".</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsBrowser(Microsoft.Owin.IOwinRequest)">
            <summary>
             Checks if the request was made from a web browser, i.e. has the string "Mozilla" in the user agent.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsError(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for an error page.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsSignalR(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for SignalR.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsLocal(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is local.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsValidWhenLicenseExpired(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is valid when license has expired.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsValidWhenLicenseInvalid(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is valid when license is invalid.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsValidDuringSetup(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is valid during setup.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsPrivate(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for managed code and needs authentication.
            </summary>
            <param name="request"></param>
            <returns><c>true</c> for files served by managed code, otherwise <c>true</c></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsPublic(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for a file served by managed code that does not need authentication.
            </summary>
            <param name="request"></param>
            <returns><c>true</c> for files served by managed code, otherwise <c>false</c></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsRegisterWindows(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for the register-windows action.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsSetup(Microsoft.Owin.IOwinRequest,System.String)">
            <summary>
            Checks if the request is for the setup wizard.
            </summary>
            <param name="request"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsTurbolinks(Microsoft.Owin.IOwinRequest)">
            <summary>
             Checks if the request was requested with Turbolinks.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsWebDAV(Microsoft.Owin.IOwinRequest)">
            <summary>
             Checks if the request is a WebDAV request.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.IsWebSocketsEnabled(Microsoft.Owin.IOwinContext)">
            <summary>
             Checks if web sockets are enabled on the server.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyExtensions.GetCulture(Microsoft.Owin.IOwinRequest,System.Boolean)">
            <summary>
            Helper method for returning the current user's preferred culture.
            </summary>
            <param name="request">The owin request.</param>
            <param name="ui"><c>true</c> to get ui culture, otherwise <c>false</c></param>
            <returns>A <see cref="T:System.Globalization.CultureInfo"/> object use for the current rerquest-</returns>
        </member>
        <member name="T:Weavy.Web.Plugins.PresenceDaemon">
            <summary>
            A daemon that keeps track of connections that the <see cref="T:Weavy.Web.SignalR.RealTimeHub"/> has seen. 
            It uses a time based system to verify if connections are *actually* still online.
            </summary>
        </member>
        <member name="M:Weavy.Web.Plugins.PresenceDaemon.Run(System.Threading.CancellationToken,System.String[])">
            <summary>
            Update alive connections and delete zombies.
            </summary>
        </member>
        <member name="T:Weavy.Web.Plugins.RealTimeHook">
            <summary>
            A daemon that keeps track of connections that the <see cref="T:Weavy.Web.SignalR.RealTimeHub"/> has seen. 
            It uses a time based system to verify if connections are *actually* still online.
            </summary>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterInsertConnection)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterUpdateConnection)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterDeleteConnection)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterInsertNotification)">
            <summary>
            Push notification to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterUpdateNotification)">
            <summary>
            Push read notification to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterReadAllNotifications)">
            <summary>
            Push read notification to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterTrashSpace)">
            <summary>
            Push trahsed space to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterInsertComment)">
            <summary>
            Push comment to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterInsertPost)">
            <summary>
            Push post to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterLikePost)">
            <summary>
            Push liked post to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterUnlikePost)">
            <summary>
            Push unliked post to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterLikeComment)">
            <summary>
            Push liked comment to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterUnlikeComment)">
            <summary>
            Push unliked post to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterInsertMessage)">
            <summary>
            Push message to people in conversation.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterInsertTask)">
            <summary>
            Push inserted task to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterUpdateTask)">
            <summary>
            Push updated task to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterTrashTask)">
            <summary>
            Push trashed task to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterInsertEvent)">
            <summary>
            Push inserted event to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterUpdateEvent)">
            <summary>
            Push updated event to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterUpdateEventStatus)">
            <summary>
            Push updated event status to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterAddAttendee)">
            <summary>
            Push added event attendee to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterRemoveAttendee)">
            <summary>
            Push removed event attendee to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterTrashEvent)">
            <summary>
            Push trashed event to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterDeliverMessage)">
            <summary>
            Let sender know that their message was delivered.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterReadConversation)">
            <summary>
            Push read conversation to people in conversation.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterConversationStatusChanged)">
            <summary>
            Push read conversation to people in conversation.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterStarEntity)">
            <summary>
            Push newly starred entities back to the user that starred.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterUnstarEntity)">
            <summary>
            Push newly unstarred enitities back to the user that unstarred.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterAddBubble)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleAsync(Weavy.Core.Events.AfterRemoveBubble)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.SendPresence(Weavy.Core.Models.Connection)">
            <summary>
            Helper method for queuing presence updates.
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.TimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Periodically check for queued presence updates.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleBadgeUpdate(Microsoft.AspNet.SignalR.Hubs.IClientProxy,System.Int32)">
            <summary>
            Send badge update to specified clients
            </summary>
            <param name="clients"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.HandleBadgeUpdate(System.Int32)">
            <summary>
            Send badge update to specified user
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Plugins.SettingsHook">
            <summary>
            A hook that runs when settings are changed.
            </summary>
        </member>
        <member name="M:Weavy.Web.Plugins.SettingsHook.HandleAsync(Weavy.Core.Events.AfterUpdatePlugin)">
            <summary>
            Triggered after a plugin is updated.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Weavy.Web.Results.ChallengeResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.Results.ChallengeResult.XsrfKey">
            <summary>
            Used for XSRF protection when adding external logins 
            </summary>
        </member>
        <member name="P:Weavy.Web.Results.ChallengeResult.LoginProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Results.ChallengeResult.RedirectUri">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Results.ChallengeResult.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Results.ChallengeResult.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <param name="redirectUri"></param>
        </member>
        <member name="M:Weavy.Web.Results.ChallengeResult.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <param name="redirectUri"></param>
            <param name="userId"></param>
        </member>
        <member name="M:Weavy.Web.Results.ChallengeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Results.JsonNetResult">
            <summary>
            Represents a class that is used to send JSON-formatted content to the response. 
            </summary>
            <remarks>Uses JSON.NET instead of the standard JavaScriptSerializer.</remarks>
        </member>
        <member name="M:Weavy.Web.Results.JsonNetResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Results.TransferResult">
            <summary>
            Transfers execution to the supplied url.
            </summary>
        </member>
        <member name="P:Weavy.Web.Results.TransferResult.Url">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Results.TransferResult.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Results.TransferResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Results.TransferToRouteResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Results.TransferToRouteResult.RouteName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Results.TransferToRouteResult.RouteValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Results.TransferToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
            <summary>
            
            </summary>
            <param name="routeValues"></param>
        </member>
        <member name="M:Weavy.Web.Results.TransferToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            
            </summary>
            <param name="routeName"></param>
            <param name="routeValues"></param>
        </member>
        <member name="M:Weavy.Web.Results.TransferToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Routing.AreaConstraint">
            <summary>
            Inline route constraint for matching a registered area.
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.AreaConstraint.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Routing.AreaConstraint.Areas">
            <summary>
            Geta the list of registered areas in the application.
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.AreaConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Routing.IntsConstraint">
            <summary>
            Inline route constraint for two or more comma separated ints, e.g. 1,2,3.
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.IntsConstraint.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.IntsConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Routing.OptionsConstraint">
            <summary>
            Inline route constraint for file resizer options. Valid chars are [a-z0-9,]. Example "crop,both,q90".
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.OptionsConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Routing.OptionsConstraint"/> class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.OptionsConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Routing.ValuesConstraint">
            <summary>
            Inline route constraint for a list if valid values.
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.ValuesConstraint.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Weavy.Web.Routing.ValuesConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.SignalR.RealTimeHub">
            <summary>
            The Real Time Hub is a WebSocket-based API that allows you to receive events from Weavy in real time. 
            See http://www.asp.net/signalr/overview/guide-to-the-api/handling-connection-lifetime-events for details on SignalR connection lifetime events.
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.CLIENT_CALLBACK">
            <summary>
            Generic callback event used in realtime.js to dispatch the actual event to the registered handlers.
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_BADGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_POST">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_TRASHED_SPACE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_COMMENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_LIKE_POST">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_UNLIKE_POST">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_LIKE_COMMENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_UNLIKE_COMMENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_STAR_ENTITY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_UNSTAR_ENTITY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_MESSAGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_TASK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_TASK_UPDATED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_TASK_TRASHED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_BUBBLE_ADDED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_BUBBLE_REMOVED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_CONVERSATION_READ">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_CONVERSATION_STATUS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_NOTIFICATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_NOTIFICATION_UPDATED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_NOTIFICATION_READALL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_EVENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_EVENT_UPDATED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_EVENT_TRASHED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_EVENT_STATUS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_ADD_ATTENDEE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_REMOVE_ATTENDEE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_PRESENCE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_TYPING">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.RealTimeHub.EVENT_MESSAGE_DELIVERED">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.SignalR.RealTimeHub.OnConnected">
            <summary>
            Record the association between the current user and connection id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.SignalR.RealTimeHub.OnReconnected">
            <summary>
            Re-associate user and connection id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.SignalR.RealTimeHub.OnDisconnected(System.Boolean)">
            <summary>
            Delete the association between the current connection id and user.
            </summary>
            <param name="stopCalled"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.SignalR.RealTimeHub.SetActive">
            <summary>
            Called by clients to mark connection as active.
            </summary>
        </member>
        <member name="M:Weavy.Web.SignalR.RealTimeHub.Typing(System.Int32)">
            <summary>
             Called by clients to indicate that the user is typing in a conversation.
            </summary>
            <param name="id">Id of conversation</param>
        </member>
        <member name="T:Weavy.Web.SignalR.VideoHub">
            <summary>
            Hub for video calling.
            </summary>
        </member>
        <member name="F:Weavy.Web.SignalR.VideoHub._serializerSettings">
            <summary>
            Gets the default json serializer settings. Output is in snake_case and pretty printed (indented).
            </summary>
        </member>
        <member name="M:Weavy.Web.SignalR.VideoHub.Call(System.Int32)">
            <summary>
            Send a call request to the specified user.
            </summary>
            <param name="userId">Id of user to call.</param>
        </member>
        <member name="M:Weavy.Web.SignalR.VideoHub.Accept(System.String)">
            <summary>
            Accept a call request from the specified connection.
            </summary>
            <param name="connectionId">Id of the caller's connection</param>
        </member>
        <member name="M:Weavy.Web.SignalR.VideoHub.Decline(System.String)">
            <summary>
            Decline a call request from the specified connection.
            </summary>
            <param name="connectionId">Id of the caller's connection</param>
        </member>
        <member name="M:Weavy.Web.SignalR.VideoHub.Hangup(System.Int32)">
            <summary>
            Hangup ongoing call.
            </summary>
            <param name="userId">User id of caller/callee.</param>
        </member>
        <member name="M:Weavy.Web.SignalR.VideoHub.Send(System.String,System.String)">
            <summary>
            Used for WebRTC signaling.
            </summary>
            <param name="connectionId">Id of the connection that should receive the signal.</param>
            <param name="signal">The signal to send.</param>
        </member>
        <member name="T:Weavy.Web.SignalR.WidgetHub">
            <summary>
            </summary>
        </member>
        <member name="M:Weavy.Web.SignalR.WidgetHub.Load(Weavy.Web.SignalR.WidgetHub.WidgetSettings)">
            <summary>
            
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:Weavy.Web.SignalR.WidgetHub.GetConversation(System.Int32)">
            <summary>
            Gets a conversation by id from the datastore.
            </summary>
            <param name="id">Id of the conversation to get.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.SignalR.WidgetHub.GetErrorUrl(Weavy.Core.Models.SystemStatus)">
            <summary>
            Gets the page to display when system status is not OK.
            </summary>
            <param name="status">The current system status.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.SignalR.WidgetHub.Open(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isOpen"></param>
        </member>
        <member name="T:Weavy.Web.SignalR.WidgetHub.WidgetSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.Ids">
            <summary>
            
            </summary>            
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.Origin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.Mode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.Folder">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.ThemeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.ConversationsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.NotificationsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.ShouldUpdate">
            <summary>
            Gets or sets a value indicating if the client should update its resources due to a version mismatch between client and server. 
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.PersonalAvatar">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.PersonalTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.PersonalUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.MessengerTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.MessengerUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.AddUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.IsOpen">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.Conversations">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.WidgetCss">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.SignalR.WidgetHub.WidgetSettings.Bubbles">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.SignalR.WidgetHub.GetUrlHelper(System.String)">
            <summary>
            Get a dummy url helper for generating urls.
            </summary>
            <param name="baseUrl"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Tools.RestartTool">
            <summary>
            /// A function that terminates the application. The application restarts the next time a request is received.
            </summary>
        </member>
        <member name="M:Weavy.Web.Tools.RestartTool.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Tools.RestartTool"/> class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Tools.RestartTool.Run(System.Threading.CancellationToken,System.String[])">
            <summary>
            Terminates the application by unloading the add domain.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Views.ViewPage`1">
            <summary>
            Base class for strongly typed views.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Title">
            <summary>
            Gets or sets the page title.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Back">
            <summary>
            Gets or sets the url for navigating back.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Space">
            <summary>
            Gets the current <see cref="P:Weavy.Web.Views.ViewPage`1.Space"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Folder">
            <summary>
            Gets the current <see cref="T:Weavy.Core.Models.App"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Item">
            <summary>
            Gets the current <see cref="P:Weavy.Web.Views.ViewPage`1.Item"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.File">
            <summary>
            Gets the current <see cref="P:Weavy.Web.Views.ViewPage`1.File"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.User">
            <summary>
            Gets the current <see cref="P:Weavy.Web.Views.ViewPage`1.User"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Theme">
            <summary>
              Gets the current theme settings.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Badge">
            <summary>
              Gets the current badge values.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Spaces">
            <summary>
              Gets joined and active spaces.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Projects">
            <summary>
              Gets joined and active projects.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Teams">
            <summary>
              Gets joined and active teams.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.BodyAttributes">
            <summary>
            Gets some data-attributes to render in the &lt;body&gt; element. These attributes are used by various javascript functions.
            </summary>
        </member>
        <member name="M:Weavy.Web.Views.ViewPage`1.BodyClasses(System.String[])">
            <summary>
            
            </summary>
            <param name="extra"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Views.ViewPage`1.HtmlClasses">
            <summary>
            Gets some css classes to render in the &lt;html&gt; element.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.AreaName">
            <summary>
            Returns the name of the current Area.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.ControllerName">
            <summary>
            Returns the name of the currently executing Controller
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.ActionName">
            <summary>
            Returns the name of the currently executing Action
            </summary>
        </member>
        <member name="M:Weavy.Web.Views.ViewPage`1.GetViewName(System.String,System.Nullable{System.Guid})">
            <summary>
            Returns the name of a view for rendering an extension with the specified guid.
            </summary>
            <param name="view"></param>
            <param name="guid"></param>
            <returns>Name of view.</returns>
        </member>
        <member name="M:Weavy.Web.Views.ViewPage`1.GetPartialViewName(System.String,System.Nullable{System.Guid})">
            <summary>
            Returns the name of a partial view for rendering an extension with the specified guid.
            </summary>
            <param name="view"></param>
            <param name="guid"></param>
            <returns>Name of view.</returns>
        </member>
        <member name="M:Weavy.Web.Views.ViewPage`1.GetLogLevel">
            <summary>
            Retuerns the current log level.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.WeavyRequestContext">
            <summary>
              Encapsulates request specific data used by Weavy.
            </summary>
        </member>
        <member name="M:Weavy.Web.WeavyRequestContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.WeavyRequestContext"/> class. Prevents a default instance of the <see cref="T:Weavy.Web.WeavyRequestContext"/> class from being created.
            </summary>
        </member>
        <member name="M:Weavy.Web.WeavyRequestContext.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.WeavyRequestContext"/> class.
            </summary>
            <param name="ctx"></param>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.Current">
            <summary>
            Gets the <see cref="T:Weavy.Web.WeavyRequestContext"/> object for the current request.
            </summary>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.Browser">
            <summary>
            Gets info about the browser associated with the current request.
            </summary>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.Space">
            <summary>
            Gets or sets the <see cref="P:Weavy.Web.WeavyRequestContext.Space"/> associated with the current request.
            </summary>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.App">
            <summary>
            Gets or sets the <see cref="P:Weavy.Web.WeavyRequestContext.App"/> associated with the current request.
            </summary>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.Item">
            <summary>
            Gets or sets the <see cref="P:Weavy.Web.WeavyRequestContext.Item"/> associated with the current request.
            </summary>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.File">
            <summary>
            Gets or sets the <see cref="P:Weavy.Web.WeavyRequestContext.File"/> associated with the current request.
            </summary>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.Badge">
            <summary>
            Get number of unread notifications.
            </summary>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.Spaces">
            <summary>
            Get joined and active spaces.
            </summary>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.Projects">
            <summary>
            Gets joined and active projects.
            </summary>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.Teams">
            <summary>
            Gets joined and active teams
            </summary>
        </member>
        <member name="P:Weavy.Web.WeavyRequestContext.Theme">
            <summary>
              Gets the current theme settings.
            </summary>
        </member>
        <member name="M:Weavy.Web.WeavyRequestContext.Copy(System.Boolean)">
            <summary>
            Creates a copy of the current context.
            </summary>
            <param name="user"><c>true</c> to also copy the User, otherwise <c>false</c>.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavContext">
            <summary>
            Implementation of <see cref="T:ITHit.WebDAV.Server.DavContextBaseAsync"/>
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavContext.#ctor(System.Web.HttpContext)">
            <summary>
            Initializes a new instance of the DavContext with the specified <see cref="T:System.Web.HttpContext"/>.
            </summary>
            <param name="httpContext">Instance of <see cref="T:System.Web.HttpContext"/>.</param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavContext.GetHierarchyItemAsync(System.String)">
            <summary>
            Implementation of this abstract method is used by WebDAV engine to find hierarchy item objects by path.
            </summary>
            <param name="path">
            Path of the hierarchy item object.
            It is always the full path from the root of the WebDAV repository.
            </param>
            <returns>
            Hierarchy item object referenced by the specified path or <c>null</c> if hierarchy item not found.
            </returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavFile">
            <summary>
            Represents a file in WebDAV repository.
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.#ctor(Weavy.Web.WebDAV.DavContext,Weavy.Core.Models.File,System.String)">
            <summary>
            Initializes a new instance of the DavFile class.
            </summary>
            <param name="context">Instance of <see cref="T:Weavy.Web.WebDAV.DavContext"/>.</param>
            <param name="file"></param>
            <param name="path"></param>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavFile.ContentType">
            <summary>
            Gets the media type of the file.
            </summary>
            <remarks>
            <para>
            The mime-type provided by this property is returned in a Content-Type header with GET request.
            </para>
            <para>
            When deciding which action to perform when downloading a file some WebDAV clients and browsers (such as
            Internet Explorer) rely on file extension, while others (such as Firefox) rely on Content-Type header
            returned by server. For identical behavior in all browsers and WebDAV clients your server must return
            a correct mime-type with a requested file.
            </para>
            </remarks>
            <value>The MIME type of the file.</value>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavFile.ContentLength">
            <summary>
            Gets the size of the file content in bytes.
            </summary>
            <value>Length of the file content in bytes.</value>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavFile.Etag">
            <summary>
            Gets entity tag - string that identifies current state of resource's content.
            More information about etags is available here: http://en.wikipedia.org/wiki/HTTP_ETag
            You can return here either cheksum or hash or counter which increases with every
            modification.
            </summary>
            <remarks>
            This property shall return different value if content changes.
            Return <c>null</c> to indicate that server doesn't support etags.
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.CopyToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,System.Boolean,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Copies this file to another folder.
            </summary>
            <param name="destFolder">Destination folder.</param>
            <param name="destName">New file name in destination folder.</param>
            <param name="deep">Is not used.</param>
            <param name="multistatus">Container for errors with items other than this file.</param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.DeleteAsync(ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Deletes this file.
            </summary>
            <param name="multistatus"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.MoveToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            
            </summary>
            <param name="destFolder"></param>
            <param name="destName"></param>
            <param name="multistatus"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.ReadAsync(System.IO.Stream,System.Int64,System.Int64)">
            <summary>
            Writes the content of the file to the specified stream.
            </summary>
            <param name="output">Output stream.</param>
            <param name="startIndex">The zero-bazed byte offset in file content at which to begin copying bytes to the
            output stream.</param>
            <param name="count">The number of bytes to be written to the output stream.</param>
            <remarks>
            <para>
            By default ASP.NET buffers content on server side before sending output. You must turn off buffering to
            eliminate keeping entire file content in memory before sending:
            <code>
            HttpContext.Current.Response.BufferOutput = false;
            </code>
            </para>
            <para>
            Client application can request only a part of a file specifying <b>Range</b> header.
            Download managers may use this header to download single file using several threads at a time.
            </para>
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.WriteAsync(System.IO.Stream,System.String,System.Int64,System.Int64)">
            <summary>
            Saves the content of the file from the specified stream to the WebDAV repository.
            </summary>
            <param name="content">Stream to read the content of the file from.</param>
            <param name="contentType">Indicates the media type of the file.</param>
            <param name="startIndex">Start offset to which content shall be saved.</param>
            <param name="totalLength">Entire length of the file. Is is not less then length of <paramref name="content"/> stream.</param>
            <returns>Boolean value indicating whether entire stream was written. This value is used by engine to take decision whether autocheckin shall be performed.</returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavFolder">
            <summary>
            Represents a folder in a WebDAV repository.
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.#ctor(Weavy.Web.WebDAV.DavContext,Weavy.Core.Models.Space,System.String)">
            <summary>
            Initializes a new instance of the DavFolder class.
            </summary>
            <param name="context">Instance of <see cref="T:Weavy.Web.WebDAV.DavContext"/> class.</param>
            <param name="space"></param>
            <param name="path"></param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.#ctor(Weavy.Web.WebDAV.DavContext,Weavy.Core.Models.App,System.String)">
            <summary>
            Initializes a new instance of the DavFolder class.
            </summary>
            <param name="context">Instance of <see cref="T:Weavy.Web.WebDAV.DavContext"/> class.</param>
            <param name="folder"></param>
            <param name="path"></param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.GetChildrenAsync(System.Collections.Generic.IList{ITHit.WebDAV.Server.PropertyName})">
            <summary>
            Gets direct children of this folder.
            </summary>
            <value>
            Array of <see cref="T:ITHit.WebDAV.Server.IHierarchyItemAsync"/> objects. Each item is a file or folder item.
            </value>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.CreateFileAsync(System.String)">
            <summary>
            Creates new WebDAV file with the specified name in this folder.
            </summary>
            <param name="name">Name of the file to create.</param>
            <remarks>You must create a file in your repository during this call. After calling this method Engine calls <see cref="M:ITHit.WebDAV.Server.IContentAsync.WriteAsync(System.IO.Stream,System.String,System.Int64,System.Int64)"/>.</remarks>
            <returns>Instance of <see cref="T:ITHit.WebDAV.Server.Class1.IFileAsync"/> referring to newly created file.</returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.CreateFolderAsync(System.String)">
            <summary>
            Creates new WebDAV folder with the specified name in this folder.
            </summary>
            <param name="name">Name of the folder to create.</param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.DeleteAsync(ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            
            </summary>
            <param name="multistatus"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.MoveToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            
            </summary>
            <param name="destFolder"></param>
            <param name="destName"></param>
            <param name="multistatus"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.CopyToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,System.Boolean,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            
            </summary>
            <param name="destFolder"></param>
            <param name="destName"></param>
            <param name="deep"></param>
            <param name="multistatus"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavGetHandler">
            <summary>
            This handler processes GET and HEAD requests to folders returning custom HTML page.
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavGetHandler.OriginalHandler">
            <summary>
            Handler for GET and HEAD request registered with the engine before registering this one.
            We call this default handler to handle GET and HEAD for files, because this handler
            only handles GET and HEAD for folders.
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavGetHandler.EnableOutputBuffering">
            <summary>
            Gets a value indicating whether output shall be buffered to calculate content length.
            Don't buffer output to calculate content length.
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavGetHandler.EnableOutputDebugLogging">
            <summary>
            Gets a value indicating whether engine shall log response data (even if debug logging is on).
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavGetHandler.EnableInputDebugLogging">
            <summary>
            Gets a value indicating whether the engine shall log request data.
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavGetHandler.ProcessRequestAsync(ITHit.WebDAV.Server.DavContextBaseAsync,ITHit.WebDAV.Server.IHierarchyItemAsync)">
            <summary>
            Handles GET and HEAD request.
            </summary>
            <param name="context">Instace of <see cref="T:ITHit.WebDAV.Server.DavContextBaseAsync"/>.</param>
            <param name="item">Instance of <see cref="T:ITHit.WebDAV.Server.IHierarchyItemAsync"/> which was returned by
            <see cref="M:ITHit.WebDAV.Server.DavContextBaseAsync.GetHierarchyItemAsync(System.String)"/> for this request.</param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavGetHandler.AppliesTo(ITHit.WebDAV.Server.IHierarchyItemAsync)">
            <summary>
            This handler shall only be invoked for <see cref="T:ITHit.WebDAV.Server.Class1.IFolderAsync"/> items or if original handler (which
            this handler substitutes) shall be called for the item.
            </summary>
            <param name="item">Instance of <see cref="T:ITHit.WebDAV.Server.IHierarchyItemAsync"/> which was returned by
            <see cref="M:ITHit.WebDAV.Server.DavContextBaseAsync.GetHierarchyItemAsync(System.String)"/> for this request.</param>
            <returns>Returns <c>true</c> if this handler can handler this item.</returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavHandler">
            <summary>
            This handler processes WebDAV requests.
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavHandler.GetLicense">
            <summary>
            Get the embedded license.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the
            <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <returns>
            true if the <see cref="T:System.Web.IHttpHandler"/> instance is reusable; otherwise, false.
            </returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavHandler.ProcessRequestAsync(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the
            intrinsic server objects (for example, Request, Response, Session, and Server) used to service
            HTTP requests. 
            </param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavHandler.GetOrInitializeEngine(System.Web.HttpContext)">
            <summary>
            Initializes or gets engine singleton.
            </summary>
            <param name="context">Instance of <see cref="T:System.Web.HttpContext"/>.</param>
            <returns>Instance of <see cref="T:ITHit.WebDAV.Server.DavEngineAsync"/>.</returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavHandler.InitializeEngine(System.Web.HttpContext)">
            <summary>
            Initializes engine.
            </summary>
            <param name="context">Instance of <see cref="T:System.Web.HttpContext"/>.</param>
            <returns>Initialized <see cref="T:ITHit.WebDAV.Server.DavEngineAsync"/>.</returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavItem">
            <summary>
            Abstract base class for WebDAV items.
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.#ctor(Weavy.Web.WebDAV.DavContext,Weavy.Core.Models.IEntity,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="entity"></param>
            <param name="path"></param>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Context">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Entity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Name">
            <summary>
            Gets the name of the item in repository.
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Created">
            <summary>
            Gets the creation date of the item in repository expressed as the coordinated universal time (UTC).
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Modified">
            <summary>
            Gets the last modification date of the item in repository expressed as the coordinated universal time (UTC).
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Path">
            <summary>
            Unique item path in the repository relative to storage root.
            </summary>
            <remarks>
            <para>
            The URL returned by this property is relative to storage root.
            If your server root is located at http://example.webdavsystem.com:8080/myserver/ and the item URL is
            http://example.webdavsystem.com:8080/myserver/myfolder/myitem.doc this property implementation must
            return myfolder/myitem.doc.
            </para>
            <para>
            Every part of the path (between '/' characters) shall be encoded, for example using UrlHelper.EncodeUrlPart(string) />.
            </para>
            <para>Examples:
            <list type="bullet">
            <item><description>File: myfolder/my%20doc.docx</description></item>
            <item><description>Folder: myfolder/folder/</description></item>
            <item><description>History item: myfolder/mydoc.docx?history</description></item>
            <item><description>Version: myfolder/mydoc.docx?version=5</description></item>
            </list>
            </para>
            </remarks>
            <value><c>String</c> representing relative item path in the repository.</value>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.DeleteAsync(ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Deletes this item.
            </summary>
            <param name="multistatus">If some items fail to delete but operation in whole shall be continued, add information about the error into <paramref name="multistatus"/> using <see cref="M:ITHit.WebDAV.Server.MultistatusException.AddInnerException(System.String,ITHit.WebDAV.Server.DavException)"/>.
            </param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.GetPropertiesAsync(System.Collections.Generic.IList{ITHit.WebDAV.Server.PropertyName},System.Boolean)">
            <summary>
            Gets values of all properties or selected properties for this item.
            </summary>
            <param name="props">
            Array of property names which values are requested. If a property does not exist for this hierarchy item then the property value shall not be returned.</param>
            <param name="allprop">
            If it is <c>true</c> it means that besides properties listed in <paramref name="props"/> you need to return all properties you think may be useful to client.
            </param>
            <returns>Enumerable with property values.</returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.GetPropertyNamesAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.UpdatePropertiesAsync(System.Collections.Generic.IList{ITHit.WebDAV.Server.PropertyValue},System.Collections.Generic.IList{ITHit.WebDAV.Server.PropertyName},ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Modifies and removes properties for this item.
            </summary>
            <param name="setProps">Array of properties to be set.</param>
            <param name="delProps">Property names to be removed. Properties that don't exist shall be skipped.</param>
            <param name="multistatus">The standard requires this operation to be transactional.</param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.MoveToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Moves this item to the destination folder under a new name.
            </summary>
            <param name="destFolder">Destination folder.</param>
            <param name="destName">Name of the destination item.</param>
            <param name="multistatus">If some items fail to copy but operation in whole shall be continued, add
            information about the error into <paramref name="multistatus"/> using 
            <see cref="M:ITHit.WebDAV.Server.MultistatusException.AddInnerException(System.String,ITHit.WebDAV.Server.DavException)"/>.
            </param>
            <remarks>
            <papa>
            If the item is locked the server must not move any locks with the item. However, items must be added to an
            existing lock at the destination.
            </papa>
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.CopyToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,System.Boolean,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Creates a copy of this item with a new name in the destination folder.
            </summary>
            <param name="destFolder">Destination folder.</param>
            <param name="destName">Name of the destination item.</param>
            <param name="deep">Indicates whether to copy entire subtree.</param>
            <param name="multistatus">If some items fail to copy but operation in whole shall be continued, add
            information about the error into <paramref name="multistatus"/> using 
            <see cref="M:ITHit.WebDAV.Server.MultistatusException.AddInnerException(System.String,ITHit.WebDAV.Server.DavException)"/>.
            </param>
            <remarks>
            <para>
            If error occurred while copying file located in a subtree, the server 
            should try to continue copy operation and copy all other items. In this case 
            you must add that error <paramref name="multistatus"/> container.
            </para>
            <para>
            A CopyTo method invocation must not copy any locks active on the source item.
            However, if this method copies the item into a folder that has a deep lock,
            then the destination item must be added to the lock.
            </para>
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.GetActiveLocksAsync">
            <summary>
            Gets the array of all locks for this item.
            </summary>
            <remarks>
            <para>
            This property must return all locks for the item including deep locks on any of the parent folders.
            All fields of each <see cref="T:ITHit.WebDAV.Server.Class2.LockInfo"/> structure in the array must be set.
            </para>
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.LockAsync(ITHit.WebDAV.Server.Class2.LockLevel,System.Boolean,System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Locks this item.
            </summary>
            <param name="level">Whether lock is share or exclusive</param>
            <param name="isDeep">Whether lock is deep.</param>
            <param name="requestedTimeOut">Lock timeout which was requested by client.
            Server may ignore this parameter and set any timeout.</param>
            <param name="owner">Owner of the lock as specified by client.</param> 
            <returns>
            Instance of <see cref="T:ITHit.WebDAV.Server.Class2.LockResult"/> with information about the lock.
            </returns>
            <remarks>
            WebDAV engine passes <see cref="T:ITHit.WebDAV.Server.Class2.LockInfo"/> structure to this method by reference.
            All fields of the structure are provided by WebDAV client except <see cref="P:ITHit.WebDAV.Server.Class2.LockInfo.Token"/> field.
            In your <c>Lock</c> implementation you must create lock token and set <see cref="P:ITHit.WebDAV.Server.Class2.LockInfo.Token"/> member.
            You must also associate generated token with the hierarchy item in the repository during this call.
            The token is sent to the WebDAV client.
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.RefreshLockAsync(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Updates lock timeout information on this item.
            </summary>
            <param name="token">Lock token.</param>
            <param name="requestedTimeOut">Lock timeout which was requested by client. Server may ignore this parameter and set any timeout.</param>
            <returns>
            Instance of <see cref="T:ITHit.WebDAV.Server.Class2.LockResult"/> with information about the lock.
            </returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.UnlockAsync(System.String)">
            <summary>
            Removes lock with the specified token from this item.
            </summary>
            <param name="token">Lock with this token should be removed from the item.</param>
            <remarks>
            <para>
            If this lock included more than one hierarchy item, the lock is removed from all items included in the lock.
            </para>
            </remarks>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavLogger">
            <summary>
            Logger singleton.
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavLogger.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavLogger.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavLogger.IsDebugEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavLogger.LogFlags">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavLogger.LogDebug(System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavLogger.LogError(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message and exception at the Error level.
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavPage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavPage.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavPage.Page_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavPage.GetPageDataAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavRoutingModule">
            <summary>
            Forbids MVC routing of WebDAV requests that should be processed by WebDAV handler.
            </summary>
            <remarks>
            This module is needed for ASP.NET MVC application to forbid routing
            of WebDAV requests that should be processed by <see cref="T:Weavy.Web.WebDAV.DavHandler"/>.
            It reads DavLocations section and inserts ignore rules for urls that correspond
            to these locations.
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavRoutingModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
            <summary>
            Updates the ASP.NET MVC routing table to avoid processing of WebDAV requests (this should be done only one time during web application start event)
            </summary>
            <param name="application"></param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavRoutingModule.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavRoutingModule.IgnoreRoute">
            <summary>
            Represents route to be ignored. 
            </summary>
            <remarks>
            Required to insert ignore route at the beginning of routing table. We can not use <see cref="M:System.Web.Routing.RouteCollection.Ignore(System.String)"/> as it adds to the and of the routing table.
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavRoutingModule.IgnoreRoute.#ctor(System.String)">
            <summary>
            Creates ignore route.
            </summary>
            <param name="url">Route to be ignored.</param>
        </member>
    </members>
</doc>
