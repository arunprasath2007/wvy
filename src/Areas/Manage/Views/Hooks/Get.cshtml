@model IHook
@{
    Title = "Tools";
    BackUrl = Url.Action<HooksController>(c => c.Index());
}


<div class="container my-3">
    @using (Html.BeginForm(nameof(HooksController.Update), null, FormMethod.Post, new { autocomplete = "off", data_turboform = "" })) {
        @Html.HttpMethodOverride(HttpVerbs.Put)
        <div class="form-group">
            <label class="control-label">Id</label>
            <p class="form-control-static">@Model.Id</p>
        </div>
        <div class="form-group">
            <label class="control-label">Type</label>
            <p class="form-control-static">@Model.FullName</p>
        </div>
        <div class="form-group">
            <label class="control-label">Desciption</label>
            <p class="form-control-static">@Model.Description</p>
        </div>
        <div class="form-group">
            <label class="control-label">Status</label>
            <p class="form-control-static">
                @if (!Model.IsLoaded()) {
                    <span class="badge badge-danger">missing</span>
                } else if (!Model.IsEnabled) {
                    <span class="badge badge-warning">disabled</span>
                } else {
                    <span class="badge badge-success">enabled</span>
                }
            </p>
        </div>

        @Html.EditorsForModel()
        <div class="form-buttons">
            <button type="submit" name="button" value="@nameof(HooksController.Update)" class="btn btn-primary btn-load waves-effect">Save</button>
            <a href="@(Url.Action<HooksController>(c => c.Index()))" class="btn btn-outline-secondary mr-auto waves-effect" data-shortcut="Esc">Cancel</a>
            @if (!Model.IsLoaded()) {
                <button type="submit" name="button" value="@nameof(HooksController.Delete)" class="btn btn-danger btn-load waves-effect" @if (Model.IsCore()) { <text> disabled</text> }>Delete</button>
            } else if (Model.IsEnabled) {
                <button type="submit" name="button" value="@nameof(HooksController.Disable)" class="btn btn-warning btn-load waves-effect" @if (Model.IsCore()) { <text> disabled</text> }>Disable</button>
            } else {
                <button type="submit" name="button" value="@nameof(HooksController.Enable)" class="btn btn-success btn-load waves-effect">Enable</button>
            }
        </div>
    }
</div>
