@using System.Text.RegularExpressions
@model Message
@{
    MessengerModel parent = ViewBag.ParentModel;

    // strip HTML and whitespace and check zero-length
    string emoji = !Model.Html.IsNullOrEmpty() && Regex.Replace(Model.Html, "<[^>]*>|\\s+", "").Length == 0 ? " emoji" : "";
    bool attachments = Model.AttachmentIds.Any();
    var images = attachments ? Model.Attachments.Where(x => FileHelper.IsWebImage(x.Name)) : new List<Weavy.Core.Models.File>();
    var files = attachments ? Model.Attachments.Where(x => !FileHelper.IsWebImage(x.Name)) : new List<Weavy.Core.Models.File>();
    var width = images.FirstOrDefault()?.Width;
}

@if (Model.CreatedById == UserService.SystemId && parent.Other?.Id != UserService.SystemId) {
    <div class="message system" data-message="@Model.Id">
        <a id="message-@Model.Id"></a>
        <div class="bubble">
            @Html.Raw(Model.Html)
        </div>
    </div>
} else if (Model.CreatedById == User.Id) {
    <div class="message me@(emoji)" data-message="@Model.Id">
        <a id="message-@Model.Id"></a>
        
        <div class="bubble">
            @if (images.Any()) {
                <div class="card-images" @(width != null ? Html.Raw(@"style=""width:" + @width + @"px""") : null )>
                    @{ Html.RenderPartial("_ImageGrid", images); }
                </div>
            }

            @if (files.Any()) {
                <div class="card-files">
                    @{ Html.RenderPartial("_Attachments", files); }
                </div>
            }

            <div class="text">@Html.Raw(Model.Html)</div>
            <div class="meta">
                @Html.Time(Model.CreatedAt, "t")
            </div>

            @if (!Model.ContextUrl.IsNullOrDefault()) {
                var origin = new Uri(Model.ContextUrl).GetLeftPart(System.UriPartial.Authority);
                <div class="context-link">
                    <img class="icon" src="https://www.google.com/s2/favicons?domain=@origin">
                    <a class="text" href="@Model.ContextUrl" target="_blank" title="Open in context - @Model.ContextUrl" data-context-url="@Model.ContextUrl" data-weavy-context-url="@Model.Url(absolute: true)" data-weavy-context-space="@Model.SpaceId">@Model.ContextTitle</a>
                    <a class="link-open" href="@Model.ContextUrl" target="_blank" title="Open in context - @Model.ContextUrl" data-context-url="@Model.ContextUrl" data-weavy-context-url="@Model.Url(absolute: true)" data-weavy-context-space="@Model.SpaceId">@Html.SvgIcon("open-in-new", size: 18)</a>
                </div>
            }
        </div>
        

        @if (parent.Messages.Skip == 0) {
            // we only want the status indicator on the first "page" of messages
            var next = Model.CreatedById == User.Id ? parent.Messages.FirstOrDefault(x => x.CreatedById == User.Id && x.CreatedAt > Model.CreatedAt) : null;
            var members = parent.Conversation.Members.Where(x => x.Id != User.Id).ToList();
            if (next != null) {
                if (members.Any(x => x.ReadAt >= Model.CreatedAt && x.ReadAt < next.CreatedAt)) {
                    <div class="status status-read">
                        @foreach (var member in members.Where(x => x.ReadAt >= Model.CreatedAt && x.ReadAt < next.CreatedAt)) {
                            @member.AvatarImg(18, retina: true, htmlAttributes: new { title = $"Seen by {member.Title}", data_user = member.Id })
                        }
                    </div>
                }
            } else if (members.Any(x => x.ReadAt >= Model.CreatedAt)) {
                <div class="status status-read">
                    @foreach (var member in members.Where(x => x.ReadAt >= Model.CreatedAt)) {
                        @member.AvatarImg(18, retina: true, htmlAttributes: new { title = $"Seen by {member.Title}", data_user = member.Id })
                    }
                </div>
            } else if (members.Any(x => x.DeliveredAt >= Model.CreatedAt)) {
                <div class="status status-delivered" title="Delivered">
                    @Html.SvgIcon("check-circle", size: 18)
                </div>
            } else {
                <div class="status status-sent" title="Sent">
                    @Html.SvgIcon("check-circle-outline", size: 18)
                </div>
            }
        }

    </div>

} else {
    <div class="message@(emoji)" data-message="@Model.Id">
        <a id="message-@Model.Id"></a>
        <a class="mr-2" href="#" data-profile="@Model.CreatedById">@Model.CreatedBy.AvatarImg(32, retina: true)</a>
          
        <div class="bubble">
            @if (parent.Conversation.IsRoom) {
                <div class="from">
                    <a href="#" data-profile="@Model.CreatedById">@Model.CreatedBy.Title</a>
                </div>
            }

            @if (images.Any()) {
                <div class="card-images" @(width != null ? Html.Raw(@"style=""width:" + @width + @"px""") : null )>
                    @{ Html.RenderPartial("_ImageGrid", images); }
                </div>
            }

            @if (files.Any()) {
                <div class="card-files">
                    @{ Html.RenderPartial("_Attachments", files); }
                </div>
            }

            <div class="text">@Html.Raw(Model.Html)</div>
            <div class="meta">
                @Html.Time(Model.CreatedAt, "t")
            </div>

            @if (!Model.ContextUrl.IsNullOrDefault()) {
                var origin = new Uri(Model.ContextUrl).GetLeftPart(System.UriPartial.Authority);
                <div class="context-link">
                    <img class="icon" src="https://www.google.com/s2/favicons?domain=@origin">
                    <a class="text" href="@Model.ContextUrl" target="_blank" title="Open in context - @Model.ContextUrl" data-context-url="@Model.ContextUrl" data-weavy-context-url="@Model.Url(absolute: true)" data-weavy-context-space="@Model.SpaceId">@Model.ContextTitle</a>
                    <a class="link-open" href="@Model.ContextUrl" target="_blank" title="Open in context - @Model.ContextUrl" data-context-url="@Model.ContextUrl" data-weavy-context-url="@Model.Url(absolute: true)" data-weavy-context-space="@Model.SpaceId">@Html.SvgIcon("open-in-new", size: 18)</a>
                </div>
            }
        </div>
    </div>
}
