@model HomeModel

@{
    Title = WeavyContext.Current.System.Name;
}

<div class="cover">
    <div class="container d-flex flex-column">
        @if (User.SystemPermissions.Contains(Permission.ManageSystem) && Theme.Icon == null) {
            <a href="@(Url.Action<Weavy.Web.Areas.Manage.Controllers.HomeController>(c => c.Theme()))" class="my-4 d-flex flex-column align-items-center mx-auto btn btn-outline-primary border-transparent">
                @Html.IconImg(128)
                <div class="small">Add your logo...</div>
            </a>
        } else {
            <div class="my-4 d-flex flex-column align-items-center mx-auto">
                @Html.IconImg(128)
            </div>

        }
        <form action="@(Url.Action<HomeController>(c => c.Search(null, null)))" method="get" class="main-search" data-turboform>
            <div class="form-group" role="search">
                <input id="weavy-main-search" class="form-control" type="search" name="q" value="" placeholder="Search..." />
                <button type="submit" class="btn btn-icon">@Html.SvgIcon("magnify")</button>
            </div>
        </form>
    </div>

    @if (User.SystemPermissions.Contains(Permission.ManageSystem)) {
        <div class="top-right d-flex align-items-center">
            <a href="@(Url.Action<Weavy.Web.Areas.Manage.Controllers.HomeController>(c => c.Index()))" class="btn btn-icon">
                @if (Model.ManageAlert) {
                    @Html.SvgIcon("alert", "warning")
                } else {
                    @Html.SvgIcon("settings")
                }
            </a>
            <a href="@(Url.Action<Weavy.Web.Areas.Manage.Controllers.HomeController>(c => c.Index()))" class="d-none d-md-inline-block text-muted pr-1">Settings</a>
        </div>
    }
</div>


@if (WeavyContext.Current.HQ != null) {
    <div class="container mt-4">
        <div class="cover cover-bg rounded d-flex flex-column container">
            <a class="my-3 d-flex text-light" href="@WeavyContext.Current.HQ.Url()">
                @WeavyContext.Current.HQ.AvatarImg(64)
                <div class="ml-3 d-flex flex-column justify-content-around">
                    <h4 class="display-4 mr-4">@WeavyContext.Current.HQ.Title</h4>
                    @if (!@WeavyContext.Current.HQ.Description.IsNullOrEmpty()) {
                        <div>@WeavyContext.Current.HQ.Description</div>
                    }
                </div>
            </a>
            @if (User.SystemPermissions.Contains(Permission.ManageSystem)) {
                <div class="dropdown top-right">
                    <button type="button" class="btn btn-icon dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-label="Toggle Dropdown">
                        @Html.SvgIcon("dots-vertical")
                    </button>
                    <div class="dropdown-menu dropdown-menu-right">
                        @if (User.SystemPermissions.Contains(Permission.ManageSystem)) {
                            <span class="dropdown-item" data-toggle="modal" data-target="#main-space-dialog" data-keyboard="true">@Html.SvgIcon("heart-box-outline") Select main space</span>
                            <form action="@(Url.Action<HomeController>(c => c.SetHQ(null)))" method="post" data-turboform>
                                @Html.HttpMethodOverride(HttpVerbs.Put)
                                <button type="submit" class="dropdown-item">@Html.SvgIcon("minus-box-outline") Unset main space</button>
                            </form>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
} else if (User.SystemPermissions.Contains(Permission.ManageSystem)) {
    <div class="container mt-4">
        @if (Model.HQSpaces.Any()) {
            <a href="#main-space-dialog" class="alert alert-transparent d-flex cover cover-bg" data-toggle="modal" data-target="#main-space-dialog" data-keyboard="true">
                @Html.SvgIcon("information", size: 36, htmlAttributes: new { @class = "align-self-start flex-noscale mt-1 mr-2 d-none d-sm-block" })
                <span>
                    <strong>Set up your main space</strong>.
                    The main space is the communications hub for your organization. It's a great place to put organization-wide announcements, notes and stuff everyone needs to know.
                </span>
            </a>
        } else {
            <a href="@(Url.Action<HomeController>(c => c.HQ()))" class="alert alert-transparent d-flex cover cover-bg">
                @Html.SvgIcon("information", size: 36, htmlAttributes: new { @class = "align-self-start flex-noscale mt-1 mr-2 d-none d-sm-block" })
                <span>
                    <strong>Set up your main space</strong>.
                    The main space is the communications hub for your organization. It's a great place to put organization-wide announcements, notes and stuff everyone needs to know.
                </span>
            </a>
        }
    </div>
}


<div class="container d-flex flex-column mb-5">

    @if (Projects.Any()) {
        <h5 class="mt-4 mb-3"><a href="@(Url.Action<SpaceController>(c => c.Index(null,"projects",null)))">Projects</a></h5>
        <div class="cards">
            @foreach (var space in Projects) {
                <a class="card card-action" href="@space.Url()">
                    <div class="card-cover">
                        @Html.StarToggle(space, htmlAttributes: new { @class = "top-right" })
                        <div class="facepile">
                            @foreach (var member in SpaceService.GetMembers(space.Id, new MemberQuery { Top = 5, OrderBy = "Random" })) {
                                @member.AvatarImg(24)
                            }
                        </div>
                        @space.AvatarImg(64)
                    </div>
                    <div class="card-body d-flex">
                        <div class="card-title text-truncate w-100 mb-0">@space.Name</div>
                        <div>@Html.Badge(space.Privacy)</div>
                    </div>
                </a>

            }
        </div>
    } else {
        <h5 class="mt-4 mb-3 flex-order-last"><a href="@(Url.Action<SpaceController>(c => c.Index(null,"projects",null)))">Projects</a></h5>
        <div class="alert alert-info flex-order-last">
            Your haven't joined any <a href="@(Url.Action<SpaceController>(c => c.Index(null,"projects",null)))">spaces</a> yet.
        </div>
    }

    <h5 class="mt-4 mb-3"><a href="@(Url.Action<SpaceController>(c => c.Index(null,"teams",null)))">Teams</a></h5>

    @if (Teams.Any()) {
        <div class="list-group">
            @foreach (var space in Teams) {
                <div class="list-group-item list-group-item-action d-flex justify-content-between">
                    <a href="@space.Url()" class="flex-scale d-flex w-0 align-items-center">
                        @space.AvatarImg(48)
                        <span class="ml-2">@space.Name @if (space.Teamname != null) {<small class="text-dark">@@@space.Teamname</small>}</span>
                        @Html.StarToggle(space)
                    </a>
                    <div class="facepile">
                        @foreach (var member in SpaceService.GetMembers(space.Id, new MemberQuery { Top = 5, OrderBy = "Random" })) {
                            @member.AvatarLink(size: 32, presence: true)
                        }
                    </div>
                </div>
            }
        </div>
    } else {
        <div class="alert alert-info">
            Your haven't joined any <a href="@(Url.Action<SpaceController>(c => c.Index(null,"teams",null)))">teams</a> yet.
        </div>
    }
</div>

@if (User.SystemPermissions.Contains(Permission.ManageSystem) && Model.HQSpaces.Any()) {
    @section footer {
        <div class="modal" id="main-space-dialog" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    @using (Html.BeginForm(nameof(HomeController.HQ), null, FormMethod.Post, new { autocomplete = "off", data_turboform = "" })) {
                        @Html.HttpMethodOverride(HttpVerbs.Put)
                        <div class="modal-header">
                            <h5 class="modal-title">Set up your main space</h5>
                            <button type="button" class="btn btn-icon" data-dismiss="modal" aria-label="Close">@Html.SvgIcon("close")</button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label>Select an existing, or <a href="@(Url.Action<HomeController>(c => c.HQ()))">create a new</a>, space to use as your main space.</label>
                                <select class="form-control custom-select space-picker" name="id" id="id">
                                    <option></option>
                                    @Html.SelectOptions(Model.HQSpaces, WeavyContext.Current.HQ?.Id)
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-outline-secondary waves-effect" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary btn-load waves-effect">Save</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
}
