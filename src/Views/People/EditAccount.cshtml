@model EditAccountModel
@using Microsoft.Owin.Security
@{
    User user = Model.User;
    Title = "People";
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
}


@section navbar_left {
    <div class="navbar-icons">
        <a class="btn btn-icon" href="@user.Url()">@Html.SvgIcon("arrow-left")</a>
    </div>
}

@section navbar_secondary {
    @{Html.RenderPartial("_Navbar", user); }
}

<div class="container-fluid mt-3">

    @using (Html.BeginForm(nameof(PeopleController.UpdateAccount), typeof(PeopleController).ControllerName(), FormMethod.Post, new { id = "update-account-form", autocomplete = "off", data_turboform = "", novalidate = "" })) {
        @Html.HttpMethodOverride(HttpVerbs.Put)
        @Html.AntiForgeryToken()
        @Html.EditorsForModel(exclude: new string[] { nameof(Model.IsAdmin), nameof(Model.IsExternal), nameof(Model.IsSuspended) })

        <div class="form-group">
            <div class="custom-controls-stacked">
                @Html.EditorFor(x => Model.IsAdmin, additionalViewData: new { FormGroup = false })
                @Html.EditorFor(x => Model.IsExternal, additionalViewData: new { FormGroup = false })
                @Html.EditorFor(x => Model.IsSuspended, additionalViewData: new { FormGroup = false })
            </div>
        </div>
        <div class="form-buttons">
            <button type="submit" class="btn btn-primary btn-load waves-effect" title="Save">Save</button>
            <a href="@Model.User.Url()" class="btn btn-outline-secondary mr-auto waves-effect">Cancel</a>
        </div>
    }

    @if (user.Logins.Any()) {
        <h6>Linked accounts</h6>
        <ul class="list-unstyled">
            @foreach (Login login in user.Logins) {
                <li>@login.Provider / @(login.Email ?? login.ProviderId)</li>
            }
        </ul>
    }
</div>
