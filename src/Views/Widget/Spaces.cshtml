@model SearchResult<Space, SpaceQuery>
@{
    Layout = "_WidgetLayout.cshtml";
    Back = Url.Action(nameof(WidgetController.Index));
    Title = "Spaces";
}

@section navbar_secondary {
    <nav class="nav nav-tabs">
        @if (ViewContext.RouteData.Values["tab"] == null) {
            @(Html.ActionLink<WidgetController>(c => c.Spaces(null, "active"), text: "Active", htmlAttributes: new { @class = "nav-link active" }))
        } else {
            @(Html.ActionLink<WidgetController>(c => c.Spaces(null, "active"), text: "Active", htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
        }
        @(Html.ActionLink<WidgetController>(c => c.Spaces(null, "archived"), text: "Archived", htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
    </nav>
    @if (PermissionService.HasSystemPermission(Permission.CreateSpace)) {
        <div class="fab">
            <a class="btn btn-round btn-primary" href="@(Url.Action<WidgetController>(c => c.NewSpace()))" title="Add space">@Html.SvgIcon("plus")</a>
        </div>
    }
}

<div class="container-fluid my-3">
    <div class="pb-2">
        @(Html.FilterForm<WidgetController>(c => c.Spaces(null, ViewContext.RouteData.Values["tab"] as string), Model.Query))
    </div>
    @if (Model.HasItems()) {
        <table class="table table-hover table-spaces">
            <thead>
                <tr>
                    <th class="table-icon"></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th class="text-right">Members</th>
                    <th class="table-icon"></th>
                </tr>
            </thead>
            <tbody id="infinite-scroll-target">
                @{ Html.RenderPartial("_SpaceTable", Model); }
            </tbody>
        </table>
        @Html.ScrollMore(Model)

    } else if (!Model.Query.Text.IsNullOrWhiteSpace()) {
        <p class="mt-3">@Html.SearchResultText(Model)</p>
    }
</div>


