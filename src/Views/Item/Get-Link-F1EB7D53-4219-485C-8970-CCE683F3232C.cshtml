@model Link
@{
    Title = Model.Title ?? "Untitled";
    Back = Url.Back(Folder.Url());
    long? timestamp = ViewBag.Revision as long?;
    var linkProperties = LinkHelper.GetLinkProperties(Model);

}

@section navbar_middle {
<div class="navbar-middle">
    <span class="navbar-text">
        @Title
    </span>
    @Html.StarToggle(Model)
</div>
}

<div class="container my-3">
    <article class="item" data-entity="item" data-id="@Model.Id" data-item-id="@Model.Id">
        <header class="item-header">
            @if (Model.CreatedById == Model.ModifiedById) {
                <a class="btn btn-icon mr-1" href="@Model.CreatedBy.Url()">@Model.CreatedBy.AvatarImg(24)</a>
            } else {
                <a class="btn btn-icon mr-1" href="@Model.CreatedBy.Url()">@Model.CreatedBy.AvatarImg(24)</a>
                <a class="btn btn-icon mr-1" href="@Model.ModifiedBy.Url()">@Model.ModifiedBy.AvatarImg(24)</a>
            }

            <a href="@(Url.Action<ItemController>(c => c.Revisions(Model.Id)))" class="mr-1">@Html.Time(Model.ModifiedAt)</a>
            @if (timestamp != null) {
                <span class="badge badge-warning">revision</span>
            } else {
                @Html.ItemBadge(Model)
            }

            @if (Model is ITaggable && !Model.Tags.IsNullOrEmpty()) {
                <text>·</text> @Html.Raw(Model.Tags.Join(" ", tag => @"<span class=""badge badge-info"">" + tag + "</span>"))
            }

            <div class="navbar-icons ml-auto">
                @if (linkProperties.Kind != "link") {
                    <a class="btn btn-icon" href="@Model.Url" target="_blank" title="Open in @linkProperties.Kind">@Html.SvgIcon(linkProperties.Icon)</a>
                }
                @if (linkProperties.Editable) {
                    if (timestamp != null) {
                        <form action="@Url.Action(nameof(ItemController.Revert), null, new { id = Model.Id })" method="post">
                            @Html.HttpMethodOverride(HttpVerbs.Put)
                            @Html.Hidden(nameof(Model.Timestamp), timestamp)
                            <button type="submit" class="btn btn-icon" title="Revert">@Html.SvgIcon("undo", "icon")</button>
                        </form>
                    } else {
                        if (Model.HasPermission(Permission.Edit)) {
                            <a class="btn btn-icon" href="@Model.Url()/edit">@Html.SvgIcon("pencil", "icon")</a>
                        }
                        Html.RenderPartial("_ItemMenu", Model);
                    }
                }

            </div>
        </header>

        <section class="properties">
            @if (Model.Provider == "google-drive") {
                <iframe src="@Model.Url" class="google-drive-iframe"></iframe>
            } else if (Model.Provider == "custom") {
                if (Model.Embedded) {
                    <iframe src="@Model.Url" class="google-drive-iframe"></iframe>
                } else {
                    <div class="text-center">
                        <figure class="figure">
                            <a href="@Model.Url" target="_blank" class="figure-img img-fluid d-block mx-auto" alt="@Model.Title">@Html.SvgIcon(Model.IconName(), size: 48)</a>
                            <figcaption class="figure-caption"><a href="@Model.Url" target="_blank">@Model.Title</a></figcaption>
                        </figure>
                    </div>
                }
            }

        </section>

        @if (timestamp == null) {

            Html.RenderPartial("_Attachments");

            <section class="section-comments item-comments my-3">
                <h4 class="display-4"><span>Comments</span></h4>
                <div class="list-group comments" data-container="comments">
                    @Html.Partial("_Comments", Model.Comments)
                </div>
                @Html.Partial("_CommentForm", Model, new ViewDataDictionary() { { "container", ".comments" } })
            </section>

            Html.RenderPartial("_Subscribers");

            <footer class="item-footer"></footer>
        }
    </article>
</div>

@section footer {
    @{
        Html.RenderPartial("_FeedbackModal");
        Html.RenderPartial("_MoveModal");
        Html.RenderPartial("_ShareModal");
        Html.RenderPartial("_EditCommentModal");
    }
}
