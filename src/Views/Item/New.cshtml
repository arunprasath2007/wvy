@model Item
@{
    Title = "New " + Model.MetaData().Name;
    Back = (Model.Parent ?? (IEntity)Model.App).Url();

    var meta = Model.MetaData();
    var attachmentids = (IEnumerable<int>)ViewBag.Attachmentids; // transient files
}

<div class="container-fluid mt-3">
    @using (Html.BeginForm(nameof(AppController.Insert), typeof(AppController).ControllerName(), new { id = Model.AppId, guid = Model.ItemGuid }, FormMethod.Post, new { @class = (Model is IDraftable ? "autosave" : ""), autocomplete = "off", data_turboform = "", novalidate = "" })) {
        @Html.HiddenFor(x => Model.AppId);
        @Html.HiddenFor(x => Model.ParentId);
        <div id="attachments">
            @if (attachmentids != null && attachmentids.Any()) {
                foreach (var att in attachmentids) {
                    <input type="hidden" name="attachmentids" value="@att.ToString()" />
                }
            }
        </div>
        @Html.EditorsForModel()
        <div class="form-buttons">
            <button type="submit" class="btn btn-primary">@Model.MetaData().CreateVerb</button>
            @if (Model is IDraftable) {
                <button type="submit" class="btn btn-outline-secondary" name="operation" value="save">Save draft</button>
            }
            <button type="submit" class="btn btn-outline-secondary" name="operation" value="cancel">Cancel</button>
        </div>
    }
</div>

@if (Model.HasPropertyWithTemplate("Html")) {
    @section scripts{
        @Html.InitHtmlEditor()
    }
}
