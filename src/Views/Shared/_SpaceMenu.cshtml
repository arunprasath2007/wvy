@model Space

@if (Model.IsTrashed() && Model.HasPermission(Permission.Delete)) {
    <form action="@(Url.Action<SpaceController>(c => c.Restore(Model.Id)))" method="post" data-turboform>
        <button type="submit" class="btn btn-icon" title="Restore space">@Html.SvgIcon("backup-restore", "success")</button>
    </form>
}

@if (!Model.IsTrashed() && (Model.HasPermission(Permission.Edit) || Model.HasPermission(Permission.Delete) || (User.IsAdmin && !Model.HasPermission(Permission.Admin)) || Model.HasPermission(Permission.Join))) {
    <div class="dropdown">
        <button type="button" class="btn btn-icon dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-label="Toggle Dropdown">
            @Html.SvgIcon("dots-vertical")
        </button>
        <div class="dropdown-menu dropdown-menu-right">

            @if (Model.HasPermission(Permission.Edit)) {
                <a class="dropdown-item" href="@(Url.Action<SpaceController>(c => c.Edit(Model.Id)))">@Html.SvgIcon("pencil", "primary") Edit</a>
            }

            @Html.StarToggle(Model, false, new { @class = "dropdown-item" })

            @Html.SubscribeToggle(Model, new { @class = "dropdown-item" })

            @if (Model.HasPermission(Permission.Edit)) {
                if (Model.IsArchived()) {
                    <form action="@(Url.Action<SpaceController>(c => c.Unarchive(Model.Id)))" method="post" data-turboform>
                        <button type="submit" class="dropdown-item">@Html.SvgIcon("archive", "orange") Unarchive</button>
                    </form>
                } else {
                    <form action="@(Url.Action<SpaceController>(c => c.Archive(Model.Id)))" method="post" data-turboform>
                        <button type="submit" class="dropdown-item">@Html.SvgIcon("archive", "orange") Archive</button>
                    </form>
                }
            }

            @if (Model.HasPermission(Permission.Delete) && !Model.IsTrashed()) {
                <form action="@(Url.Action<SpaceController>(c => c.Trash(Model.Id)))" method="post">
                    @Html.AntiForgeryToken()
                    @Html.HttpMethodOverride(HttpVerbs.Delete)
                    <button type="submit" class="dropdown-item">@Html.SvgIcon("delete", "danger") Trash</button>
                </form>
            }

            @if (Model.IsMember) {
                if (User.IsAdmin && !Model.HasPermission(Permission.Admin)) {
                    // admins can take admin control of any space
                    <form action="@(Url.Action<SpaceController>(c => c.Admin(Model.Id)))" method="post" data-turboform>
                        @Html.AntiForgeryToken()
                        @Html.HttpMethodOverride(HttpVerbs.Put)
                        <button type="submit" class="dropdown-item">@Html.SvgIcon("account-key", "success") Make me admin</button>
                    </form>
                }

                if (Model.HasPermission(Permission.Join)) {
                    <form action="@(Url.Action<SpaceController>(c => c.Leave(Model.Id)))" method="post" data-turboform>
                        @Html.HttpMethodOverride(HttpVerbs.Delete)
                        <button type="submit" class="dropdown-item">@Html.SvgIcon("account-minus") Leave space</button>
                    </form>
                }
            } else {
                if (Model.HasPermission(Permission.Join)) {
                    if (!Model.IsMember) {
                        var pending = SpaceService.HasPendingMembershipRequest(Model.Id);
                        if (pending) {
                            <form action="@(Url.Action<SpaceController>(c => c.Leave(Model.Id)))" method="post" data-turboform>
                                @Html.HttpMethodOverride(HttpVerbs.Delete)
                                <button type="submit" class="dropdown-item">@Html.SvgIcon("account-minus") Undo membership request</button>
                            </form>
                        } else {
                            <form action="@(Url.Action<SpaceController>(c => c.Join(Model.Id)))" method="post" data-turboform>
                                <button type="submit" class="dropdown-item">@Html.SvgIcon("account-plus", "success") Join space</button>
                            </form>
                        }
                    }
                }
                if (User.IsAdmin) {
                    // admins can take admin control of any space
                    <form action="@(Url.Action<SpaceController>(c => c.Admin(Model.Id)))" method="post" data-turboform>
                        @Html.AntiForgeryToken()
                        @Html.HttpMethodOverride(HttpVerbs.Put)
                        <button type="submit" class="dropdown-item">@Html.SvgIcon("account-key", "success") Join as admin</button>
                    </form>
                }
            }

        </div>
    </div>
}
