@using Weavy.Web.Areas.Manage.Controllers
@model User
@{
    bool editing = ControllerName == typeof(PeopleController).ControllerName() && (ActionName == nameof(PeopleController.EditAccount) || ActionName == nameof(PeopleController.EditProfile) || ActionName == nameof(PeopleController.EditSettings));
    bool removeUnfollowed = ControllerName == typeof(PeopleController).ControllerName() && (ActionName == nameof(PeopleController.Index) && ((ViewContext.Controller.ValueProvider.GetValue("tab")?.RawValue as string) == "following") || ActionName == nameof(PeopleController.Following));
}
<div class="dropdown">
    <button type="button" class="btn btn-icon dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-label="Toggle Dropdown">
        @Html.SvgIcon("dots-vertical")
    </button>
    <div class="dropdown-menu dropdown-menu-right">

        <a class="dropdown-item" href="@(Url.Action<Weavy.Web.Areas.Messenger.Controllers.MessengerController>(c => c.GetConversationWithUser(Model.Id)))" data-role="messenger" target="_blank">@Html.SvgIcon("message-text") Message</a>

        @if (Model.HasPermission(Permission.Follow)) {
            <a class="dropdown-item" href="javascript:;" data-toggle="follow" data-following="@(Model.IsFollowed.ToString().ToLower())" data-id="@Model.Id" data-remove-unfollowed="@removeUnfollowed.ToString().ToLower()">@Html.SvgIcon("account") <div>@(Model.IsFollowed ? "Unfollow" : "Follow")</div></a>
        }

        @if (Model.HasPermission(Permission.Edit) && !editing) {
            if (Model.Id == User.Id) {
                <a class="dropdown-item" href="@Url.Action(nameof(AccountController.EditAccount), typeof(AccountController).ControllerName())">@Html.SvgIcon("pencil") Edit</a>
            } else {
                <a class="dropdown-item" href="@(Url.Action<PeopleController>(c => c.EditAccount(Model.Id)))">@Html.SvgIcon("pencil") Edit</a>
            }
        }

        @if (Model.HasPermission(Permission.Delete) && Model.Id != User.Id) {
            if (Model.IsTrashed) {
                <button type="button" class="dropdown-item" data-restore="user" data-id="@Model.Id">@Html.SvgIcon("backup-restore") Restore</button>
            } else {
                <button  type="button" class="dropdown-item" data-trash="user" data-id="@Model.Id">@Html.SvgIcon("delete") Trash</button>
            }
        }

    </div>
</div>

