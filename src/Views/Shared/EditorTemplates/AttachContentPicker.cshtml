@model int?
@{
    var prop = ViewData.ModelMetadata.ContainerType.GetProperty(ViewData.ModelMetadata.PropertyName);
    var meta = ViewData.ModelMetadata;
    var state = ViewData.ModelState[ViewData.ModelMetadata.PropertyName];
    var feedback = state?.Errors?.FirstOrDefault()?.ErrorMessage;
    bool group = ViewData["FormGroup"] as bool? ?? !meta.HideSurroundingHtml;
    bool label = ViewData["FormLabel"] as bool? ?? !meta.HideSurroundingHtml;
    bool text = (ViewData["FormText"] as bool? ?? true) && meta.Description != null;

    var attrs = new Dictionary<string, object>();
    if (feedback != null) {
        attrs.Append("class", "is-invalid");
    }
    if (prop.IsRequired()) {
        attrs["required"] = null;
    }

    var source = ViewData["Source"] as IContent;
    var spaces = SpaceService.Search(new SpaceQuery() { Archived = false, Filter = true, OrderBy = "Name" }).Where(x=>x.HasPermission(Permission.Create));
}


@if (group) {
    WriteLiteral(@"<div class=""form-group"">");
}

@if (label) {
    <label for="@ViewData.TemplateInfo.GetFullHtmlFieldId("space")">Space</label>
}

<select class="form-control custom-select space-picker" id="@ViewData.TemplateInfo.GetFullHtmlFieldId("space")" data-folder-picker="@ViewData.TemplateInfo.GetFullHtmlFieldId("")">
    @Html.SelectOptions(spaces, source?.SpaceId.Value)
</select>

@if (group) {
    WriteLiteral(@"</div>");
}


@if (group) {
    WriteLiteral(@"<div class=""form-group"">");
}

@if (label) {
    @Html.LabelFor(m => m)
}

<select class="form-control custom-select folder-picker" name="@ViewData.TemplateInfo.GetFullHtmlFieldName("")" id="@ViewData.TemplateInfo.GetFullHtmlFieldId("")" data-type="@(source != null ? source.Type.ToString().ToLower() : "File")" data-id="@(source?.Id)">
    @if (source != null) {
        @Html.FolderPickerOptions(source, source.SpaceId.Value)
    } else if (!spaces.IsNullOrEmpty()) {
        @Html.FolderPickerOptions(spaces.First().Id)
    }

</select>

@if (feedback != null) {
    <div class="invalid-feedback">@feedback</div>
} else if (text) {
    <div class="form-text">@meta.Description</div>
}

@if (group) {
    WriteLiteral(@"</div>");
}

