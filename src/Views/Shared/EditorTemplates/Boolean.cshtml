@model bool?
@{
    var prop = ViewData.ModelMetadata.ContainerType.GetProperty(ViewData.ModelMetadata.PropertyName);
    var meta = ViewData.ModelMetadata;
    var state = ViewData.ModelState[ViewData.ModelMetadata.PropertyName];
    var feedback = state?.Errors?.FirstOrDefault()?.ErrorMessage;
    bool group = ViewData["FormGroup"] as bool? ?? !meta.HideSurroundingHtml;
    bool label = ViewData["FormLabel"] as bool? ?? !meta.HideSurroundingHtml;
    bool text = (ViewData["FormText"] as bool? ?? true) && meta.Description != null;
    var attrs = new Dictionary<string, object>();
    attrs["type"] = "checkbox";
    attrs["class"] = "custom-control-input";
    if (feedback != null) {
        attrs.Append("class", "is-invalid");
    }
}

@if (group) {
    WriteLiteral(@"<div class=""form-check"">");
}

<label class="custom-control custom-checkbox">
    @Html.CheckBox("", Model.HasValue && Model.Value, attrs)
    <span class="custom-control-indicator"></span>
    <span class="custom-control-description">
        @Html.DisplayNameFor(m => m)
        @if (feedback != null) {
            <span class="invalid-feedback">@feedback</span>
        } else if (text) {
            <span class="form-text d-inline">@meta.Description</span>
        }
    </span>
</label>

@if (group) {
    WriteLiteral(@"</div>");
}
