@using Weavy.Web.Controllers
@model MembersListModel

@{
    Title = "Members";
}

@section navbar_secondary {
    <nav class="nav nav-tabs">
        @(Html.ActionLink<SpaceController>(c => c.Members(Space.Id, null), text: "All", htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
    </nav>
    @if (Space.HasPermission(Permission.AddMembers)) {
        <div class="fab">
            <button type="button" class="btn btn-round btn-primary waves-effect" data-toggle="modal" data-target="#add-dialog" data-keyboard="true" title="Add/invite members">@Html.SvgIcon("plus")</button>
        </div>
    }
}


<div class="container-fluid mt-3">

    @if (Space.IsPending) {
        <div class="alert alert-warning text-center">
            Your membership request is pending approval.
            <form class="d-inline" method="post" action="@(Url.Action<SpaceController>(c => c.Leave(Space.Id, null)))" data-turboform>
                @Html.HttpMethodOverride(HttpVerbs.Delete)
                <button type="submit" class="btn btn-link alert-link">Undo.</button>
            </form>
        </div>
    } else if (Space.HasPermission(Permission.Join) && !Space.IsMember) {
        <div class="alert alert-warning text-center">
            You are not a member of this space.
            <form class="d-inline" method="post" action="@(Url.Action<SpaceController>(c => c.Join(Space.Id)))" data-turboform>
                @if (Space.Approval == MembershipApproval.None) {
                    <button type="submit" class="btn btn-link alert-link">Join now.</button>
                } else {
                    <button type="submit" class="btn btn-link alert-link">Ask to join.</button>
                }
            </form>
        </div>
    }

    @if (Model.Members.HasItems() || Model.Invites.HasItems()) {
        <table class="table table-hover table-members">
            <thead>
                <tr>
                    <th class="table-icon"></th>
                    <th>Name</th>
                    <th class="table-icon"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var invite in Model.Invites) {
                    <tr class="table-warning">
                        <td class="table-icon"><img alt="" class="img-32 avatar" src="~/img/user-64x64.svg"></td>
                        <td>@invite.Email @Html.Badge(invite)</td>
                        <td class="table-icon">
                            @if (Space.IsMember && Space.HasPermission(Permission.Admin)) {
                                <div class="dropdown d-inline-block">
                                    <button type="button" class="btn btn-icon dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-label="Toggle Dropdown">
                                        @Html.SvgIcon("dots-vertical")
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-right">
                                        <form method="post" action="@(Url.Action<SpaceController>(c => c.RemoveInvite(Space.Id, invite.Id)))" data-turboform>
                                            @Html.HttpMethodOverride(HttpVerbs.Delete)
                                            <button type="submit" class="dropdown-item">@Html.SvgIcon("close") Remove invite</button>
                                        </form>
                                    </div>
                                </div>
                            }
                        </td>
                    </tr>
                }

                @foreach (var member in Model.Members) {
                    if (member.Value == null) {
                        // external users cannot see groups...
                        continue;
                    }

                    <tr data-href="@(member.Type == EntityType.User ? Url.Action<PeopleController>(c => c.Get(member.Id, null, null)) : Url.Action<GroupController>(c => c.Get(member.Id, null)))" @if (member.IsPending) { <text> class="table-warning" </text> }>
                        <td class="table-icon">@((member.Value as IHasAvatar).AvatarImg(32, presence: true))</td>
                        <td>
                            @if (member.Type == EntityType.User) {
                                var user = member.Value as User;
                                if (user.Username == user.Title) {
                                    <a href="@(Url.Action<PeopleController>(c => c.Get(user.Id, null, null)))"><small>@@@user.Username</small></a>
                                } else {
                                    <a href="@(Url.Action<PeopleController>(c => c.Get(user.Id, null, null)))">@user.Title</a> <small>@@@user.Username</small>
                                }
                            } else {
                                var group = member.Value as Group;
                                if (group.Groupname == group.Title) {
                                    <a href="@(Url.Action<GroupController>(c => c.Get(group.Id, null)))"><small>@@@group.Groupname</small></a>
                                } else {
                                    <a href="@(Url.Action<GroupController>(c => c.Get(group.Id, null)))">@group.Title</a> <small>@@@group.Groupname</small>
                                }
                            }
                            @Html.Badge(member)
                        </td>
                        <td class="table-icon">
                            @{ Html.RenderPartial("_MemberMenu", member);}
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if (Model.Members.IsNullOrEmpty()) {
        <form class="text-center text-muted" action="@(Url.Action<SpaceController>(c => c.Join(Space.Id)))" method="post" data-turboform>
            <p>
                No members in this space.
                @if (Space.HasPermission(Permission.Join)) {
                    <text>You can <button type="submit" class="btn btn-link btn-text">join</button> and be the first one here.</text>
                }
            </p>
        </form>
    }

    @if (Space.IsMember && Model.Members.Count == 1) {
        <p class="text-center text-muted">
            No other members in this space.
            @if (Space.HasPermission(Permission.AddMembers)) {
                <text><a href="javascript:;" data-toggle="modal" data-target="#add-dialog">Add some people</a> to start collaborating.</text>
            }
        </p>
    }
</div>

@section footer {
    <div class="modal" id="add-dialog" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                @using (Html.BeginForm(nameof(SpaceController.InsertMembers), null, new { id = Space.Id }, FormMethod.Post, new { autocomplete = "off", data_turboform = "" })) {
                    @Html.AntiForgeryToken()

                    <div class="modal-header">
                        <h5 class="modal-title">Add or invite members</h5>
                        <button type="button" class="btn btn-icon" data-dismiss="modal" aria-label="Close">
                            @Html.SvgIcon("close")
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label class="form-control-label" for="users">Add people by entering their username or email address below.</label>
                            <select class="form-control" name="users" multiple="multiple" data-role="users" data-user-invite style="width:100%;" autofocus></select>
                        </div>
                        <div class="form-group">
                            <p class="user-items"></p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary waves-effect" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary btn-load waves-effect" data-isuser="1">Add</button>
                    </div>
                }
            </div>
        </div>
    </div>
}
