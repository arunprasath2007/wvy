@using Weavy.Web.Controllers
@model MembersModel

@{
    Title = "Members";
    Back = Space.Url();
    var u = new User();
    string tab = ViewContext.RouteData.Values["tab"] as string;
}

@section navbar_secondary {
    <nav class="nav nav-tabs">
        @if (tab == null) {
            @(Html.ActionLink<SpaceController>(c => c.Members(Space.Id, "all", null), text: "All", htmlAttributes: new { @class = "nav-link active" }))
        } else {
            @(Html.ActionLink<SpaceController>(c => c.Members(Space.Id, "all", null), text: "All", htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
        }
        @(Html.ActionLink<SpaceController>(c => c.Members(Space.Id, "internal", null), text: "Internal", htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
        @(Html.ActionLink<SpaceController>(c => c.Members(Space.Id, "external", null), text: "External", htmlAttributes: new { @class = "nav-link" }, active: LinkActive.Path))
    </nav>
    @if (Space.HasPermission(Permission.AddMembers)) {
        <div class="fab">
            <button type="button" class="btn btn-round btn-primary" data-toggle="modal" data-target="#add-dialog" data-keyboard="true" title="Add/invite members">@Html.SvgIcon("plus")</button>
        </div>
    }
}

<div class="container-fluid mt-3">

    @if (Model.IsPending) {
        <div class="alert alert-warning text-center">
            Your membership request is pending approval.
            <form class="d-inline" method="post" action="@(Url.Action<SpaceController>(c => c.Leave(Space.Id)))" data-turboform>
                @Html.HttpMethodOverride(HttpVerbs.Delete)
                <button type="submit" class="btn btn-link alert-link">Undo.</button>
            </form>
        </div>
    }

    @if (Model.Members.HasItems() || Model.Invites.HasItems()) {
        <table class="table table-hover table-members">
            <thead>
                <tr>
                    <th class="table-icon"></th>
                    <th>Name</th>
                    <th class="table-icon"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var invite in Model.Invites) {
                    <tr class="table-warning">
                        <td class="table-icon">@u.AvatarImg(32)</td>
                        <td>@invite.Email @Html.Badge(invite)</td>
                        <td class="table-icon">
                            @if (Space.IsMember && Space.HasPermission(Permission.Admin)) {
                                <div class="dropdown d-inline-block">
                                    <button type="button" class="btn btn-icon dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-label="Toggle Dropdown">
                                        @Html.SvgIcon("dots-vertical")
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-right">
                                        <form method="post" action="@(Url.Action<SpaceController>(c => c.RemoveInvite(Space.Id, invite.Id)))" data-turboform>
                                            @Html.HttpMethodOverride(HttpVerbs.Delete)
                                            <button type="submit" class="dropdown-item">@Html.SvgIcon("close") Remove invite</button>
                                        </form>
                                    </div>
                                </div>
                            }
                        </td>
                    </tr>
                }

                @foreach (var member in Model.Members) {
                    <tr data-href="@member.Url()" data-modal class="@(member.IsPending ? "table-warning" : "") @(member.IsSuspended ? "table-suspended": "")">
                        <td class="table-icon">@(member.AvatarImg(32, presence: true))</td>
                        <td class="text-truncate">

                                @if (member.Username == member.Title) {
                                    <a href="@(Url.Action<PeopleController>(c => c.Get(member.Id)))"><small>@@@member.Username</small></a>
                                } else {
                                    <a href="@(Url.Action<PeopleController>(c => c.Get(member.Id)))">@member.Title</a> <small>@@@member.Username</small>
                                }
                                @Html.Badge(member)
                        </td>
                        <td class="table-icon">
                            <div class="d-flex justify-content-end">
                                @if (member.IsPending && Space.HasPermission(Permission.ApproveMembers)) {
                                    using (Html.BeginForm(nameof(SpaceController.ApproveMember), null, new { id = Space.Id, userid = member.Id }, FormMethod.Post, new { data_turboform = "" })) {
                                        <button type="submit" class="btn btn-icon">@Html.SvgIcon("check")</button>
                                    }
                                    using (Html.BeginForm(nameof(SpaceController.DenyMember), null, new { id = Space.Id, userid = member.Id }, FormMethod.Post, new { data_turboform = "" })) {
                                        @Html.HttpMethodOverride(HttpVerbs.Delete)
                                        <button type="submit" class="btn btn-icon">@Html.SvgIcon("close")</button>
                                    }
                                }

                                @{ Html.RenderPartial("_MemberMenu", member, new ViewDataDictionary { { nameof(Model.HasAdmin), Model.HasAdmin } });}
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if (!(tab?.Equals("external", StringComparison.OrdinalIgnoreCase) ?? false)) {
        if (Model.Members.IsNullOrEmpty()) {
            <form class="text-center text-muted" action="@(Url.Action<SpaceController>(c => c.Join(Space.Id)))" method="post" data-turboform>
                <p>
                    No members in this space.
                    @if (Space.HasPermission(Permission.Join)) {
                        <text>You can <button type="submit" class="btn btn-link btn-text">join</button> and be the first one here.</text>
                    }
                </p>
            </form>
        }

        if (Space.IsMember && Model.Members.Count == 1) {
            <p class="text-center text-muted">
                No other members in this space.
                @if (Space.HasPermission(Permission.AddMembers)) {
                    <text><a href="javascript:;" data-toggle="modal" data-target="#add-dialog">Add some people</a> to start collaborating.</text>
                }
            </p>
        }
    }
</div>

@section footer {
    @{
        Html.RenderPartial("_MembersAddModal");
    }
}
